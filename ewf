<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX1B79655B243244AE860B3454E84723B3">
		<Properties>
			<float name="AirDensity">0.00120000006</float>
			<bool name="AllowThirdPartySales">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AvatarUnificationMode">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="ClientAnimatorThrottling">0</token>
			<BinaryString name="CollisionGroupData">AQEABP////8HRGVmYXVsdA==</BinaryString>
			<Ref name="CurrentCamera">RBX84FECFC53AB84C4CAC31E6190ADAB2FC</Ref>
			<bool name="DefinesCapabilities">false</bool>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<bool name="FallHeightEnabled">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<token name="FluidForces">0</token>
			<Vector3 name="GlobalWind">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="Gravity">196.199997</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="IKControlConstraintSupport">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<token name="ModelStreamingBehavior">0</token>
			<token name="ModelStreamingMode">0</token>
			<token name="MoverConstraintRootBehavior">0</token>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PathfindingUseImprovedSearch">0</token>
			<token name="PhysicsImprovedSleep">0</token>
			<token name="PhysicsSteppingMethod">0</token>
			<token name="PlayerCharacterDestroyBehavior">0</token>
			<token name="PrimalPhysicsSolver">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="RejectCharacterDeletions">0</token>
			<token name="RenderingCacheOptimizations">0</token>
			<token name="ReplicateInstanceDestroySetting">0</token>
			<token name="Retargeting">0</token>
			<token name="SandboxedInstanceMode">0</token>
			<float name="ScaleFactor">1</float>
			<token name="SignalBehavior2">2</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">2</token>
			<bool name="StreamingEnabled">true</bool>
			<token name="StreamingIntegrityMode">3</token>
			<int name="StreamingMinRadius">64</int>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<token name="TouchEventsUseCollisionGroups">0</token>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000393</UniqueId>
			<OptionalCoordinateFrame name="WorldPivotData">
				<CFrame>
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CFrame>
			</OptionalCoordinateFrame>
		</Properties>
		<Item class="Terrain" referent="RBXC88080C6ACC94A6196DE5368154BA9BA">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">true</bool>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="GrassLength">0.699999988</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAb34+WFlWmJiYimFJz8unrJRsY2Rm3eTl6/3/lHxfeXBiS0pKjIJo/xhDUFRUhoZ2
zNLfaoZA///+//PAj5CH]]></BinaryString>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<bool name="SmoothVoxelsUpgraded">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000727</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0470588282</R>
					<G>0.329411775</G>
					<B>0.360784322</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="SpawnLocation" referent="RBX9CB1340E66FC467184BEF20060160580">
			<Properties>
				<bool name="AllowTeamChangeOnTouch">false</bool>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>12</X>
					<Y>0.5</Y>
					<Z>-18</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="DefinesCapabilities">false</bool>
				<int name="Duration">0</int>
				<bool name="EnableFluidForces">true</bool>
				<bool name="Enabled">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">SpawnLocation</string>
				<bool name="Neutral">true</bool>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<int name="TeamColor">194</int>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000728</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>12</X>
					<Y>1</Y>
					<Z>12</Z>
				</Vector3>
			</Properties>
			<Item class="Decal" referent="RBXFB880FF92A724B869D0DB299D2484FF8">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<Color3 name="Color3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<bool name="DefinesCapabilities">false</bool>
					<token name="Face">1</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Decal</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxasset://textures/SpawnLocation.png</url></Content>
					<float name="Transparency">0</float>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000729</UniqueId>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX360D8D82127E4D279BACC9DAB227B675">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Map</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">047d4c366c39edd00855b06200006dce</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX4CFA7B5CA0D24272BD85D9B4FFD97724">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Sell</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b0620000aebf</UniqueId>
				</Properties>
				<Item class="UnionOperation" referent="RBX7F457F6E63564864AE00C36AD58E6EB5">
					<Properties>
						<SharedString name="AeroMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<bool name="Anchored">true</bool>
						<Content name="AssetId"><url>https://www.roblox.com//asset/?id=3953382104</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>42.6195221</X>
							<Y>0.110015869</Y>
							<Z>-18.1557751</Z>
							<R00>0</R00>
							<R01>-1</R01>
							<R02>0</R02>
							<R10>1</R10>
							<R11>0</R11>
							<R12>-0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="CastShadow">true</bool>
						<BinaryString name="ChildData"></BinaryString>
						<SharedString name="ChildData2">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
						<int name="ComponentIndex">-1</int>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="EnableFluidForces">true</bool>
						<token name="FluidFidelityInternal">0</token>
						<token name="FormFactor">3</token>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Vector3 name="InitialSize">
							<X>0.220000148</X>
							<Y>12.499999</Y>
							<Z>12.500001</Z>
						</Vector3>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">288</token>
						<string name="MaterialVariantSerialized"></string>
						<BinaryString name="MeshData"></BinaryString>
						<SharedString name="MeshData2">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<string name="Name">Sell</string>
						<bool name="OffCentered">false</bool>
						<SharedString name="PhysicalConfigData">AqwvCzkKeQPpmqN+d0Dj1w==</SharedString>
						<BinaryString name="PhysicsData"></BinaryString>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<token name="RenderFidelity">1</token>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="SmoothingAngle">0</float>
						<int64 name="SourceAssetId">5027657873</int64>
						<BinaryString name="Tags"></BinaryString>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000a988</UniqueId>
						<Vector3 name="UnscaledCofm">
							<X>NAN</X>
							<Y>NAN</Y>
							<Z>NAN</Z>
						</Vector3>
						<Vector3 name="UnscaledVolInertiaDiags">
							<X>NAN</X>
							<Y>NAN</Y>
							<Z>NAN</Z>
						</Vector3>
						<Vector3 name="UnscaledVolInertiaOffDiags">
							<X>NAN</X>
							<Y>NAN</Y>
							<Z>NAN</Z>
						</Vector3>
						<float name="UnscaledVolume">NAN</float>
						<bool name="UsePartColor">true</bool>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="size">
							<X>0.220000148</X>
							<Y>39.5</Y>
							<Z>43.5</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Model" referent="RBX785EEFB4EE0245E287B28188B909AB8D">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Model</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<float name="ScaleFactor">6.06884432</float>
						<int64 name="SourceAssetId">15986460607</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b06200009e2a</UniqueId>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>54.5683632</X>
								<Y>16.0020962</Y>
								<Z>-21.2641735</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.772683263</R10>
								<R11>-0.634792149</R11>
								<R12>0</R12>
								<R20>0.634792149</R20>
								<R21>0.772683263</R21>
								<R22>0</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="Part" referent="RBXE4B66ED981EF453C9D27AB54C2E1C057">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>16.0020962</Y>
								<Z>-21.2641735</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.77268362</R10>
								<R11>-0.634792447</R11>
								<R12>0</R12>
								<R20>0.634792447</R20>
								<R21>0.77268362</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009e2b</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>39.4474869</X>
								<Y>12.1376886</Y>
								<Z>2.91304493</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX38A50FD8DBBD473FAA0023DBE83C5590">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>27.7253361</Y>
								<Z>-11.6330328</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.77268362</R10>
								<R11>-0.634792447</R11>
								<R12>0</R12>
								<R20>0.634792447</R20>
								<R21>0.77268362</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009e2c</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX91E9996CCD194B01A189C9D117065C74">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>23.0360451</Y>
								<Z>-15.4854889</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.77268362</R10>
								<R11>-0.634792447</R11>
								<R12>0</R12>
								<R20>0.634792447</R20>
								<R21>0.77268362</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009e2d</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX174CC12C9164429EBA5198453B483A90">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>18.3467426</Y>
								<Z>-19.337944</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.77268362</R10>
								<R11>-0.634792447</R11>
								<R12>0</R12>
								<R20>0.634792447</R20>
								<R21>0.77268362</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009e2e</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX8F9BE7772CD645FEB0C925FF94407DF7">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>13.6574478</Y>
								<Z>-23.1904011</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.77268362</R10>
								<R11>-0.634792447</R11>
								<R12>0</R12>
								<R20>0.634792447</R20>
								<R21>0.77268362</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009e2f</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX6469A251BC5B4DDE96F58AA450BDDA61">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>8.96815205</Y>
								<Z>-27.0428581</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.77268362</R10>
								<R11>-0.634792447</R11>
								<R12>0</R12>
								<R20>0.634792447</R20>
								<R21>0.77268362</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009e30</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXCF120CB45AC34DBFA68FF9D4AD2F4704">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>4.27885723</Y>
								<Z>-30.8953171</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.77268362</R10>
								<R11>-0.634792447</R11>
								<R12>0</R12>
								<R20>0.634792447</R20>
								<R21>0.77268362</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009e31</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
				<Item class="Model" referent="RBX25B300BE81E2468EA69F46506CCCC1D9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Model</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<float name="ScaleFactor">6.06884432</float>
						<int64 name="SourceAssetId">15986460607</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b06200009b52</UniqueId>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>54.5683632</X>
								<Y>16.1137047</Y>
								<Z>-16.3246059</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.761446834</R10>
								<R11>0.648227453</R11>
								<R12>0</R12>
								<R20>-0.648227453</R20>
								<R21>0.761446834</R21>
								<R22>0</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="Part" referent="RBXB2204651318E4FDE8AEDD80575E77601">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>16.1137047</Y>
								<Z>-16.3246059</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.761446834</R10>
								<R11>0.648227453</R11>
								<R12>0</R12>
								<R20>-0.648227453</R20>
								<R21>0.761446834</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009b53</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>39.4474869</X>
								<Y>12.1376886</Y>
								<Z>2.91304517</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX6858197BE7FE4BE2A25932DD2593EB28">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>27.6664619</Y>
								<Z>-26.159586</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.761446834</R10>
								<R11>0.648227453</R11>
								<R12>0</R12>
								<R20>-0.648227453</R20>
								<R21>0.761446834</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009b54</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXD75A0F8C878F46E48FAA9967EE164978">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>23.0453587</Y>
								<Z>-22.2255936</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.761446834</R10>
								<R11>0.648227453</R11>
								<R12>0</R12>
								<R20>-0.648227453</R20>
								<R21>0.761446834</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009b55</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX357ADFE7CE294928B987EBE1D3DFBB72">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>18.4242516</Y>
								<Z>-18.2915993</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.761446834</R10>
								<R11>0.648227453</R11>
								<R12>0</R12>
								<R20>-0.648227453</R20>
								<R21>0.761446834</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009b56</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX2CED01D8B3C847549D1221FCE480B5CF">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>13.8031521</Y>
								<Z>-14.3576088</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.761446834</R10>
								<R11>0.648227453</R11>
								<R12>0</R12>
								<R20>-0.648227453</R20>
								<R21>0.761446834</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009b57</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX71399313B85246FFA041D57727A047FD">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>9.1820507</Y>
								<Z>-10.4236183</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.761446834</R10>
								<R11>0.648227453</R11>
								<R12>0</R12>
								<R20>-0.648227453</R20>
								<R21>0.761446834</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009b58</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX3112C86FE5434D24934754EB7B0C5765">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>54.5683632</X>
								<Y>4.56094933</Y>
								<Z>-6.48962688</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>1</R02>
								<R10>0.761446834</R10>
								<R11>0.648227453</R11>
								<R12>0</R12>
								<R20>-0.648227453</R20>
								<R21>0.761446834</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4278255360</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">512</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200009b59</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">2</token>
							<Vector3 name="size">
								<X>0.60688442</X>
								<Y>12.1376886</Y>
								<Z>3.64130664</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Model" referent="RBX2B709D522CE9417096E15F98B4799A94">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<token name="LevelOfDetail">0</token>
					<CoordinateFrame name="ModelMeshCFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
					<Vector3 name="ModelMeshSize">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="ModelStreamingMode">0</token>
					<string name="Name">RainyCloud</string>
					<bool name="NeedsPivotMigration">false</bool>
					<Ref name="PrimaryPart">null</Ref>
					<float name="ScaleFactor">0.568965554</float>
					<int64 name="SourceAssetId">5870965344</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b06200008741</UniqueId>
					<OptionalCoordinateFrame name="WorldPivotData">
						<CFrame>
							<X>42.0556793</X>
							<Y>5.09921265</Y>
							<Z>63.1596069</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CFrame>
					</OptionalCoordinateFrame>
				</Properties>
				<Item class="Model" referent="RBX6AD6C3DF4FF04778B39C066E56732B55">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<token name="LevelOfDetail">0</token>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Model</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<float name="ScaleFactor">0.568965554</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b06200008744</UniqueId>
						<OptionalCoordinateFrame name="WorldPivotData">
							<CFrame>
								<X>42.0556793</X>
								<Y>5.09921265</Y>
								<Z>63.1596069</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CFrame>
						</OptionalCoordinateFrame>
					</Properties>
					<Item class="Model" referent="RBXCB779BE942E14BEFAA171BE00F376B5C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<token name="LevelOfDetail">0</token>
							<CoordinateFrame name="ModelMeshCFrame">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
							<Vector3 name="ModelMeshSize">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="ModelStreamingMode">0</token>
							<string name="Name">RainyCloud</string>
							<bool name="NeedsPivotMigration">false</bool>
							<Ref name="PrimaryPart">null</Ref>
							<float name="ScaleFactor">0.568965554</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000874f</UniqueId>
							<OptionalCoordinateFrame name="WorldPivotData">
								<CFrame>
									<X>45.7428093</X>
									<Y>3.94988251</Y>
									<Z>61.4638672</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CFrame>
							</OptionalCoordinateFrame>
						</Properties>
						<Item class="Part" referent="RBXEA1CA92AFA0C4DA381399F70C9930CE1">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AudioCanCollide">true</bool>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>44.2869186</X>
									<Y>4.5854249</Y>
									<Z>68.9050446</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="EnableFluidForces">true</bool>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">272</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200008750</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>18.1176491</X>
									<Y>18.1176491</Y>
									<Z>18.1176491</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXB88E57F70850483AB52BC7D6081FD8FC">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AudioCanCollide">true</bool>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>52.6986923</X>
									<Y>4.5854249</Y>
									<Z>61.7873993</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="EnableFluidForces">true</bool>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">272</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200008751</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>11.6470594</X>
									<Y>11.6470594</Y>
									<Z>11.6470594</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXD4AE69D1397D436CAFF70EBAA3F12596">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AudioCanCollide">true</bool>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>48.4928131</X>
									<Y>8.16734219</Y>
									<Z>61.1403351</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="EnableFluidForces">true</bool>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">272</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200008752</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>11.000001</X>
									<Y>11.000001</Y>
									<Z>11.000001</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX38F0050B61554F409ED599CD5462F5C7">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AudioCanCollide">true</bool>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>51.0810471</X>
									<Y>6.20304966</Y>
									<Z>55.6403389</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="EnableFluidForces">true</bool>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">272</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200008753</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>9.70588398</X>
									<Y>9.70588398</Y>
									<Z>9.70588398</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX964973CD802344FEBE0C0583EB697AE6">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AudioCanCollide">true</bool>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>45.5810509</X>
									<Y>4.5854249</Y>
									<Z>52.0815125</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="EnableFluidForces">true</bool>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">272</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200008754</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>14.2352962</X>
									<Y>14.2352962</Y>
									<Z>14.2352962</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBX1726FEF60FEC440297E5B1051C7FA550">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AudioCanCollide">true</bool>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>48.4928131</X>
									<Y>0.3794837</Y>
									<Z>59.5226936</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="EnableFluidForces">true</bool>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">272</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200008755</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>12.2941189</X>
									<Y>12.2941189</Y>
									<Z>12.2941189</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXB8E75790B7824340B839781A7531721B">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AudioCanCollide">true</bool>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>39.7575035</X>
									<Y>3.61478186</Y>
									<Z>59.8462181</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="EnableFluidForces">true</bool>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">272</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200008756</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>13.5882368</X>
									<Y>13.5882368</Y>
									<Z>13.5882368</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Part" referent="RBXA94590E239DD46B38F20EB582DC91171">
							<Properties>
								<bool name="Anchored">true</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AudioCanCollide">true</bool>
								<float name="BackParamA">-0.5</float>
								<float name="BackParamB">0.5</float>
								<token name="BackSurface">0</token>
								<token name="BackSurfaceInput">0</token>
								<float name="BottomParamA">-0.5</float>
								<float name="BottomParamB">0.5</float>
								<token name="BottomSurface">0</token>
								<token name="BottomSurfaceInput">0</token>
								<CoordinateFrame name="CFrame">
									<X>38.4633904</X>
									<Y>4.5854249</Y>
									<Z>53.3756332</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<bool name="CanCollide">true</bool>
								<bool name="CanQuery">true</bool>
								<bool name="CanTouch">true</bool>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="CastShadow">true</bool>
								<string name="CollisionGroup">Default</string>
								<int name="CollisionGroupId">0</int>
								<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
								<PhysicalProperties name="CustomPhysicalProperties">
									<CustomPhysics>false</CustomPhysics>
								</PhysicalProperties>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="EnableFluidForces">true</bool>
								<float name="FrontParamA">-0.5</float>
								<float name="FrontParamB">0.5</float>
								<token name="FrontSurface">0</token>
								<token name="FrontSurfaceInput">0</token>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<float name="LeftParamA">-0.5</float>
								<float name="LeftParamB">0.5</float>
								<token name="LeftSurface">0</token>
								<token name="LeftSurfaceInput">0</token>
								<bool name="Locked">false</bool>
								<bool name="Massless">false</bool>
								<token name="Material">272</token>
								<string name="MaterialVariantSerialized"></string>
								<string name="Name">Part</string>
								<CoordinateFrame name="PivotOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<float name="Reflectance">0</float>
								<float name="RightParamA">-0.5</float>
								<float name="RightParamB">0.5</float>
								<token name="RightSurface">0</token>
								<token name="RightSurfaceInput">0</token>
								<int name="RootPriority">0</int>
								<Vector3 name="RotVelocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<float name="TopParamA">-0.5</float>
								<float name="TopParamB">0.5</float>
								<token name="TopSurface">0</token>
								<token name="TopSurfaceInput">0</token>
								<float name="Transparency">0</float>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200008757</UniqueId>
								<Vector3 name="Velocity">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<token name="formFactorRaw">1</token>
								<token name="shape">0</token>
								<Vector3 name="size">
									<X>5.17647123</X>
									<Y>5.17647123</Y>
									<Z>5.17647123</Z>
								</Vector3>
							</Properties>
						</Item>
					</Item>
					<Item class="Part" referent="RBX90409DCD0A8B447BB61CB6D4D862FB2B">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>51.5551872</X>
								<Y>6.86128902</Y>
								<Z>61.2965164</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200008758</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>5.17647123</X>
								<Y>5.17647123</Y>
								<Z>5.17647123</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXFD099B871B57455180A18992A17A50E8">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>36.0257683</X>
								<Y>6.86128902</Y>
								<Z>67.1200409</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200008759</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>18.1176491</X>
								<Y>18.1176491</Y>
								<Z>18.1176491</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX756EE36C5A7E4168AB264B9ADE7ED967">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>43.1434135</X>
								<Y>6.86128902</Y>
								<Z>75.5318222</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000875a</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>11.6470594</X>
								<Y>11.6470594</Y>
								<Z>11.6470594</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX3E3A1A2FCC03439C82DB40CA961E73EB">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>43.7904778</X>
								<Y>10.4432049</Y>
								<Z>71.325943</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000875b</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>11.000001</X>
								<Y>11.000001</Y>
								<Z>11.000001</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXD5D8F7A2358D418DA0A08A5231FBAA47">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>49.2904739</X>
								<Y>8.4789114</Y>
								<Z>73.9141693</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000875c</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>9.70588398</X>
								<Y>9.70588398</Y>
								<Z>9.70588398</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX9DD761A32A694B87A9392889B6B79D01">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>52.8493042</X>
								<Y>6.86128902</Y>
								<Z>68.4141769</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000875d</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>14.2352962</X>
								<Y>14.2352962</Y>
								<Z>14.2352962</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXB09FF05371A7414F933BA2F78767D5B7">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>45.4081116</X>
								<Y>2.65534592</Y>
								<Z>71.325943</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000875e</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>12.2941189</X>
								<Y>12.2941189</Y>
								<Z>12.2941189</Z>
							</Vector3>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXBF23CA86844B44B98A21B1893D12D895">
						<Properties>
							<bool name="Anchored">true</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AudioCanCollide">true</bool>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>45.0845947</X>
								<Y>5.89064646</Y>
								<Z>62.5906334</Z>
								<R00>0</R00>
								<R01>0</R01>
								<R02>-1</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>1</R20>
								<R21>0</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">Default</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4294506744</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="EnableFluidForces">true</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">false</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Part</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000875f</UniqueId>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>13.5882368</X>
								<Y>13.5882368</Y>
								<Z>13.5882368</Z>
							</Vector3>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Part" referent="RBX6CC7299B093843A89F08113A6EA42A31">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-8</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284177243</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Baseplate</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000725</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">0</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2048</X>
					<Y>16</Y>
					<Z>2048</Z>
				</Vector3>
			</Properties>
			<Item class="Texture" referent="RBX9F3797D09C0140729096BE484CDA3211">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<Color3 name="Color3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<bool name="DefinesCapabilities">false</bool>
					<token name="Face">1</token>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Texture</string>
					<float name="OffsetStudsU">0</float>
					<float name="OffsetStudsV">0</float>
					<int64 name="SourceAssetId">-1</int64>
					<float name="StudsPerTileU">8</float>
					<float name="StudsPerTileV">8</float>
					<BinaryString name="Tags"></BinaryString>
					<Content name="Texture"><url>rbxassetid://6372755229</url></Content>
					<float name="Transparency">0.800000012</float>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000726</UniqueId>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX84FECFC53AB84C4CAC31E6190ADAB2FC">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>-71.4508972</X>
					<Y>134.828079</Y>
					<Z>-20.4928341</Z>
					<R00>0.358421206</R00>
					<R01>0.43283394</R01>
					<R02>-0.827157199</R02>
					<R10>-0</R10>
					<R11>0.886024714</R11>
					<R12>0.463638037</R12>
					<R20>0.933560014</R20>
					<R21>-0.166177705</R21>
					<R22>0.317570031</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>-69.7965546</X>
					<Y>133.900787</Y>
					<Z>-21.127985</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000593e</UniqueId>
				<bool name="VRTiltAndRollEnabled">false</bool>
			</Properties>
		</Item>
	</Item>
	<Item class="TimerService" referent="RBXD3C92EFB491444ACB14B42092F9E20C5">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TimerService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000031e</UniqueId>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBXA8FA6F8F5E504B929DC117FED9A5A47B">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AudioApiByDefault">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="CharacterSoundsUseNewApi">0</token>
			<token name="DefaultListenerLocation">3</token>
			<bool name="DefinesCapabilities">false</bool>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsNewExpForAudioApiByDefault">false</bool>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006b0</UniqueId>
			<token name="VolumetricAudio">1</token>
		</Properties>
	</Item>
	<Item class="VideoCaptureService" referent="RBX030C1B950A974C53B61EFE570434C1DC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VideoCaptureService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000032b</UniqueId>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX5D09554B885040AB9B4866EF59B798E3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000032c</UniqueId>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX12DB484A1E824D42B559D56844F8FC2F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000032d</UniqueId>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX9904B2CBB171426E9020956F531EBD96">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">true</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsAutoMigrated">true</bool>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006c3</UniqueId>
		</Properties>
	</Item>
	<Item class="Players" referent="RBXDD206AA096F94ADD9919A6300370EDC7">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BanningEnabled">true</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="CharacterAutoLoads">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPlayersInternal">60</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">60</int>
			<float name="RespawnTime">3</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006c5</UniqueId>
			<bool name="UseStrafingAnimations">false</bool>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD0C301BB4F724AA29A3F5817EE52EECE">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00000337</UniqueId>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX494DC5AA617F43A0885A81A44C9391CD">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00000339</UniqueId>
		</Properties>
	</Item>
	<Item class="MaterialService" referent="RBXE7BFB32352FD48C9A6D462F1CDF0F311">
		<Properties>
			<string name="AsphaltName">Asphalt</string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="BasaltName">Basalt</string>
			<string name="BrickName">Brick</string>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<string name="CardboardName">Cardboard</string>
			<string name="CarpetName">Carpet</string>
			<string name="CeramicTilesName">CeramicTiles</string>
			<string name="ClayRoofTilesName">ClayRoofTiles</string>
			<string name="CobblestoneName">Cobblestone</string>
			<string name="ConcreteName">Concrete</string>
			<string name="CorrodedMetalName">CorrodedMetal</string>
			<string name="CrackedLavaName">CrackedLava</string>
			<bool name="DefinesCapabilities">false</bool>
			<string name="DiamondPlateName">DiamondPlate</string>
			<string name="FabricName">Fabric</string>
			<string name="FoilName">Foil</string>
			<string name="GlacierName">Glacier</string>
			<string name="GraniteName">Granite</string>
			<string name="GrassName">Grass</string>
			<string name="GroundName">Ground</string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="IceName">Ice</string>
			<string name="LeafyGrassName">LeafyGrass</string>
			<string name="LeatherName">Leather</string>
			<string name="LimestoneName">Limestone</string>
			<string name="MarbleName">Marble</string>
			<string name="MetalName">Metal</string>
			<string name="MudName">Mud</string>
			<string name="Name">MaterialService</string>
			<string name="PavementName">Pavement</string>
			<string name="PebbleName">Pebble</string>
			<string name="PlasterName">Plaster</string>
			<string name="PlasticName">Plastic</string>
			<string name="RockName">Rock</string>
			<string name="RoofShinglesName">RoofShingles</string>
			<string name="RubberName">Rubber</string>
			<string name="SaltName">Salt</string>
			<string name="SandName">Sand</string>
			<string name="SandstoneName">Sandstone</string>
			<string name="SlateName">Slate</string>
			<string name="SmoothPlasticName">SmoothPlastic</string>
			<string name="SnowName">Snow</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006cb</UniqueId>
			<bool name="Use2022MaterialsXml">true</bool>
			<string name="WoodName">Wood</string>
			<string name="WoodPlanksName">WoodPlanks</string>
		</Properties>
	</Item>
	<Item class="TextChatService" referent="RBX64A8B11DEE34479C9F3CEBDA25B5BD25">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="ChatTranslationFTUXShown">true</bool>
			<bool name="ChatTranslationToggleEnabled">false</bool>
			<token name="ChatVersion">1</token>
			<bool name="CreateDefaultCommands">true</bool>
			<bool name="CreateDefaultTextChannels">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="HasSeenDeprecationDialog">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TextChatService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006cc</UniqueId>
			<bool name="isLegacyChatDisabled">false</bool>
		</Properties>
		<Item class="ChatWindowConfiguration" referent="RBX8DC0486CA5CC42F389E1902DC251E5CD">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2999999999999999889</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Medium.otf</url></CachedFaceId>
				</Font>
				<float name="HeightScale">1</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="HorizontalAlignment">1</token>
				<string name="Name">ChatWindowConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">18</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000733</UniqueId>
				<token name="VerticalAlignment">1</token>
				<float name="WidthScale">1</float>
			</Properties>
		</Item>
		<Item class="ChatInputBarConfiguration" referent="RBX426F5A1762894D9C8DC8D0D125A9D9C8">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutocompleteEnabled">true</bool>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2000000000000000111</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Medium.otf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<token name="KeyboardKeyCode">47</token>
				<string name="Name">ChatInputBarConfiguration</string>
				<Color3 name="PlaceholderColor3">
					<R>0.698039234</R>
					<G>0.698039234</G>
					<B>0.698039234</B>
				</Color3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Ref name="TargetTextChannel">null</Ref>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">18</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000734</UniqueId>
			</Properties>
		</Item>
		<Item class="BubbleChatConfiguration" referent="RBX681E2ED2F7DE4FB78D2B469AF58A4C6E">
			<Properties>
				<string name="AdorneeName">HumanoidRootPart</string>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.980392158</R>
					<G>0.980392158</G>
					<B>0.980392158</B>
				</Color3>
				<double name="BackgroundTransparency">0.10000000000000000555</double>
				<float name="BubbleDuration">15</float>
				<float name="BubblesSpacing">6</float>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<token name="Font">47</token>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Medium.otf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Vector3 name="LocalPlayerStudsOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="MaxBubbles">3</float>
				<float name="MaxDistance">100</float>
				<float name="MinimizeDistance">40</float>
				<string name="Name">BubbleChatConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<bool name="TailVisible">true</bool>
				<Color3 name="TextColor3">
					<R>0.223529413</R>
					<G>0.23137255</G>
					<B>0.239215687</B>
				</Color3>
				<int64 name="TextSize">20</int64>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000735</UniqueId>
				<float name="VerticalStudsOffset">0</float>
			</Properties>
			<Item class="UIGradient" referent="RBXFB3BEF06624246FAAB6F5969308C7ABB">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Enabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">UIGradient</string>
					<Vector2 name="Offset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="Rotation">0</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000736</UniqueId>
				</Properties>
			</Item>
			<Item class="ImageLabel" referent="RBX5EF8A941A7AF4274A6434F60124B7159">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">1</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="Image"><null></null></Content>
					<Color3 name="ImageColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<Vector2 name="ImageRectOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="ImageRectSize">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="ImageTransparency">0</float>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">ImageLabel</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<token name="ResampleMode">0</token>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<token name="ScaleType">0</token>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>100</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<Rect2D name="SliceCenter">
						<min>
							<X>0</X>
							<Y>0</Y>
						</min>
						<max>
							<X>0</X>
							<Y>0</Y>
						</max>
					</Rect2D>
					<float name="SliceScale">1</float>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UDim2 name="TileSize">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000737</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
			</Item>
			<Item class="UICorner" referent="RBX8DE3D6EEFF3A423E8B0E1071FEF715E2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<UDim name="CornerRadius">
						<S>0</S>
						<O>12</O>
					</UDim>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">UICorner</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000738</UniqueId>
				</Properties>
			</Item>
			<Item class="UIPadding" referent="RBX41FACF71AB684847B4F65761F9026084">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">UIPadding</string>
					<UDim name="PaddingBottom">
						<S>0</S>
						<O>8</O>
					</UDim>
					<UDim name="PaddingLeft">
						<S>0</S>
						<O>8</O>
					</UDim>
					<UDim name="PaddingRight">
						<S>0</S>
						<O>8</O>
					</UDim>
					<UDim name="PaddingTop">
						<S>0</S>
						<O>8</O>
					</UDim>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000739</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="ChannelTabsConfiguration" referent="RBXD224B76DF47F4D78B85322C4D075C74F">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0</double>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">false</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>700</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Bold.otf</url></CachedFaceId>
				</Font>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Color3 name="HoverBackgroundColor3">
					<R>0.490196079</R>
					<G>0.490196079</G>
					<B>0.490196079</B>
				</Color3>
				<string name="Name">ChannelTabsConfiguration</string>
				<Color3 name="SelectedTabTextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Color3 name="TextColor3">
					<R>0.686274529</R>
					<G>0.686274529</G>
					<B>0.686274529</B>
				</Color3>
				<int64 name="TextSize">18</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">1</double>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f5750000073a</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="PermissionsService" referent="RBX0BEFDD6131304F57BFE335F1FCFE84B8">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000033d</UniqueId>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBX40D957F521B34E87A7AB6454017C9BD1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="CustomPoliciesEnabled">false</bool>
			<bool name="DefinesCapabilities">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<bool name="PseudolocalizationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<int name="TextElongationFactor">0</int>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000033e</UniqueId>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBX603CC394C2A4429B96BA4D4D64F6EC5D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="EnableScriptCollabByDefaultOnLoad">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006d3</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX1ED5FA00A75D465CBF7BE6E2497FB2E8">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">true</bool>
			<token name="AvatarJointUpgrade_SerializedRollout">0</token>
			<float name="CameraMaxZoomDistance">128</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<float name="CharacterJumpHeight">9.99997425</float>
			<float name="CharacterJumpPower">59.0960007</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">false</bool>
			<float name="CharacterWalkSpeed">25</float>
			<bool name="ClassicDeath">true</bool>
			<bool name="DefinesCapabilities">false</bool>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<token name="EnableDynamicHeads">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<token name="LuaCharacterController">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<bool name="RagdollDeath">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006d5</UniqueId>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX8BB3B712E86642A2AB682C3BC516C442">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f5750000072b</UniqueId>
			</Properties>
			<Item class="LocalScript" referent="RBXF88229A8977A4A309290E2DD16B64CD5">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Shuriken</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{E0FFABA5-CDDF-4D96-B3FB-822F6BA4A43B}</string>
					<ProtectedString name="Source"><![CDATA[local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Remotes = ReplicatedStorage.Remotes

UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.UserInputType == Enum.UserInputType.MouseButton1
		or input.UserInputType == Enum.UserInputType.Touch
		or input.KeyCode == Enum.KeyCode.ButtonR2 then
		Remotes.Shuriken:FireServer()
	end
end)
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b0620000b8a2</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX4D62F47790914679B5AFAE574220FB65">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f5750000072c</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX52BAC3715AC244A9BF2BB35DE3819FAD">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006d6</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX7F9B9945D6C54CBFA889B64C290CDE6F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="RtlTextSupport">0</token>
			<token name="ScreenOrientation">4</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<Ref name="StudioDefaultStyleSheet">null</Ref>
			<Ref name="StudioInsertWidgetLayerCollectorAutoLinkStyleSheet">null</Ref>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006d7</UniqueId>
			<token name="VirtualCursorMode">0</token>
		</Properties>
		<Item class="ScreenGui" referent="RBXB3BAAD68899C4FF3847BA847D56220D4">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="ClipToDeviceSafeArea">true</bool>
				<bool name="DefinesCapabilities">false</bool>
				<int name="DisplayOrder">0</int>
				<bool name="Enabled">true</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Currency</string>
				<bool name="ResetOnSpawn">false</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<token name="SafeAreaCompatibility">1</token>
				<token name="ScreenInsets">2</token>
				<token name="SelectionBehaviorDown">0</token>
				<token name="SelectionBehaviorLeft">0</token>
				<token name="SelectionBehaviorRight">0</token>
				<token name="SelectionBehaviorUp">0</token>
				<bool name="SelectionGroup">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">047d4c366c39edd00855b06200005c71</UniqueId>
				<token name="ZIndexBehavior">0</token>
			</Properties>
			<Item class="Frame" referent="RBX7E227220C01A4E1AB9566489FDDC9C5F">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0.5</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">1</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">Frame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0.5</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.172000006</XS>
						<XO>0</XO>
						<YS>0.192000002</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b06200005cd6</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="Frame" referent="RBXF66032D6E307477EBD0A38138E381726">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.333333343</R>
							<G>0.333333343</G>
							<B>0.498039246</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Shuriken</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b06200005d21</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBX01EC68ED885C4C87833133CC9FC2284A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0.200000003</S>
								<O>0</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200005dcf</UniqueId>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX0DBFC65F31E646F9AC108120FEA56019">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.301960796</R>
								<G>0.301960796</G>
								<B>0.454901993</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Shadow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0.075000003</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200005e28</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">0</int>
						</Properties>
						<Item class="UICorner" referent="RBX5770F7836ECB448F945698E1E1CDFCA7">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0.200000003</S>
									<O>0</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200005e29</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageLabel" referent="RBX78EBA535C1D94386B5813C550C33B8E5">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="Image"><url>rbxassetid://124346446624936</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Currency</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.0500000007</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.185000002</XS>
								<XO>0</XO>
								<YS>0.75</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200005f04</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX116D2A45A3CE4AD0BCF5D7323A52698B">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0.200000003</S>
									<O>0</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200005fa5</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBXA028D7DFDDD04BE19F7C26B5688591E0">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>700</Weight>
								<Style>Normal</Style>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Amount</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.288471133</XS>
								<XO>0</XO>
								<YS>0.100000024</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.496044517</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">999.99T</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200005fc6</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX2014EE800BC441ECBA146A4498C83818">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>700</Weight>
								<Style>Normal</Style>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">CPS</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.288471103</XS>
								<XO>0</XO>
								<YS>0.600000143</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.351777673</XS>
								<XO>0</XO>
								<YS>0.400000036</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">(+1.5k/Sec)</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200006007</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBXA817A286FDDD40568DFB59A874381C94">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0</R>
								<G>1</G>
								<B>0</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>900</Weight>
								<Style>Normal</Style>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Buy</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.899999976</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.180000007</XS>
								<XO>0</XO>
								<YS>0.75</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">+</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">047d4c366c39edd00855b062000061af</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBXEC06F45BDCC94AB28084D3D387768387">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0.200000003</S>
									<O>0</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">047d4c366c39edd00855b062000061f0</UniqueId>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX379A16C0B289465F88847F6E860E87D7">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0</R>
									<G>0.647058845</G>
									<B>0</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Shadow</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0.075000003</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200006211</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UICorner" referent="RBXE694375D91384AB6BF74957122A3B2DC">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0.200000003</S>
										<O>0</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">047d4c366c39edd00855b06200006212</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="UIGridLayout" referent="RBX24AA66CFE07744F0A3DA8C8598619F65">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<UDim2 name="CellPadding">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0.0500000007</YS>
							<YO>0</YO>
						</UDim2>
						<UDim2 name="CellSize">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<bool name="DefinesCapabilities">false</bool>
						<token name="FillDirection">0</token>
						<int name="FillDirectionMaxCells">0</int>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<token name="HorizontalAlignment">1</token>
						<string name="Name">UIGridLayout</string>
						<token name="SortOrder">2</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="StartCorner">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b06200005d22</UniqueId>
						<token name="VerticalAlignment">1</token>
					</Properties>
				</Item>
				<Item class="UIAspectRatioConstraint" referent="RBXF3631E0393B74C75B16E7BD531A096F2">
					<Properties>
						<float name="AspectRatio">1.85774016</float>
						<token name="AspectType">0</token>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<token name="DominantAxis">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">UIAspectRatioConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b06200005d85</UniqueId>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX934472559A7B4FBA8286BC92476993F7">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.333333343</R>
							<G>0.333333343</G>
							<B>0.498039246</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<string name="Name">Gems</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b06200006273</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBX851A5B395F7D4C00932AD6B84D6E891B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0.200000003</S>
								<O>0</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200006274</UniqueId>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX5211AE52B1E7451BA4958F85291E6E7F">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0.301960796</R>
								<G>0.301960796</G>
								<B>0.454901993</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Shadow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0.075000003</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200006275</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">0</int>
						</Properties>
						<Item class="UICorner" referent="RBX77BE69B0F1CB444C8349C9C202DD8A03">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0.200000003</S>
									<O>0</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200006276</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ImageLabel" referent="RBX4DCE66032A5940DB9D70C23D55CC71FB">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="Image"><url>rbxassetid://83546110639727</url></Content>
							<Color3 name="ImageColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<string name="Name">Currency</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.0500000007</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="ResampleMode">0</token>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.185000002</XS>
								<XO>0</XO>
								<YS>0.75</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<float name="SliceScale">1</float>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UDim2 name="TileSize">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200006277</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="UICorner" referent="RBX96040C97C90B4C0489691D624C302327">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0.200000003</S>
									<O>0</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">047d4c366c39edd00855b06200006278</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBXF8E2D7F26D7246939F00AE92FF7A20BA">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>700</Weight>
								<Style>Normal</Style>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Amount</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.287999988</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.495999992</XS>
								<XO>0</XO>
								<YS>0.600000024</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">9999999</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">047d4c366c39edd00855b06200006279</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBXD67620941BCF46838B759DAD49B38050">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0.5</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoButtonColor">true</bool>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>0</R>
								<G>1</G>
								<B>0</B>
							</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>900</Weight>
								<Style>Normal</Style>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Ref name="HoverHapticEffect">null</Ref>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<bool name="Modal">false</bool>
							<string name="Name">Buy</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.899999976</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<Ref name="PressHapticEffect">null</Ref>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>0.180000007</XS>
								<XO>0</XO>
								<YS>0.75</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<token name="Style">0</token>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">+</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000627b</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="UICorner" referent="RBX8C3261574E484CF88631BC73363369F2">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<UDim name="CornerRadius">
									<S>0.200000003</S>
									<O>0</O>
								</UDim>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">UICorner</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">047d4c366c39edd00855b0620000627c</UniqueId>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX80F8637DC8704C17A502DA5166037A6E">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>0</R>
									<G>0.647058845</G>
									<B>0</B>
								</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="ClipsDescendants">false</bool>
								<bool name="DefinesCapabilities">false</bool>
								<bool name="Draggable">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<string name="Name">Shadow</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0.075000003</YS>
									<YO>0</YO>
								</UDim2>
								<Ref name="RootLocalizationTable">null</Ref>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<int64 name="SourceAssetId">-1</int64>
								<token name="Style">0</token>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">047d4c366c39edd00855b0620000627d</UniqueId>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="UICorner" referent="RBXEFC34C004D0442D9BA8744676C91E0EE">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<UDim name="CornerRadius">
										<S>0.200000003</S>
										<O>0</O>
									</UDim>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">UICorner</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">047d4c366c39edd00855b0620000627e</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBXC58C0FDBAC414921BFDFEE090185BA6D">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Manager</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{9A96ED08-4A2D-4CDF-AED5-CDA3C768E6DC}</string>
					<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local FormatNumber = require(ReplicatedStorage.Libs.FormatNumber.Simple)
local Remotes = ReplicatedStorage.Remotes

local Gui = script.Parent
local Frame = Gui.Frame

local Shuriken = Frame.Shuriken.Amount
local ShueikenPerSec = Frame.Shuriken.CPS
local BuyShuriken = Frame.Shuriken.Buy
local Gems = Frame.Gems.Amount
local BuyGems = Frame.Gems.Buy

local function UpdateCurrency(currency: "Shuriken" | "Gems", amount: number)
	amount = if amount then amount else 0
	amount = FormatNumber.FormatCompact(amount)
	if currency == "Shuriken" then
		Shuriken.Text = amount
	elseif currency == "Gems" then
		Gems.Text = amount
	end
end

UpdateCurrency("Shuriken", Remotes.GetData:InvokeServer("Shuriken"))

Remotes.UpdateShuriken.OnClientEvent:Connect(function(amount)
	UpdateCurrency("Shuriken", amount)
end)
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bc7e</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="ScreenGui" referent="RBX88B57F8B5198480E89336DF5A8151945">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="AutoLocalize">true</bool>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="ClipToDeviceSafeArea">true</bool>
				<bool name="DefinesCapabilities">false</bool>
				<int name="DisplayOrder">0</int>
				<bool name="Enabled">true</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">ShurikenButtons</string>
				<bool name="ResetOnSpawn">false</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<token name="SafeAreaCompatibility">1</token>
				<token name="ScreenInsets">1</token>
				<token name="SelectionBehaviorDown">0</token>
				<token name="SelectionBehaviorLeft">0</token>
				<token name="SelectionBehaviorRight">0</token>
				<token name="SelectionBehaviorUp">0</token>
				<bool name="SelectionGroup">false</bool>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">047d4c366c39edd00855b0620000ceb9</UniqueId>
				<token name="ZIndexBehavior">1</token>
			</Properties>
			<Item class="Frame" referent="RBXD98A5424E16B460BAA1DF581DBE50347">
				<Properties>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0.5</X>
						<Y>0</Y>
					</Vector2>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<bool name="AutoLocalize">true</bool>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">0</int>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="ClipsDescendants">false</bool>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Draggable">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<string name="Name">Frame</string>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.5</XS>
						<XO>0</XO>
						<YS>0.839999974</YS>
						<YO>0</YO>
					</UDim2>
					<Ref name="RootLocalizationTable">null</Ref>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.25</XS>
						<XO>0</XO>
						<YS>0.150000006</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<int64 name="SourceAssetId">-1</int64>
					<token name="Style">0</token>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cf1a</UniqueId>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
				</Properties>
				<Item class="UIListLayout" referent="RBX60F0980EE835427BB5C981A4D6484AD6">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<token name="FillDirection">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<token name="HorizontalAlignment">0</token>
						<token name="HorizontalFlex">0</token>
						<token name="ItemLineAlignment">0</token>
						<string name="Name">UIListLayout</string>
						<UDim name="Padding">
							<S>0.0700000003</S>
							<O>0</O>
						</UDim>
						<token name="SortOrder">2</token>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cf5b</UniqueId>
						<token name="VerticalAlignment">2</token>
						<token name="VerticalFlex">0</token>
						<bool name="Wraps">false</bool>
					</Properties>
				</Item>
				<Item class="ImageButton" referent="RBX325976D7583A4F84859650278B10CE08">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.670588255</R>
							<G>0.670588255</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Ref name="HoverHapticEffect">null</Ref>
						<Content name="HoverImage"><null></null></Content>
						<Content name="Image"><url>rbxassetid://124346446624936</url></Content>
						<Color3 name="ImageColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<bool name="Modal">false</bool>
						<string name="Name">Regular</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="PressHapticEffect">null</Ref>
						<Content name="PressedImage"><null></null></Content>
						<token name="ResampleMode">0</token>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.280000001</XS>
							<XO>0</XO>
							<YS>0.800000012</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<float name="SliceScale">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UDim2 name="TileSize">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cf5c</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBX7EEC97001EFB4E80B6B78B38658864AA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0.100000001</S>
								<O>0</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cf5d</UniqueId>
						</Properties>
					</Item>
					<Item class="UIStroke" referent="RBX13A24BD152BC4264B551CF2C2152A6C5">
						<Properties>
							<token name="ApplyStrokeMode">0</token>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0.325490206</R>
								<G>0.325490206</G>
								<B>0.48627454</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<token name="LineJoinMode">0</token>
							<string name="Name">UIStroke</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Thickness">3</float>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cf5e</UniqueId>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX288B3B7E56904525A933F816112875AA">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>700</Weight>
								<Style>Normal</Style>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Label</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>-0.550000012</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Regula Auto Clicker (OFF)</string>
							<Color3 name="TextColor3">
								<R>0.670588255</R>
								<G>0.670588255</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.600000024</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cf7f</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="ImageButton" referent="RBX6CC8AD2B6F6D4B1DA2C633EE599B6465">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.498039216</R>
							<G>0.400000006</G>
							<B>0.403921574</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Ref name="HoverHapticEffect">null</Ref>
						<Content name="HoverImage"><null></null></Content>
						<Content name="Image"><url>rbxassetid://124346446624936</url></Content>
						<Color3 name="ImageColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<bool name="Modal">false</bool>
						<string name="Name">Shuriken</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="PressHapticEffect">null</Ref>
						<Content name="PressedImage"><null></null></Content>
						<token name="ResampleMode">0</token>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.319999993</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<float name="SliceScale">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UDim2 name="TileSize">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cfe0</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBXA081BDC2645A465F9C3DFE8CFDE7EF2C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0.100000001</S>
								<O>0</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cfe1</UniqueId>
						</Properties>
					</Item>
					<Item class="UIStroke" referent="RBX8A4091D2D5A54354B0C7689CA6D6DAA9">
						<Properties>
							<token name="ApplyStrokeMode">0</token>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0.282352954</R>
								<G>0.227450997</G>
								<B>0.231372565</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<token name="LineJoinMode">0</token>
							<string name="Name">UIStroke</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Thickness">3</float>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cfe2</UniqueId>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX8C62A5B399CE4057A500D54DAA4FD4D7">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>700</Weight>
								<Style>Normal</Style>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Label</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>-0.344168127</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0.294168115</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Shuriken Button</string>
							<Color3 name="TextColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.600000024</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000cfe3</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="ImageButton" referent="RBX631C4146DACE496F9AD641138020606F">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="AutoButtonColor">true</bool>
						<bool name="AutoLocalize">true</bool>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>0.670588255</R>
							<G>0.670588255</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">0</int>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="ClipsDescendants">false</bool>
						<bool name="DefinesCapabilities">false</bool>
						<bool name="Draggable">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Ref name="HoverHapticEffect">null</Ref>
						<Content name="HoverImage"><null></null></Content>
						<Content name="Image"><url>rbxassetid://124346446624936</url></Content>
						<Color3 name="ImageColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<bool name="Modal">false</bool>
						<string name="Name">Fast</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<Ref name="PressHapticEffect">null</Ref>
						<Content name="PressedImage"><null></null></Content>
						<token name="ResampleMode">0</token>
						<Ref name="RootLocalizationTable">null</Ref>
						<float name="Rotation">0</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>0.280000001</XS>
							<XO>0</XO>
							<YS>0.800000012</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<float name="SliceScale">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<token name="Style">0</token>
						<BinaryString name="Tags"></BinaryString>
						<UDim2 name="TileSize">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000d004</UniqueId>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="UICorner" referent="RBXC8DE29095EFD4382BBBE43288A789BC9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<UDim name="CornerRadius">
								<S>0.100000001</S>
								<O>0</O>
							</UDim>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">UICorner</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000d005</UniqueId>
						</Properties>
					</Item>
					<Item class="UIStroke" referent="RBXC0CF3C623A64409DAB41F7D113AA907C">
						<Properties>
							<token name="ApplyStrokeMode">0</token>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<Color3 name="Color">
								<R>0.325490206</R>
								<G>0.325490206</G>
								<B>0.48627454</B>
							</Color3>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Enabled">true</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<token name="LineJoinMode">0</token>
							<string name="Name">UIStroke</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="Thickness">3</float>
							<float name="Transparency">0</float>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000d006</UniqueId>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBXA958E5E49C8041D3814FE7335A42F668">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0.5</X>
								<Y>0</Y>
							</Vector2>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="AutoLocalize">true</bool>
							<token name="AutomaticSize">0</token>
							<Color3 name="BackgroundColor3">
								<R>1</R>
								<G>1</G>
								<B>1</B>
							</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<token name="BorderMode">0</token>
							<int name="BorderSizePixel">0</int>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="ClipsDescendants">false</bool>
							<bool name="DefinesCapabilities">false</bool>
							<bool name="Draggable">false</bool>
							<Font name="FontFace">
								<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
								<Weight>700</Weight>
								<Style>Normal</Style>
							</Font>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<bool name="Interactable">true</bool>
							<int name="LayoutOrder">0</int>
							<float name="LineHeight">1</float>
							<string name="LocalizationMatchIdentifier"></string>
							<string name="LocalizationMatchedSourceText"></string>
							<int name="MaxVisibleGraphemes">-1</int>
							<string name="Name">Label</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<string name="OpenTypeFeatures"></string>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>-0.550000012</YS>
								<YO>0</YO>
							</UDim2>
							<bool name="RichText">false</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<int name="SelectionOrder">0</int>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<string name="Text">Fast  Auto Clicker (OFF)</string>
							<Color3 name="TextColor3">
								<R>0.670588255</R>
								<G>0.670588255</G>
								<B>1</B>
							</Color3>
							<token name="TextDirection">0</token>
							<bool name="TextScaled">true</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">
								<R>0</R>
								<G>0</G>
								<B>0</B>
							</Color3>
							<float name="TextStrokeTransparency">0.600000024</float>
							<float name="TextTransparency">0</float>
							<token name="TextTruncate">0</token>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000d007</UniqueId>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="UIAspectRatioConstraint" referent="RBXB87F8620F09E48149369123DD493AC34">
					<Properties>
						<float name="AspectRatio">3.45626044</float>
						<token name="AspectType">0</token>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<token name="DominantAxis">0</token>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">UIAspectRatioConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000d1a8</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBXFF597D035C2D4ABA8FFC2610991C6300">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Manager</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{61975624-9D16-4539-A192-430FCC316D65}</string>
					<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Remotes = ReplicatedStorage.Remotes

local Gui = script.Parent
local Frame = Gui.Frame

local Shuriken = Frame.Shuriken
local FastAuto = Frame.Fast
local RegularAuto = Frame.Regular

local STROKE_OFF_COLOR = Color3.fromRGB(93, 93, 139)
local STROKE_ON_COLOR = Color3.fromRGB(0, 158, 0)
local BUTTON_OFF_COLOR = Color3.fromRGB(171, 171, 255)
local BUTTON_ON_COLOR = Color3.fromRGB(0, 238, 0)
local SHURIKEN_TEXT_TEMPLATE = "TYPE  Auto Clicker (MODE)"

local RegularMode = false
local FastMode = false

local function UpdateButton(buttonType: "Regular" | "Fast", mode: boolean)
	local button
	if buttonType == "Regular" then
		button = RegularAuto
		RegularMode = mode
	else
		button = FastAuto
		FastMode = mode
	end
	
	if mode then
		button.BackgroundColor3 = BUTTON_ON_COLOR
		button.Label.Text = SHURIKEN_TEXT_TEMPLATE:gsub("TYPE", buttonType):gsub("MODE", "On")
		button.Label.TextColor3 = BUTTON_ON_COLOR
		button.UIStroke.Color = STROKE_ON_COLOR
	else
		button.BackgroundColor3 = BUTTON_OFF_COLOR
		button.Label.Text = SHURIKEN_TEXT_TEMPLATE:gsub("TYPE", buttonType):gsub("MODE", "Off")
		button.Label.TextColor3 = BUTTON_OFF_COLOR
		button.UIStroke.Color = STROKE_OFF_COLOR
	end
end

FastAuto.MouseButton1Click:Connect(function()
	Remotes.UpdateAutoClicker:FireServer("Fast")
end)
RegularAuto.MouseButton1Click:Connect(function()
	Remotes.UpdateAutoClicker:FireServer("Regular")
end)
Shuriken.MouseButton1Click:Connect(function()
	Remotes.Shuriken:FireServer()
end)

Remotes.UpdateAutoClicker.OnClientEvent:Connect(UpdateButton)
UpdateButton("Regular", Remotes.GetAutoClickMode:InvokeServer("Regular"))
UpdateButton("Fast", Remotes.GetAutoClickMode:InvokeServer("Fast"))]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00005d29</UniqueId>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="LocalizationService" referent="RBX3990A093948F479BA808950E7661CB37">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006d9</UniqueId>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBXF499F82C686D498CB4E143822E78A6BF">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006de</UniqueId>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX02604C47CD504EED83FE9BD217470962">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000034f</UniqueId>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXFB57FB7CFD834FC487496E0217B504AD">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00000350</UniqueId>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBX12DB165814F84CE7A6EB1FDC4A717793">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006e4</UniqueId>
		</Properties>
		<Item class="StringValue" referent="RBX039A9B1792584AB3AF36D9AFC5DC40FA">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f5750000072d</UniqueId>
				<string name="Value">{510B3285-D708-4E23-991C-45518F325309}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBXAAF1BD6811FC4BF79A97D0B76DED0B02">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00000354</UniqueId>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX8E67FCE528A649E9B1BB82332F2B2B1F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00000355</UniqueId>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX26EBCF69FC2D42138DB729F7E23C3906">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00000356</UniqueId>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBX39A90CABE9B74D9DABB7EA064973F383">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00000357</UniqueId>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBXCCF9AFAC17D54B9CBBED08679B28FBD5">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="AutomaticScaling">0</token>
			<bool name="AvatarGestures">false</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="ControllerModels">1</token>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="FadeOutViewOnCollision">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="LaserPointer">1</token>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006ec</UniqueId>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBXD787130B2D9B4AAD8B01DF4FD9527050">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000035c</UniqueId>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX0C89864494F243A39D53DA35D5821BE6">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000035d</UniqueId>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX35BD84A2A26E4104B62A9BF1D6B8ADC6">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006ef</UniqueId>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBX0D9C59F3E66C4A65BBD5AD3E98E0BE77">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000035f</UniqueId>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX284733851B0149D1A5319E57BF531E19">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LuaWebService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000036c</UniqueId>
		</Properties>
	</Item>
	<Item class="ProcessInstancePhysicsService" referent="RBXBE8092239292493BA880D2DF05F14C29">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ProcessInstancePhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000036d</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXF1BF309962504D6A83E10852D1FE3270">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f575000006ff</UniqueId>
		</Properties>
		<Item class="Folder" referent="RBX9D7F7015E4A8424FAF96F6F16D22B621">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Remotes</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">047d4c366c39edd00855b0620000b8a5</UniqueId>
			</Properties>
			<Item class="RemoteEvent" referent="RBX4F3F4C97DC0C488F91FED976CDC0E8BD">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Shuriken</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b0620000b8a6</UniqueId>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBX9D595FE7D3354BABAC3BF8084E6F9675">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">UpdateShuriken</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bc7d</UniqueId>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX3B6AD39BC473490B963BC677CED4A139">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">GetData</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bd37</UniqueId>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBX0BB83EEE8C9543B3B41FED2F95386C95">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">UpdateAutoClicker</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00005f72</UniqueId>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXB4CFF36756A24CAEAB7B4A251402B603">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">GetAutoClickMode</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00005f73</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX60943804F07A47F3B9825AEE924C6DF9">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Libs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfba</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX4C3C1BF352EE4CC9865E87B690EFF00F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">FormatNumber</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfbb</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBXF9F95FFDC19346468BD0D7C410D4FC17">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Main</string>
						<string name="ScriptGuid">{4FBDEA9D-EB5B-459E-9239-37FA579D358E}</string>
						<ProtectedString name="Source"><![CDATA[local _internal = require(script.Parent._internal)
local Notation = require(script.Notation)
local Precision = require(script.Precision)
local IntegerWidth = require(script.IntegerWidth)
local DecimalFormatSymbols = require(script.DecimalFormatSymbols)

local enums = _internal.enums

export type Notation = Notation.Notation
export type ScientificNotation = Notation.ScientificNotation
export type Precision = Precision.Precision
export type FractionPrecision = Precision.FractionPrecision
export type IntegerWidth = IntegerWidth.IntegerWidth
export type DecimalFormatSymbols = DecimalFormatSymbols.DecimalFormatSymbols

local NumberFormatter = { }
local NumberFormatter_methods = { }
local NumberFormatter_new = _internal.class.create_init_function(
	"NumberFormatter", nil,
	NumberFormatter_methods, nil,
	_internal.class.ImmutabilityType.NUMBER_FORMATTER
)

function NumberFormatter_methods.Notation(self: NumberFormatter, notation: Notation): NumberFormatter
	_internal.class.try_coerce(1, self, "NumberFormatter")
	notation = _internal.class.try_coerce(2, notation, "Notation")

	return NumberFormatter_new({
		key = "notation",
		value = notation,
		parent = _internal.class.get_data(self),
	})
end
function NumberFormatter_methods.Precision(self: NumberFormatter, precision: Precision): NumberFormatter
	_internal.class.try_coerce(1, self, "NumberFormatter")
	precision = _internal.class.try_coerce(2, precision, "Precision")

	return NumberFormatter_new({
		key = "precision",
		value = precision,
		parent = _internal.class.get_data(self),
	})
end
function NumberFormatter_methods.RoundingMode(self: NumberFormatter, roundingMode: number): NumberFormatter
	_internal.class.try_coerce(1, self, "NumberFormatter")
	roundingMode = _internal.class.try_coerce_enum(2, roundingMode, enums.RoundingMode)

	return NumberFormatter_new({
		key = "roundingMode",
		value = roundingMode,
		parent = _internal.class.get_data(self),
	})
end
function NumberFormatter_methods.Grouping(self: NumberFormatter, strategy: number): NumberFormatter
	_internal.class.try_coerce(1, self, "NumberFormatter")
	strategy = _internal.class.try_coerce_enum(2, strategy, enums.GroupingStrategy)

	return NumberFormatter_new({
		key = "grouping",
		value = strategy,
		parent = _internal.class.get_data(self),
	})
end
function NumberFormatter_methods.IntegerWidth(self: NumberFormatter, style: IntegerWidth): NumberFormatter
	_internal.class.try_coerce(1, self, "NumberFormatter")
	style = _internal.class.try_coerce(2, style, "IntegerWidth")

	return NumberFormatter_new({
		key = "integerWidth",
		value = style,
		parent = _internal.class.get_data(self),
	})
end
function NumberFormatter_methods.Symbols(self: NumberFormatter, symbols: DecimalFormatSymbols): NumberFormatter
	_internal.class.try_coerce(1, self, "NumberFormatter")
	symbols = _internal.class.try_coerce(2, symbols, "DecimalFormatSymbols")

	return NumberFormatter_new({
		key = "symbols",
		value = symbols,
		parent = _internal.class.get_data(self),
	})
end
function NumberFormatter_methods.Sign(self: NumberFormatter, style: number): NumberFormatter
	_internal.class.try_coerce(1, self, "NumberFormatter")
	style = _internal.class.try_coerce_enum(2, style, enums.SignDisplay)

	return NumberFormatter_new({
		key = "sign",
		value = style,
		parent = _internal.class.get_data(self),
	})
end
function NumberFormatter_methods.Decimal(self: NumberFormatter, style: number): NumberFormatter
	_internal.class.try_coerce(1, self, "NumberFormatter")
	style = _internal.class.try_coerce_enum(2, style, enums.DecimalSeparatorDisplay)

	return NumberFormatter_new({
		key = "decimal",
		value = style,
		parent = _internal.class.get_data(self),
	})
end

local function resolve_nf_data(data)
	return _internal.formatter_settings.resolve_settings(
		_internal.formatter_settings.linked_list_to_dict(data)
	)
end

function NumberFormatter_methods.Format(self: NumberFormatter, value: number): string
	local result
	local internal_settings
	local symbols
	local is_negt, is_zero
	local display_sign

	_internal.class.try_coerce(1, self, "NumberFormatter")
	if type(value) == "string" then
		error("Argument #2 as a string interpreted as decimal is not currently supported, please cast the argument to a double if you want the string to be interpreted as a double", 2)
	end
	value = _internal.class.try_coerce(2, value, "number")

	internal_settings = _internal.class.get_resolved_data(self, resolve_nf_data)
	symbols = internal_settings.symbols

	-- special values
	if value ~= value then
		-- Sign bit detection for NaN
		-- NaN payload ignored
		is_negt = string.byte(string.pack(">d", value)) >= 0x80
		-- intentionally set to true
		is_zero = true
		result = symbols[enums.ENumberFormatSymbols.kNaNSymbol]
	elseif value == math.huge or value == -math.huge then
		is_negt = value < 0
		is_zero = false
		result = symbols[enums.ENumberFormatSymbols.kInfinitySymbol]
	else
		local fmt, fmt_n, decimal_marker

		if value == 0 then
			is_negt = math.atan2(value, -1) < 0
			fmt, fmt_n, decimal_marker = nil, 0, 1
		else
			is_negt = value < 0
			fmt, fmt_n, decimal_marker =
				_internal.decimal_conversion.from_double(math.abs(value))
		end

		result, is_zero = _internal.format.format_unsigned_finite(
			fmt, fmt_n, decimal_marker, is_negt, internal_settings
		)
	end

	result = _internal.format.display_sign(
		result, is_negt, is_zero,
		internal_settings.displaySignAt, internal_settings.symbols
	)

	return result
end

function NumberFormatter_methods.ToSkeleton(self: NumberFormatter): (boolean, string)
	local c_self = _internal.class.try_coerce(1, self, "NumberFormatter")

	return _internal.skeleton.settings_to_skeleton(
		_internal.formatter_settings.linked_list_to_dict(c_self)
	)
end

function NumberFormatter.with(): NumberFormatter
	return NumberFormatter_new(nil)
end

function NumberFormatter.forSkeleton(skeleton: string): (boolean, string | NumberFormatter)
	local success, result

	skeleton = _internal.class.try_coerce(1, skeleton, "string")

	success, result = _internal.skeleton.to_option_linked_list(skeleton)

	return success, if success then NumberFormatter_new(result) else result
end

export type NumberFormatter = typeof(NumberFormatter_methods)
return table.freeze({
	NumberFormatter = table.freeze(NumberFormatter),
	Notation = Notation,
	Precision = Precision,
	RoundingPriority = enums.RoundingPriority,
	RoundingMode = enums.RoundingMode,
	GroupingStrategy = enums.GroupingStrategy,
	IntegerWidth = IntegerWidth,
	DecimalFormatSymbols = DecimalFormatSymbols,
	ENumberFormatSymbols = enums.ENumberFormatSymbols,
	SignDisplay = enums.SignDisplay,
	DecimalSeparatorDisplay = enums.DecimalSeparatorDisplay,
})]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfbc</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX9B7DDC3617F94C83978F808B1E854B1D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">DecimalFormatSymbols</string>
							<string name="ScriptGuid">{1B1551B6-6F92-4921-981C-CBB82A5F77DD}</string>
							<ProtectedString name="Source"><![CDATA[local _internal = require(script.Parent.Parent._internal)

local DecimalFormatSymbols = { }
local DecimalFormatSymbols_methods = { }
local DecimalFormatSymbols_new = _internal.class.create_init_function(
	"DecimalFormatSymbols", nil,
	DecimalFormatSymbols_methods, nil,
	_internal.class.ImmutabilityType.SYMBOLS
)

function DecimalFormatSymbols_methods.GetSymbol(self: DecimalFormatSymbols, symbol: number): string
	local c_self = _internal.class.try_coerce(1, self, "DecimalFormatSymbols")
	symbol = _internal.class.try_coerce_enum(2, symbol, _internal.enums.ENumberFormatSymbols)

	return c_self[symbol]
end

function DecimalFormatSymbols_methods.SetSymbol(self: DecimalFormatSymbols, symbol: number, value: string)
	local c_self = _internal.class.try_coerce(1, self, "DecimalFormatSymbols")
	symbol = _internal.class.try_coerce_enum(2, symbol, _internal.enums.ENumberFormatSymbols)
	value = _internal.class.try_coerce(3, value, "string")

	c_self[symbol] = value
end


function DecimalFormatSymbols.createWithLastResortData(): DecimalFormatSymbols
	return DecimalFormatSymbols_new({
		[_internal.enums.ENumberFormatSymbols.kDecimalSeparatorSymbol] = ".",
		[_internal.enums.ENumberFormatSymbols.kGroupingSeparatorSymbol] = "",
		[_internal.enums.ENumberFormatSymbols.kMinusSignSymbol] = "-",
		[_internal.enums.ENumberFormatSymbols.kPlusSignSymbol] = "+",
		[_internal.enums.ENumberFormatSymbols.kExponentialSymbol] = "E",
		[_internal.enums.ENumberFormatSymbols.kInfinitySymbol] = "∞",
		[_internal.enums.ENumberFormatSymbols.kNaNSymbol] = "\u{FFFD}",
	})
end

export type DecimalFormatSymbols = {
	GetSymbol: typeof(DecimalFormatSymbols_methods.GetSymbol),
	SetSymbol: typeof(DecimalFormatSymbols_methods.SetSymbol),
}
return table.freeze(DecimalFormatSymbols)]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfbd</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX68433FADDB0547ED915093B597B4E6C2">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">IntegerWidth</string>
							<string name="ScriptGuid">{E3024DE3-068C-48F7-AE9A-A1520C43C3AA}</string>
							<ProtectedString name="Source"><![CDATA[local _internal = require(script.Parent.Parent._internal)

local IntegerWidth = { }
local IntegerWidth_methods = { }
local IntegerWidth_new = _internal.class.create_init_function(
	"IntegerWidth",
	nil,
	IntegerWidth_methods, nil,
	_internal.class.ImmutabilityType.DEFAULT
)

function IntegerWidth_methods.TruncateAt(self: IntegerWidth, maxInt: number): IntegerWidth
	local c_self = _internal.class.try_coerce(1, self, "IntegerWidth")

	if tonumber(maxInt) and math.ceil(maxInt) == -1 then
		-- special case
		maxInt = -1
	else
		maxInt = _internal.class.try_coerce_range(1, maxInt, c_self.min, 999)
	end

	return IntegerWidth_new({
		min = c_self.min,
		max = maxInt,
	})
end


function IntegerWidth.zeroFillTo(minInt: number): IntegerWidth
	minInt = _internal.class.try_coerce_range(1, minInt, 0, 999)

	return IntegerWidth_new({
		min = minInt,
		max = -1,
	})
end

export type IntegerWidth = {
	TruncateAt: typeof(IntegerWidth_methods.TruncateAt),
}
return table.freeze(IntegerWidth)]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfbe</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXA4309880EE4049E8A3430A2D5C654352">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Notation</string>
							<string name="ScriptGuid">{3EDCC481-17A7-426D-9CD2-D98AB7352DB5}</string>
							<ProtectedString name="Source"><![CDATA[local _internal = require(script.Parent.Parent._internal)

local Notation = { }
local Notation_methods = { }
local Notation_new = _internal.class.create_init_function(
	"Notation",
	nil,
	Notation, nil,
	_internal.class.ImmutabilityType.DEFAULT
)


local ScientificNotation_methods = { }
local ScientificNotation_new = _internal.class.create_init_function(
	"ScientificNotation",
	"Notation",
	ScientificNotation_methods, Notation_methods,
	_internal.class.ImmutabilityType.DEFAULT
)

function ScientificNotation_methods.WithMinExponentDigits(self: ScientificNotation, minExponentDigits: number): ScientificNotation
	local c_self = _internal.class.try_coerce(1, self, "ScientificNotation")
	minExponentDigits = _internal.class.try_coerce_range(2, minExponentDigits, 1, 999)

	c_self = table.clone(c_self)
	c_self.minExponentDigits = minExponentDigits

	return ScientificNotation_new(c_self)
end

function ScientificNotation_methods.WithExponentSignDisplay(self: ScientificNotation, exponentSignDisplay: number): ScientificNotation
	local c_self = _internal.class.try_coerce(1, self, "ScientificNotation")
	exponentSignDisplay = _internal.class.try_coerce_enum(2, exponentSignDisplay, _internal.enums.SignDisplay)

	c_self = table.clone(c_self)
	c_self.exponentSignDisplay = exponentSignDisplay
	c_self.displayExponentSignAt = _internal.formatter_settings.generate_from_sign_enum(exponentSignDisplay)

	return ScientificNotation_new(c_self)
end


-- reserved
local CompactNotation_methods = { }
local CompactNotation_new = _internal.class.create_init_function(
	"CompactNotation", "Notation",
	CompactNotation_methods, Notation_methods,
	_internal.class.ImmutabilityType.DEFAULT
)


-- reserved
local SimpleNotation_methods = { }
local SimpleNotation_new = _internal.class.create_init_function(
	"SimpleNotation", "Notation",
	SimpleNotation_methods, Notation_methods,
	_internal.class.ImmutabilityType.DEFAULT
)


function Notation.scientific(): ScientificNotation
	return ScientificNotation_new({
		type = _internal.enums._Internal.NotationType.SCIENTIFIC,
		power10Scale = 1,
		minExponentDigits = 1,
		exponentSignDisplay = _internal.enums.SignDisplay.AUTO,
		displayExponentSignAt = _internal.formatter_settings.generate_from_sign_enum(
			_internal.enums.SignDisplay.AUTO),
	})
end

function Notation.engineering(): ScientificNotation
	return ScientificNotation_new({
		type = _internal.enums._Internal.NotationType.SCIENTIFIC,
		power10Scale = 3,
		minExponentDigits = 1,
		exponentSignDisplay = _internal.enums.SignDisplay.AUTO,
		displayExponentSignAt = _internal.formatter_settings.generate_from_sign_enum(
			_internal.enums.SignDisplay.AUTO),
	})
end

function Notation.compactWithSuffixThousands(suffixes: { string }): CompactNotation
	local empty_string_p

	suffixes = _internal.class.try_coerce(1, suffixes, "{string}")

	empty_string_p = table.find(suffixes, "")
	if empty_string_p then
		error(string.format("Index %d is an empty string, please double check the suffixes", empty_string_p), 2)
	elseif #suffixes == 0 then
		error("Suffixes is empty", 2)
	end

	return Notation_new({
		type = _internal.enums._Internal.NotationType.COMPACT,
		power10Scale = 3,
		suffixes = suffixes,
		suffixesLength = #suffixes,
	})
end

function Notation.simple(): SimpleNotation
	return Notation_new({
		type = _internal.enums._Internal.NotationType.SIMPLE,
	})
end

export type Notation = { }
export type ScientificNotation = {
	WithMinExponentDigits: typeof(ScientificNotation_methods.WithMinExponentDigits),
	WithExponentSignDisplay: typeof(ScientificNotation_methods.WithExponentSignDisplay)
}
export type CompactNotation = Notation
export type SimpleNotation = Notation
return table.freeze(Notation)]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfbf</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX3B254138A6284FF889BC073F4BFD4CAC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Precision</string>
							<string name="ScriptGuid">{9C6F3130-2028-4188-8F42-01D1FE9A2B2F}</string>
							<ProtectedString name="Source"><![CDATA[local _internal = require(script.Parent.Parent._internal)

local Precision = { }
local Precision_methods = { }
local Precision_new = _internal.class.create_init_function(
	"Precision", nil,
	Precision_methods, nil,
	_internal.class.ImmutabilityType.DEFAULT
)


local FractionPrecision_methods = { }
local FractionPrecision_new = _internal.class.create_init_function(
	"FractionPrecision", "Precision",
	FractionPrecision_methods, Precision_methods,
	_internal.class.ImmutabilityType.DEFAULT
)

function FractionPrecision_methods.WithMinDigits(self: FractionPrecision, minSignificantDigits: number): Precision
	local c_self = _internal.class.try_coerce(1, self, "FractionPrecision")
	minSignificantDigits = _internal.class.try_coerce_range(2, minSignificantDigits, 1, 999)

	return Precision_new({
		type = _internal.enums._Internal.PrecisionType.FRACTION_SIGNIFICANT,
		minFractionDigits = c_self.min,
		maxFractionDigits = c_self.max,
		minSignificantDigits = 1,
		maxSignificantDigits = minSignificantDigits,
		roundingPriority = _internal.enums.RoundingPriority.RELAXED,
		sourcedWithSignificantDigits = false,
	})
end

function FractionPrecision_methods.WithMaxDigits(self: FractionPrecision, maxSignificantDigits: number): Precision
	local c_self = _internal.class.try_coerce(1, self, "FractionPrecision")
	maxSignificantDigits = _internal.class.try_coerce_range(2, maxSignificantDigits, 1, 999)

	return Precision_new({
		type = _internal.enums._Internal.PrecisionType.FRACTION_SIGNIFICANT,
		minFractionDigits = c_self.min,
		maxFractionDigits = c_self.max,
		minSignificantDigits = 1,
		maxSignificantDigits = maxSignificantDigits,
		roundingPriority = _internal.enums.RoundingPriority.STRICT,
		sourcedWithSignificantDigits = false,
	})
end

function FractionPrecision_methods.WithSignificantDigits(self: FractionPrecision,
	minSignificantDigits: number, maxSignificantDigits: number, roundingPriority: number): Precision
	local c_self = _internal.class.try_coerce(1, self, "FractionPrecision")
	minSignificantDigits = _internal.class.try_coerce_range(2, minSignificantDigits, 1, 999)
	maxSignificantDigits = _internal.class.try_coerce_range(3, maxSignificantDigits, 1, 999)
	roundingPriority = _internal.class.try_coerce_enum(4, roundingPriority, _internal.enums.RoundingPriority)

	return Precision_new({
		type = _internal.enums._Internal.PrecisionType.FRACTION_SIGNIFICANT,
		minFractionDigits = c_self.min,
		maxFractionDigits = c_self.max,
		minSignificantDigits = minSignificantDigits,
		maxSignificantDigits = maxSignificantDigits,
		roundingPriority = roundingPriority,
		sourcedWithSignificantDigits = true,
	})
end

-- reserved
local SignificantDigitsPrecision_methods = { }
local SignificantDigitsPrecision_new = _internal.class.create_init_function(
	"SignificantDigitsPrecision", "Precision",
	SignificantDigitsPrecision_methods, Precision_methods,
	_internal.class.ImmutabilityType.DEFAULT
)


function Precision.unlimited(): Precision
	return Precision_new({
		type = _internal.enums._Internal.PrecisionType.UNLIMITED,
	})
end

function Precision.integer(): FractionPrecision
	return FractionPrecision_new({
		type = _internal.enums._Internal.PrecisionType.FRACTION,
		min = 0,
		max = 0,
	})
end

function Precision.fixedFraction(minMaxFractionPlaces: number): FractionPrecision
	minMaxFractionPlaces = _internal.class.try_coerce_range(1, minMaxFractionPlaces, 0, 999)

	return FractionPrecision_new({
		type = _internal.enums._Internal.PrecisionType.FRACTION,
		min = minMaxFractionPlaces,
		max = minMaxFractionPlaces,
	})
end

function Precision.minFraction(minFractionPlaces: number): FractionPrecision
	minFractionPlaces = _internal.class.try_coerce_range(1, minFractionPlaces, 0, 999)

	return FractionPrecision_new({
		type = _internal.enums._Internal.PrecisionType.FRACTION,
		min = minFractionPlaces,
		max = _internal.formatter_settings.MAX_PRECISION,
	})
end

function Precision.maxFraction(maxFractionPlaces: number): FractionPrecision
	maxFractionPlaces = _internal.class.try_coerce_range(1, maxFractionPlaces, 0, 999)

	return FractionPrecision_new({
		type = _internal.enums._Internal.PrecisionType.FRACTION,
		min = 0,
		max = maxFractionPlaces,
	})
end

function Precision.minMaxFraction(minFractionPlaces: number, maxFractionPlaces: number): FractionPrecision
	minFractionPlaces = _internal.class.try_coerce_range(1, minFractionPlaces, 0, 999)
	maxFractionPlaces = _internal.class.try_coerce_range(2, maxFractionPlaces, minFractionPlaces, 999)

	return FractionPrecision_new({
		type = _internal.enums._Internal.PrecisionType.FRACTION,
		min = minFractionPlaces,
		max = maxFractionPlaces,
	})
end

function Precision.fixedSignificantDigits(minMaxSignificantDigits: number): SignificantDigitsPrecision
	minMaxSignificantDigits = _internal.class.try_coerce_range(1, minMaxSignificantDigits, 1, 999)

	return SignificantDigitsPrecision_new({
		type = _internal.enums._Internal.PrecisionType.SIGNFICANT,
		min = minMaxSignificantDigits,
		max = minMaxSignificantDigits,
	})
end

function Precision.minSignificantDigits(minSignificantDigits: number): SignificantDigitsPrecision
	minSignificantDigits = _internal.class.try_coerce_range(1, minSignificantDigits, 1, 999)

	return SignificantDigitsPrecision_new({
		type = _internal.enums._Internal.PrecisionType.SIGNFICANT,
		min = minSignificantDigits,
		max = _internal.formatter_settings.MAX_PRECISION,
	})
end

function Precision.maxSignificantDigits(maxSignificantDigits: number): SignificantDigitsPrecision
	maxSignificantDigits = _internal.class.try_coerce_range(1, maxSignificantDigits, 1, 999)

	return SignificantDigitsPrecision_new({
		type = _internal.enums._Internal.PrecisionType.SIGNFICANT,
		min = 1,
		max = maxSignificantDigits,
	})
end

function Precision.minMaxSignificantDigits(minSignificantDigits: number, maxSignificantDigits: number): SignificantDigitsPrecision
	minSignificantDigits = _internal.class.try_coerce_range(1, minSignificantDigits, 1, 999)
	maxSignificantDigits = _internal.class.try_coerce_range(2, maxSignificantDigits, minSignificantDigits, 999)

	return SignificantDigitsPrecision_new({
		type = _internal.enums._Internal.PrecisionType.SIGNFICANT,
		min = minSignificantDigits,
		max = maxSignificantDigits,
	})
end

export type Precision = { }
export type FractionPrecision = {
	WithMinDigits: typeof(FractionPrecision_methods.WithMinDigits),
	WithMaxDigits: typeof(FractionPrecision_methods.WithMaxDigits),
	WithSignificantDigits: typeof(FractionPrecision_methods.WithSignificantDigits),
}
export type SignificantDigitsPrecision = { }
return table.freeze(Precision)]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc0</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX1D6E9AE55F0E4D72A67AC85CEC25D0ED">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Simple</string>
						<string name="ScriptGuid">{A55604C1-D17F-40A2-AF2D-600075CE89AA}</string>
						<ProtectedString name="Source"><![CDATA[-- Configuration
-- The suffixes for abbreviation in every power of thousands.
local COMPACT_SUFFIX = {
	"K", "M", "B", "T", "Qa", "Qi", "Sx"
}
local CACHED_SKELETON_SETTINGS = true
--

local MainAPI = require(script.Parent.Main)
local FormatNumberSimpleAPI = { }

local SKELETON_CACHE = if CACHED_SKELETON_SETTINGS then { } else nil
local COMPACT_SKELETON_CACHE = if CACHED_SKELETON_SETTINGS then { } else nil

function FormatNumberSimpleAPI.Format(value: number, skeleton: string?): string
	local success
	local formatter = nil

	assert(type(value) == "number", "Value provided must be a number")

	if skeleton == nil then
		skeleton = ""
	end
	assert(type(skeleton) == "string", "Skeleton provided must be a string")

	if CACHED_SKELETON_SETTINGS then
		formatter = SKELETON_CACHE[skeleton]
	end

	if not formatter then
		success, formatter =
			MainAPI.NumberFormatter.forSkeleton(skeleton)
		assert(success, formatter :: string)

		if CACHED_SKELETON_SETTINGS then
			SKELETON_CACHE[skeleton] = formatter
		end
	end

	return (formatter :: MainAPI.NumberFormatter):Format(value)
end

function FormatNumberSimpleAPI.FormatCompact(value: number, skeleton: string?): string
	local success
	local formatter = nil

	assert(type(value) == "number", "Value provided must be a number")

	if skeleton == nil then
		skeleton = ""
	end
	assert(type(skeleton) == "string", "Skeleton provided must be a string")

	if CACHED_SKELETON_SETTINGS then
		formatter = COMPACT_SKELETON_CACHE[skeleton]
	end

	if not formatter then
		success, formatter =
			MainAPI.NumberFormatter.forSkeleton(skeleton)
		assert(success, formatter :: string)

		formatter = (formatter :: MainAPI.NumberFormatter)
			:Notation(MainAPI.Notation.compactWithSuffixThousands(COMPACT_SUFFIX))

		if CACHED_SKELETON_SETTINGS then
			COMPACT_SKELETON_CACHE[skeleton] = formatter
		end
	end

	assert(#COMPACT_SUFFIX ~= 0, "Please provide the suffix abbreviations for FormatCompact at the top of the Simple ModuleScript")

	return formatter:Format(value)
end

return table.freeze(FormatNumberSimpleAPI)]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc1</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX8C8FD33886394C419A5E6BC6AADC0C07">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">_internal</string>
						<string name="ScriptGuid">{3BB68541-E84F-4584-BA6B-4F66CDFD6B6B}</string>
						<ProtectedString name="Source"><![CDATA[return table.freeze({
	class = require(script.class),
	enums = require(script.enums),
	format = require(script.format),
	formatter_settings = require(script.formatter_settings),
	decimal_conversion = require(script.decimal_conversion),
	skeleton = require(script.skeleton),
})]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc2</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXBBBE5BC99B834A1B88847AD69F2AB27C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">class</string>
							<string name="ScriptGuid">{11C8574A-B157-4B91-BFBB-CC3758ED2198}</string>
							<ProtectedString name="Source"><![CDATA[local class = { }
local type_parents = { }
local proxy_meta = setmetatable({ }, { __mode = "k" })

local function proxy_tostring(self)
	return proxy_meta[self].type_name .. ": " .. proxy_meta[self].as_string
end

local ImmutabilityType = table.freeze({
	DEFAULT = 0,
	NUMBER_FORMATTER = 1,
	SYMBOLS = 2,
})
class.ImmutabilityType = ImmutabilityType

function class.create_init_function(
	type_name: string, parent_type_name: string?,
	methods, parent_methods,
	immutable: number
)
	local result_methods

	if parent_methods then
		result_methods = setmetatable(table.clone(parent_methods), { __index = methods })
	else
		result_methods = methods
	end

	type_parents[type_name] = parent_type_name or "FormatNumberObject"

	return function(data, as_string)
		local result_object = newproxy(true)
		local result_object_meta = getmetatable(result_object)

		if immutable ~= ImmutabilityType.SYMBOLS and type(data) == "table" then
			table.freeze(data)
		end

		result_object_meta.data = data
		result_object_meta.resolved_data = nil
		result_object_meta.type_name = type_name
		result_object_meta.as_string = as_string
			or string.sub(tostring(result_object), 11)
		result_object_meta.__index = result_methods
		result_object_meta.__tostring = proxy_tostring
		result_object_meta.__metatable = "The metatable is locked"

		if immutable ~= ImmutabilityType.NUMBER_FORMATTER then
			table.freeze(result_object_meta)
		end

		proxy_meta[result_object] = result_object_meta

		return result_object
	end
end

function class.is_a(object, type_name)
	local selected_meta = proxy_meta[object]
	local compared_type_name = selected_meta and selected_meta.type_name
	local target_type_name = type_name
	local result = false

	if compared_type_name == target_type_name then
		result = true
	elseif compared_type_name then
		repeat
			compared_type_name = type_parents[compared_type_name]
			result = compared_type_name == target_type_name
		until not compared_type_name or result
	end

	return result
end

function class.get_data(object)
	return proxy_meta[object].data
end

function class.get_resolved_data(object, call_if_not_resolved)
	local proxy_meta_object = proxy_meta[object]
	local resolved_data = proxy_meta_object.resolved_data

	if not resolved_data then
		resolved_data = call_if_not_resolved(proxy_meta_object.data)
		proxy_meta_object.resolved_data = resolved_data
		if resolved_data then
			table.freeze(proxy_meta_object)
		end
	end

	return resolved_data
end

function class.try_coerce(argument_no, value, type_name, default)
	local success = false
	local coerced_value = nil

	if value == nil and default ~= nil then
		coerced_value = default
		success = true
	elseif type_name == "string" then
		if type(value) == "string" then
			coerced_value = value
			success = true
		elseif type(value) == "number" then
			coerced_value = tostring(value)
			success = true
		else
			success = false
		end
	elseif type_name == "number" then
		coerced_value = tonumber(value)
		if coerced_value then
			success = true
		else
			success = false
			type_name ..= " object"
		end
	elseif string.sub(type_name, 1, 1) == "{" then
		local t = string.sub(type_name, 2, -2)
		if type(value) == "table" then
			-- only copy the array part
			-- no metamethods are respected
			coerced_value = table.move(value, 1, rawlen(value), 1, table.create(rawlen(value)))
			for i, v in coerced_value do
				if type(v) ~= t then
					error(string.format("Values inside the table argument must be a %s, index %d got %s", t, i, type(v)), 3)
				end
			end
			success = true
		else
			type_name = "table"
		end
	elseif class.is_a(value, type_name) then
		coerced_value = proxy_meta[value].data
		success = true
	end

	if not success then
		error(string.format("Argument #%d provided must be a %s", argument_no, type_name), 3)
	end

	return coerced_value
end

function class.try_coerce_range(argument_no, value, min, max, default)
	local coerced_value

	if value == nil then
		coerced_value = default
	else
		local converted_integer = tonumber(value)
		if converted_integer then
			converted_integer = class.double_to_int32(converted_integer)

			if converted_integer >= min and converted_integer <= max then
				coerced_value = converted_integer
			end
		end
	end

	return coerced_value or error(string.format(
		"Argument #%d provided must be an integer that is in the range of %d to (and including) %d",
		argument_no, min, max
	), 3)
end

function class.try_coerce_enum(argument_no, value, enum_tbl, default)
	local coerced_value

	if value == nil then
		coerced_value = default
	else
		local enum_value_to_try = tonumber(value)
		if enum_value_to_try then
			enum_value_to_try = class.double_to_int32(value)
			for k, v in enum_tbl do
				if enum_value_to_try == v then
					coerced_value = v
					break
				end
			end
		end
	end

	return coerced_value or error(string.format("Argument #%d provided is out of range", argument_no), 3)
end

function class.double_to_int32(value: number): number
	if not (value > -0x80000001 and value < 0x80000000) then
		-- Double to int32 conversion
		-- cvttsd2si on x86
		-- fcvtzs on aarch64
		return UDim.new(nil, value).Offset
	elseif value <= -1 then
		return math.ceil(value)
	elseif value >= 1 then
		return math.floor(value)
	end
	return 0
end

return table.freeze(class)]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc3</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX65B14102EA574B9D9197CF4A76F6B1FE">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">decimal_conversion</string>
							<string name="ScriptGuid">{B3720AC9-6C88-4C03-AFC6-CD52A9111419}</string>
							<ProtectedString name="Source"><![CDATA[local decimal_conversion = { }
local NUMBER_BYTE_CONVERSION = table.freeze({
	["0"] = "\x00", ["1"] = "\x01", ["2"] = "\x02", ["3"] = "\x03",
	["4"] = "\x04", ["5"] = "\x05", ["6"] = "\x06", ["7"] = "\x07",
	["8"] = "\x08", ["9"] = "\x09",
})

function decimal_conversion.from_double(double: number): ({ number }, number, number)
	local result_fmt
	local result_n
	local result_scale

	local sigt_int, sigt_frac, expt = string.match(
		tostring(double), "^(%d+)%.?(%d*)e?([+-]?%d*)$"
	)
	local sigt, sigt_incr = string.match(
		sigt_int .. sigt_frac, "^0*(%d-)(0*)$"
	)

	result_fmt = {string.byte(
		string.gsub(sigt, ".", NUMBER_BYTE_CONVERSION),
		1, -1
	)}
	result_n = #result_fmt
	result_scale = (tonumber(expt) or 0) - #sigt_frac + #sigt_incr

	return result_fmt, result_n, result_scale
end

return table.freeze(decimal_conversion)]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc4</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX12E6EA853D464CB4A03FB4E15C814EB8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">enums</string>
							<string name="ScriptGuid">{012C7D96-2DFF-4F98-AA4D-1861FFB12278}</string>
							<ProtectedString name="Source"><![CDATA[return table.freeze({
	RoundingMode = table.freeze({
		CEILING = 0,
		FLOOR = 1,
		DOWN = 2,
		UP = 3,
		HALF_EVEN = 4,
		HALF_DOWN = 5,
		HALF_UP = 6,
	}),
	GroupingStrategy = table.freeze({
		OFF = 0,
		MIN2 = 1,
		ON_ALIGNED = 3,
	}),
	ENumberFormatSymbols = table.freeze({
		kDecimalSeparatorSymbol = 0,
		kGroupingSeparatorSymbol = 1,
		kMinusSignSymbol = 6,
		kPlusSignSymbol = 7,
		kExponentialSymbol = 11,
		kInfinitySymbol = 14,
		kNaNSymbol = 15,
	}),
	SignDisplay = table.freeze({
		AUTO = 0,
		ALWAYS = 1,
		NEVER = 2,
		EXCEPT_ZERO = 5,
		NEGATIVE = 7,
	}),
	DecimalSeparatorDisplay = table.freeze({
		AUTO = 0,
		ALWAYS = 1,
	}),
	RoundingPriority = table.freeze({
		RELAXED = 0,
		STRICT = 1,
	}),

	_Internal = table.freeze({
		NotationType = table.freeze({
			SIMPLE = 0,
			SCIENTIFIC = 1,
			COMPACT = 2,
		}),

		PrecisionType = table.freeze({
			FRACTION = 0,
			SIGNFICANT = 1,
			FRACTION_SIGNIFICANT = 2,
			UNLIMITED = 3,
		}),
	}),
})]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc5</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX73669FA73B5647BA95F64BF2283DA4C6">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">format</string>
							<string name="ScriptGuid">{72E64101-67D4-43AD-B79B-BA29FD0A7275}</string>
							<ProtectedString name="Source"><![CDATA[local enums = require(script.Parent.enums)
local formatter_settings = require(script.Parent.formatter_settings)
local format = { }

local function internal_get_digits(fmt: { number }, fmt_n: number, i: number, j: number): string
	local leftz, strd, rightz, rightzn

	if i <= 0 then
		leftz = string.rep("0", -i + 1)
		i = 1
	else
		leftz = ""
	end

	rightzn = j - math.max(fmt_n, i - 1)
	if rightzn <= 0 then
		rightz = ""
	else
		j = fmt_n
		rightz = string.rep("0", rightzn)
	end

	if i > fmt_n then
		strd = ""
	else
		strd = string.char(table.unpack(fmt, i, j))
	end

	return leftz .. strd .. rightz
end

function format.strip_trailing_zero(fmt: { number }, fmt_n: number): (number)
	if fmt_n < 0 then
		fmt_n = 0
	else
		while fmt[fmt_n] == 0 do
			fmt_n -= 1
		end
	end
	return fmt_n
end

function format.round_sig(
	fmt: { number }, fmt_n: number, sig: number,
	sign: boolean, rounding_mode: number
): (number, boolean)
	local incr_e = 0

	if fmt_n > sig then
		local midpoint
		-- 1 = down
		-- 0 = half down
		-- -1 = half up
		-- -2 = up
		local resolved_rounding_midpoint

		if sig < 0 then
			midpoint = -1
		elseif fmt[sig + 1] > 5 then
			midpoint = 1
		elseif fmt[sig + 1] == 5 then
			midpoint = if fmt_n > sig + 1 then 1 else 0
		else
			midpoint = -1
		end


		if rounding_mode == enums.RoundingMode.CEILING then
			resolved_rounding_midpoint = if sign then 1 else -2
		elseif rounding_mode == enums.RoundingMode.FLOOR then
			resolved_rounding_midpoint = if sign then -2 else 1
		elseif rounding_mode == enums.RoundingMode.UP then
			resolved_rounding_midpoint = -2
		elseif rounding_mode == enums.RoundingMode.DOWN then
			resolved_rounding_midpoint = 1
		elseif rounding_mode == enums.RoundingMode.HALF_EVEN then
			resolved_rounding_midpoint = if sig <= 0
				then 0
				else fmt[sig] % -2
		elseif rounding_mode == enums.RoundingMode.HALF_DOWN then
			resolved_rounding_midpoint = 0
		elseif rounding_mode == enums.RoundingMode.HALF_UP then
			resolved_rounding_midpoint = -1
		end

		fmt_n = sig

		if midpoint > resolved_rounding_midpoint then
			while fmt[fmt_n] == 9 and fmt_n > 0 do
				fmt_n -= 1
			end

			if fmt_n <= 0 then
				fmt[1] = 1
				incr_e = 1 - fmt_n
				fmt_n = 1
			else
				fmt[fmt_n] += 1
			end
		end

		fmt_n = format.strip_trailing_zero(fmt, fmt_n)
	end

	return fmt_n, incr_e
end

function format.resolve_int_frac(
	fmt: { number }, fmt_n: number, marker: number,
	i: number, j: number, min_grouping: number?, grouping_symbol: string
): string
	local intg, frac, expt

	for i = 1, fmt_n do
		fmt[i] += 0x30
	end

	-- interesting edge case
	if marker < i and j < marker + 1 then
		intg = "0"
		frac = ""
	else
		intg = internal_get_digits(fmt, fmt_n, i, marker)
		frac = internal_get_digits(fmt, fmt_n, marker + 1, j)
	end

	if min_grouping and marker - i + 1 >= min_grouping then
		local grouping_repl

		if grouping_symbol == "%" then
			grouping_repl = "%0%%"
		elseif #grouping_symbol > 1 then
			grouping_repl = "%0" .. string.reverse(grouping_symbol)
		else
			grouping_repl = "%0" .. grouping_symbol
		end
		intg = string.reverse((string.gsub(string.reverse(intg),
			"...", grouping_repl, (marker - i) / 3
		)))
	end

	return intg, frac
end

function format.format_expt(expt, symbols, min_int_digits, disp_sign_at)
	local disp_sign = ""
	local exp_str
	if expt < 0 then
		exp_str = tostring(-expt)
		if disp_sign_at.negative then
			disp_sign = symbols[enums.ENumberFormatSymbols.kMinusSignSymbol]
		end
	elseif expt == 0 then
		exp_str = "0"
		if disp_sign_at.positiveZero then
			disp_sign = symbols[enums.ENumberFormatSymbols.kPlusSignSymbol]
		end
	else
		exp_str = tostring(expt)
		if disp_sign_at.positive then
			disp_sign = symbols[enums.ENumberFormatSymbols.kPlusSignSymbol]
		end
	end

	exp_str = string.rep("0", min_int_digits - #exp_str) .. exp_str

	return symbols[enums.ENumberFormatSymbols.kExponentialSymbol]
		.. disp_sign .. exp_str
end

function format.resolve_with_notation(fmt, fmt_n, scale, notation, symbols)
	local fmtd_expt = nil
	local next_expt_threshold = nil
	local next_fmtd_expt = nil
	local decimal_marker = scale

	if fmt_n <= 0 then
		if notation.type == enums._Internal.NotationType.SCIENTIFIC then
			fmtd_expt = format.format_expt(
				0, symbols,
				notation.minExponentDigits,
				notation.displayExponentSignAt
			)
		end
	else
		if notation.type == enums._Internal.NotationType.SIMPLE then
			decimal_marker += fmt_n
		else
			local d_pow10 = notation.power10Scale
			local value_pow10 = decimal_marker + fmt_n - 1
			local p_quotient = math.floor(value_pow10 / d_pow10)
			local p_remainder = value_pow10 - p_quotient * d_pow10

			decimal_marker = p_remainder + 1
			if notation.type == enums._Internal.NotationType.COMPACT then
				local suffix_n = notation.suffixesLength
				if p_quotient > suffix_n then
					decimal_marker += (p_quotient - suffix_n) * d_pow10
					fmtd_expt = notation.suffixes[suffix_n]
				elseif p_quotient < 0 then
					decimal_marker += p_quotient * d_pow10
				elseif p_quotient ~= 0 then
					fmtd_expt = notation.suffixes[p_quotient]
				end

				if p_quotient >= 0 and p_quotient < suffix_n then
					next_expt_threshold = d_pow10
					next_fmtd_expt = notation.suffixes[p_quotient + 1]
				end
			else
				fmtd_expt = format.format_expt(
					p_quotient * d_pow10,
					symbols,
					notation.minExponentDigits,
					notation.displayExponentSignAt
				)
				next_fmtd_expt = format.format_expt(
					(p_quotient + 1) * d_pow10,
					symbols,
					notation.minExponentDigits,
					notation.displayExponentSignAt
				)

				next_expt_threshold = d_pow10
			end
		end
	end

	return decimal_marker, fmtd_expt, next_expt_threshold, next_fmtd_expt
end

function format.format_unsigned_finite(
	fmt, fmt_n, scale, is_negt,
	internal_settings
): string
	local result, rounded_to_zero

	local fmtd_frac
	local int_width
	local min_int = internal_settings.integerWidth.min
	local max_int = internal_settings.integerWidth.max
	local re_min_sig, re_max_sig
	local incr_marker

	local notation = internal_settings.notation
	local symbols = internal_settings.symbols

	local decimal_marker, fmtd_expt, next_expt_threshold, next_fmtd_expt =
		format.resolve_with_notation(fmt, fmt_n, scale, notation, symbols)

	re_min_sig, re_max_sig =
		formatter_settings.resolve_min_max_sig(
			internal_settings.precision,
			decimal_marker
		)

	fmt_n, incr_marker = format.round_sig(
		fmt, fmt_n, re_max_sig, is_negt,
		internal_settings.roundingMode
	)

	rounded_to_zero = fmt_n == 0

	if incr_marker > 0 then
		if decimal_marker == next_expt_threshold then
			-- assume incr_maker is 1
			assert(incr_marker == 1)
			fmtd_expt = next_fmtd_expt
			decimal_marker = 1
		else
			decimal_marker += incr_marker
		end

		re_min_sig, re_max_sig =
			formatter_settings.resolve_min_max_sig(
				internal_settings.precision, decimal_marker
			)
	elseif rounded_to_zero then
		-- for convenince
		re_min_sig, re_max_sig =
			formatter_settings.resolve_min_max_sig(
				internal_settings.precision, 1
			)
		decimal_marker = 1
	end

	if decimal_marker < min_int then
		int_width = min_int
	elseif max_int ~= -1 and decimal_marker > max_int then
		int_width = max_int
	else
		int_width = decimal_marker
	end

	result, fmtd_frac = format.resolve_int_frac(
		fmt, fmt_n, decimal_marker,
		math.max(decimal_marker, 0) - int_width + 1,
		math.max(fmt_n, re_min_sig),
		internal_settings.minGrouping,
		symbols[enums.ENumberFormatSymbols.kGroupingSeparatorSymbol]
	)

	if internal_settings.alwaysDisplayDecimal
		or fmtd_frac ~= "" then
		result ..= symbols[enums.ENumberFormatSymbols.kDecimalSeparatorSymbol]
			.. fmtd_frac
	end

	if fmtd_expt then
		result ..= fmtd_expt
	end

	return result, rounded_to_zero
end

function format.display_sign(str, is_negt, is_zero, disp_sign_at, symbols)
	local sign_symbol
	local display

	if is_negt then
		sign_symbol = symbols[enums.ENumberFormatSymbols.kMinusSignSymbol]
		if is_zero then
			display = disp_sign_at.negativeZero
		else
			display = disp_sign_at.negative
		end
	else
		sign_symbol = symbols[enums.ENumberFormatSymbols.kPlusSignSymbol]
		if is_zero then
			display = disp_sign_at.positiveZero
		else
			display = disp_sign_at.positive
		end
	end

	if display then
		return sign_symbol .. str
	end
	return str
end

return table.freeze(format)]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc6</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX7252C9B22AE345B8B0A7A4CF09D1E67E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">formatter_settings</string>
							<string name="ScriptGuid">{BF6D31DB-9F40-4D1D-8130-FAC239EE0024}</string>
							<ProtectedString name="Source"><![CDATA[local enums = require(script.Parent.enums)
local formatter_settings = { }

formatter_settings.MAX_PRECISION = 0x7FFFFFFF -- 2^31 - 1
function formatter_settings.resolve_min_max_sig(precision, decimal_marker)
	local resolved_min, resolved_max = nil, nil

	if precision.type == enums._Internal.PrecisionType.SIGNFICANT then
		resolved_min = precision.min
		resolved_max = precision.max
	elseif precision.type == enums._Internal.PrecisionType.FRACTION then
		resolved_min = decimal_marker + precision.min
		resolved_max = decimal_marker + precision.max
	elseif precision.type == enums._Internal.PrecisionType.FRACTION_SIGNIFICANT then
		local min_frac = decimal_marker + precision.minFractionDigits
		local max_frac = decimal_marker + precision.maxFractionDigits
		local min_sig = precision.minSignificantDigits
		local max_sig = precision.maxSignificantDigits

		if precision.roundingPriority == enums.RoundingPriority.RELAXED then
			resolved_min = math.max(min_frac, min_sig)
			resolved_max = math.max(max_frac, max_sig)
		else
			resolved_min = math.min(min_frac, min_sig)
			resolved_max = math.min(max_frac, max_sig)
		end

		if not precision.sourcedWithSignificantDigits then
			resolved_min = min_frac
		end

	elseif precision.type == enums._Internal.PrecisionType.UNLIMITED then
		resolved_min = 1
		resolved_max = formatter_settings.MAX_PRECISION
	end

	return resolved_min, resolved_max
end

local DEFAULT_SYMBOLS = table.freeze({
	[enums.ENumberFormatSymbols.kDecimalSeparatorSymbol] = ".",
	[enums.ENumberFormatSymbols.kGroupingSeparatorSymbol] = ",",
	[enums.ENumberFormatSymbols.kMinusSignSymbol] = "-",
	[enums.ENumberFormatSymbols.kPlusSignSymbol] = "+",
	[enums.ENumberFormatSymbols.kExponentialSymbol] = "E",
	[enums.ENumberFormatSymbols.kInfinitySymbol] = "∞",
	[enums.ENumberFormatSymbols.kNaNSymbol] = "NaN",
})

function formatter_settings.generate_from_sign_enum(sign)
	local disp_neg, disp_neg_zero, disp_pos_zero, disp_pos

	if sign == enums.SignDisplay.AUTO then
		disp_neg, disp_neg_zero = true, true
		disp_pos, disp_pos_zero = false, false
	elseif sign == enums.SignDisplay.ALWAYS then
		disp_neg, disp_neg_zero = true, true
		disp_pos, disp_pos_zero = true, true
	elseif sign == enums.SignDisplay.NEVER then
		disp_neg, disp_neg_zero = false, false
		disp_pos, disp_pos_zero = false, false
	elseif sign == enums.SignDisplay.NEGATIVE then
		disp_neg, disp_neg_zero = true, false
		disp_pos, disp_pos_zero = false, false
	elseif sign == enums.SignDisplay.EXCEPT_ZERO then
		disp_neg, disp_neg_zero = true, false
		disp_pos, disp_pos_zero = true, false
	end

	return table.freeze({
		negative = disp_neg,
		negativeZero = disp_neg_zero,
		positiveZero = disp_pos_zero,
		positive = disp_pos,
	})
end


function formatter_settings.linked_list_to_dict(linked_list)
	local result = { }
	local selected_ll = linked_list
	while selected_ll do
		if not result[selected_ll.key] then
			result[selected_ll.key] = selected_ll.value
		end
		selected_ll = selected_ll.parent
	end

	return table.freeze(result)
end

function formatter_settings.resolve_settings(settings_)
	local is_compact_notation
	local resolved_settings = { }

	resolved_settings.notation = settings_.notation or table.freeze({
		type = enums._Internal.NotationType.SIMPLE,
	})
	is_compact_notation = resolved_settings.notation.type == enums._Internal.NotationType.COMPACT
	if settings_.precision then
		resolved_settings.precision = settings_.precision
	else
		resolved_settings.precision =
			if is_compact_notation
			then table.freeze({
				type = enums._Internal.PrecisionType.FRACTION_SIGNIFICANT,
				minFractionDigits = 0,
				maxFractionDigits = 0,
				minSignificantDigits = 1,
				maxSignificantDigits = 2,
				roundingPriority = enums.RoundingPriority.RELAXED,
			})
			else table.freeze({
				type = enums._Internal.PrecisionType.FRACTION,
				min = 0, max = 6,
			})
	end
	if settings_.roundingMode then
		resolved_settings.roundingMode = settings_.roundingMode
	else
		resolved_settings.roundingMode = if is_compact_notation
			or resolved_settings.notation.type == enums._Internal.NotationType.SCIENTIFIC
			then enums.RoundingMode.DOWN
			else enums.RoundingMode.HALF_EVEN
	end
	if settings_.grouping then
		local grouping = settings_.grouping
		local min_grouping_result

		if grouping == enums.GroupingStrategy.MIN2 then
			min_grouping_result = 5
		elseif grouping == enums.GroupingStrategy.ON_ALIGNED then
			min_grouping_result = 4
		else
			min_grouping_result = nil
		end
		resolved_settings.minGrouping = min_grouping_result
	else
		-- compact notation use min2 grouping by default
		resolved_settings.minGrouping = if is_compact_notation then 5 else 4
	end
	resolved_settings.integerWidth = settings_.integerWidth or table.freeze({
		min = 1,
		max = -1,
	})
	resolved_settings.symbols = settings_.symbols or DEFAULT_SYMBOLS
	if settings_.sign then
		resolved_settings.displaySignAt =
			formatter_settings.generate_from_sign_enum(settings_.sign)
	else
		resolved_settings.displaySignAt =
			formatter_settings.generate_from_sign_enum(enums.SignDisplay.AUTO)
	end
	resolved_settings.alwaysDisplayDecimal =
		settings_.decimal == enums.DecimalSeparatorDisplay.ALWAYS

	return table.freeze(resolved_settings)
end

return table.freeze(formatter_settings)]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc7</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX88EDD04642C1436E98014466A156CD7D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">skeleton</string>
							<string name="ScriptGuid">{B2E9B7C1-26A7-4329-9233-4A842C6ACB7D}</string>
							<ProtectedString name="Source"><![CDATA[local formatter_settings = require(script.Parent.formatter_settings)
local enums = require(script.Parent.enums)
local skeleton = { }

--
local SIGN_TO_SKELETON = {
	[enums.SignDisplay.AUTO] = nil, --"sign-auto",
	[enums.SignDisplay.ALWAYS] = "sign-always",
	[enums.SignDisplay.NEVER] = "sign-never",
	[enums.SignDisplay.EXCEPT_ZERO] = "sign-except-zero",
	[enums.SignDisplay.NEGATIVE] = "sign-negative",
}

local function notation_to_skeleton(notation)
	local success, result

	if notation.type == enums._Internal.NotationType.SCIENTIFIC then
		success = true
		result = if notation.power10Scale == 3 then "engineering" else "scientific"

		if notation.minExponentDigits ~= 1 then
			result ..= "/*" ..
				string.rep("e", notation.minExponentDigits)
		end

		if notation.exponentSignDisplay ~= enums.SignDisplay.AUTO then
			result ..= "/" .. SIGN_TO_SKELETON[notation.exponentSignDisplay]
		end
	elseif notation.type == enums._Internal.NotationType.SIMPLE then
		success = true
		result = nil -- "notation-simple"
	else
		success = false
		result = "Compact notation skeleton is not supported for being represented as a skeleton string in this module"
	end

	return success, result
end

local function precision_to_skeleton(precision)
	local result
	local frac_s
	local sig_s
	local min_frac, max_frac = nil, nil
	local min_sig, max_sig = nil, nil

	if precision.type == enums._Internal.PrecisionType.FRACTION then
		min_frac, max_frac = precision.min, precision.max
	elseif precision.type == enums._Internal.PrecisionType.SIGNFICANT then
		min_sig, max_sig = precision.min, precision.max
	elseif precision.type == enums._Internal.PrecisionType.FRACTION_SIGNIFICANT then
		min_frac, max_frac = precision.minFractionDigits, precision.maxFractionDigits
		if precision.sourcedWithSignificantDigits then
			min_sig, max_sig = precision.minSignificantDigits, precision.maxSignificantDigits
		elseif precision.roundingPriority == enums.RoundingPriority.RELAXED then
			min_sig, max_sig = precision.maxSignificantDigits, formatter_settings.MAX_PRECISION
		else
			min_sig, max_sig = 1, precision.maxSignificantDigits
		end
	else
		result = "precision-unlimited"
	end

	if min_frac then
		if max_frac == 0 then
			frac_s = "precision-integer"
		else
			frac_s = "." .. string.rep("0", min_frac)
			if max_frac == formatter_settings.MAX_PRECISION then
				frac_s ..= "*"
			else
				frac_s ..= string.rep("#", max_frac - min_frac)
			end
		end
	end

	if min_sig then
		sig_s = string.rep("@", min_sig)
		if max_sig == formatter_settings.MAX_PRECISION then
			sig_s ..= "*"
		else
			sig_s ..= string.rep("#", max_sig - min_sig)
		end
	end

	if frac_s then
		result = frac_s
		if sig_s then
			result ..= "/" .. sig_s
			if precision.type == enums._Internal.PrecisionType.FRACTION_SIGNIFICANT
				and precision.sourcedWithSignificantDigits then
				if precision.roundingPriority == enums.RoundingPriority.RELAXED then
					result ..= "r"
				else
					result ..= "s"
				end
			end
		end
	elseif sig_s then
		result = sig_s
	end

	return result
end

local ROUNDING_MODE_TO_SKELETON = {
	[enums.RoundingMode.CEILING] = "rounding-mode-ceiling",
	[enums.RoundingMode.FLOOR] = "rounding-mode-floor",
	[enums.RoundingMode.DOWN] = "rounding-mode-down",
	[enums.RoundingMode.UP] = "rounding-mode-up",
	[enums.RoundingMode.HALF_EVEN] = "rounding-mode-half-even",
	[enums.RoundingMode.HALF_DOWN] = "rounding-mode-half-down",
	[enums.RoundingMode.HALF_UP] = "rounding-half-up",
}

local GROUPING_TO_SKELETON = {
	[enums.GroupingStrategy.OFF] = "group-off",
	[enums.GroupingStrategy.MIN2] = "group-min2",
	[enums.GroupingStrategy.ON_ALIGNED] = "group-on-aligned",
}

local function int_width_to_skeleton(int_width)
	local result

	if int_width.max == -1 then
		result = "integer-width/*" .. string.rep("0", int_width.min)
	elseif int_width.max == 0 and int_width.min == 0 then
		result = "integer-width-trunc"
	else
		result = "integer-width/" ..
			string.rep("#", int_width.max - int_width.min) ..
			string.rep("0", int_width.min)
	end

	return result
end

local DECIMAL_TO_SKELETON = {
	[enums.DecimalSeparatorDisplay.AUTO] = nil, -- "decimal-auto",
	[enums.DecimalSeparatorDisplay.ALWAYS] = "decimal-always",
}

function skeleton.settings_to_skeleton(settings_)
	local success = true
	local result_tbl = { }
	local result_string

	if settings_.notation then
		local skeleton_part
		success, skeleton_part = notation_to_skeleton(settings_.notation)

		if success then
			table.insert(result_tbl, skeleton_part)
		else
			result_string = skeleton_part
		end
	end

	if success then
		if settings_.precision then
			table.insert(result_tbl, precision_to_skeleton(settings_.precision))
		end
		if settings_.roundingMode then
			table.insert(result_tbl, ROUNDING_MODE_TO_SKELETON[settings_.roundingMode])
		end
		if settings_.grouping then
			table.insert(result_tbl, GROUPING_TO_SKELETON[settings_.grouping])
		end
		if settings_.integerWidth then
			table.insert(result_tbl, int_width_to_skeleton(settings_.integerWidth))
		end
		if settings_.decimal then
			table.insert(result_tbl, DECIMAL_TO_SKELETON[settings_.decimal])
		end

		result_string = table.concat(result_tbl, " ")
	end

	return success, result_string
end
--
local SKELETON_KEY = {
	["notation-simple"] = "notation",

	["precision-unlimited"] = "precision",
	[".+"] = "precision",

	["rounding-mode-ceiling"] = "roundingMode",
	["rounding-mode-floor"] = "roundingMode",
	["rounding-mode-down"] = "roundingMode",
	["rounding-mode-up"] = "roundingMode",
	["rounding-mode-half-even"] = "roundingMode",
	["rounding-mode-half-down"] = "roundingMode",
	["rounding-mode-half-up"] = "roundingMode",

	["group-off"] = "grouping",
	["group-min2"] = "grouping",
	["group-on-aligned"] = "grouping",
	[",_"] = "grouping",
	[",?"] = "grouping",
	[",!"] = "grouping",

	["sign-auto"] = "sign",
	["sign-always"] = "sign",
	["sign-never"] = "sign",
	["sign-except-zero"] = "sign",
	["sign-negative"] = "sign",
	["+!"] = "sign",
	["+_"] = "sign",
	["+?"] = "sign",
	["+-"] = "sign",

	["decimal-auto"] = "decimal",
	["decimal-always"] = "decimal",
}

local SKELETON_VALUE = {
	["notation-simple"] = table.freeze({
		type = enums._Internal.NotationType.SIMPLE,
	}),

	["precision-unlimited"] = table.freeze({
		type = enums._Internal.PrecisionType.UNLIMITED,
	}),
	[".+"] = table.freeze({
		type = enums._Internal.PrecisionType.UNLIMITED,
	}),

	["rounding-mode-ceiling"] = enums.RoundingMode.CEILING,
	["rounding-mode-floor"] = enums.RoundingMode.FLOOR,
	["rounding-mode-down"] = enums.RoundingMode.DOWN,
	["rounding-mode-up"] = enums.RoundingMode.UP,
	["rounding-mode-half-even"] = enums.RoundingMode.HALF_EVEN,
	["rounding-mode-half-down"] = enums.RoundingMode.HALF_DOWN,
	["rounding-mode-half-up"] = enums.RoundingMode.HALF_UP,

	["group-off"] = enums.GroupingStrategy.OFF,
	["group-min2"] = enums.GroupingStrategy.MIN2,
	["group-on-aligned"] = enums.GroupingStrategy.ON_ALIGNED,
	[",_"] = enums.GroupingStrategy.OFF,
	[",?"] = enums.GroupingStrategy.MIN2,
	[",!"] = enums.GroupingStrategy.ON_ALIGNED,

	["sign-auto"] = enums.SignDisplay.AUTO,
	["sign-always"] = enums.SignDisplay.ALWAYS,
	["sign-never"] = enums.SignDisplay.NEVER,
	["sign-except-zero"] = enums.SignDisplay.EXCEPT_ZERO,
	["sign-negative"] = enums.SignDisplay.NEGATIVE,
	["+!"] = enums.SignDisplay.ALWAYS,
	["+_"] = enums.SignDisplay.NEVER,
	["+?"] = enums.SignDisplay.EXCEPT_ZERO,
	["+-"] = enums.SignDisplay.NEGATIVE,

	["decimal-auto"] = enums.DecimalSeparatorDisplay.AUTO,
	["decimal-always"] = enums.DecimalSeparatorDisplay.ALWAYS,
}

local function skeleton_to_scientific_notation(str)
	local p1, p2, p3 = string.match(str, "^(%a+)/?([^/]*)/?([^/]*)$")
	local min_expt = 1
	local sign_expt = enums.SignDisplay.AUTO

	if p1 ~= "scientific" and p1 ~= "engineering" then
		return nil
	end

	if string.match(p2, "^[%*%+]e+$") then
		min_expt = #p2 - 1
		p2 = p3
		p3 = ""
	elseif string.match(p3, "^[%*%+]e+$") then
		min_expt = #p3 - 1
	end

	if p2 ~= "" then
		if string.sub(p2, 1, 5) ~= "sign-" then
			return nil
		end
		sign_expt = SKELETON_VALUE[p2]
	end

	-- sanity check
	if min_expt > 999 then
		return nil
	end

	return table.freeze({
		type = enums._Internal.NotationType.SCIENTIFIC,
		power10Scale = if p1 == "engineering" then 3 else 1,
		minExponentDigits = min_expt,
		exponentSignDisplay = sign_expt,
		displayExponentSignAt = formatter_settings.generate_from_sign_enum(sign_expt),
	})
end

local function skeleton_to_scientific_notation_concise(str)
	local old_c_str
	local c_str = str
	local s_or_e
	local sign_expt

	s_or_e, c_str = string.match(str, "^(EE?)(.+)$")
	if not s_or_e then
		return nil
	end

	old_c_str = c_str
	sign_expt, c_str = string.match(c_str, "^(%+[!%?])(.+)$")
	if sign_expt then
		sign_expt = SKELETON_VALUE[sign_expt]
	else
		c_str = old_c_str
		old_c_str = nil
		sign_expt = enums.SignDisplay.AUTO
	end

	if not string.match(c_str, "^0+$") then
		return nil
	end

	-- sanity check
	if #c_str > 999 then
		return nil
	end

	return table.freeze({
		type = enums._Internal.NotationType.SCIENTIFIC,
		power10Scale = if s_or_e == "EE" then 3 else 1,
		minExponentDigits = #c_str,
		exponentSignDisplay = sign_expt,
		displayExponentSignAt = formatter_settings.generate_from_sign_enum(sign_expt),
	})
end

local function skeleton_to_precision(str)
	local old_c_str
	local c_str = str
	local min_sig_str, max_sig_str
	local min_frac_str, max_frac_str

	max_frac_str, min_frac_str, c_str = string.match(str, "^%.((0*)#*)(.*)$")

	if not max_frac_str then
		max_frac_str, c_str = string.match(str, "^(precision%-integer)(.*)$")
	end

	if max_frac_str then
		local min_frac, max_frac

		if max_frac_str == "precision-integer" then
			min_frac, max_frac = 0, 0
		else
			min_frac = #min_frac_str
			max_frac = #max_frac_str
		end

		if string.match(c_str, "^[%*%+]")
			and min_frac_str == max_frac_str then
			max_frac = -1
			c_str = string.sub(c_str, 2)
		end

		-- sanity check
		if min_frac > 999 or max_frac > 999 then
			return nil
		elseif max_frac == -1 then
			max_frac = formatter_settings.MAX_PRECISION
		end

		if string.sub(c_str, 1, 1) == "/" then
			local rp, min_sig, max_sig
			local rp_incl = false
			max_sig_str, min_sig_str, rp = string.match(
				c_str, "^/((@+)#*)([%*%+rs]?)$"
			)

			if not max_sig_str
				or rp == "" and min_sig_str ~= "@"
				or (rp == "*" or rp == "+") and min_sig_str ~= max_sig_str then
				return nil
			end

			if rp == "" then
				min_sig = 1
				max_sig = #max_sig_str
				rp = "s"
			elseif rp == "*" or rp == "+" then
				min_sig = 1
				max_sig = #min_sig_str
				rp = "r"
			else
				rp_incl = true
				min_sig = #min_sig_str
				max_sig = #max_sig_str
			end

			-- sanity check
			if min_sig > 999 or max_sig > 999 then
				return nil
			end

			return table.freeze({
				type = enums._Internal.PrecisionType.FRACTION_SIGNIFICANT,
				minFractionDigits = min_frac,
				maxFractionDigits = max_frac,
				minSignificantDigits = min_sig,
				maxSignificantDigits = max_sig,
				roundingPriority = if rp == "r"
					then enums.RoundingPriority.RELAXED
					else enums.RoundingPriority.STRICT,
				sourcedWithSignificantDigits = rp_incl,
			})
		elseif c_str ~= "" then
			return nil
		end

		return table.freeze({
			type = enums._Internal.PrecisionType.FRACTION,
			min = min_frac,
			max = max_frac,
		})
	end

	max_sig_str, min_sig_str, c_str = string.match(str, "^((@+)#*)([%*%+]?)$")

	if max_sig_str then
		local min_sig = #min_sig_str
		local max_sig = #max_sig_str

		if c_str ~= "" then
			if min_sig ~= max_sig then
				return nil
			end
			max_sig = -1
			c_str = string.sub(c_str, 2)
		end

		-- sanity check
		if min_sig > 999 or max_sig > 999 then
			return nil
		elseif max_sig == -1 then
			max_sig = formatter_settings.MAX_PRECISION
		end

		return table.freeze({
			type = enums._Internal.PrecisionType.SIGNFICANT,
			min = min_sig,
			max = max_sig,
		})
	end

	return nil
end

local function skeleton_to_int_width(str)
	local min_int_str, max_int_str
	if str == "integer-width-trunc" then
		return table.freeze({ min = 0, max = 0 })
	end
	min_int_str = string.match(str, "^integer%-width/[%*%+](0*)$")
	if min_int_str then
		-- sanity check
		if #min_int_str > 999 then
			return nil
		end

		return table.freeze({
			min = #min_int_str,
			max = -1,
		})
	end
	max_int_str, min_int_str =
		string.match(str, "^integer%-width/(#*(0*))$")

	-- sanity check
	if not max_int_str or max_int_str == "" or #max_int_str > 999
		or #min_int_str > 999 then
		return nil
	end

	return table.freeze({
		min = #min_int_str,
		max = #max_int_str,
	})
end

local function skeleton_to_int_width_concise(str)
	return if string.match(str, "^0+$") and #str < 1000 then table.freeze({
		min = #str, max = -1
	}) else nil
end

function skeleton.to_option_linked_list(skeleton_string)
	local result = nil
	local keys = { }

	for pos, token in string.gmatch(skeleton_string, "()(%S+)") do
		local r_key, r_value = nil, nil
		r_key = SKELETON_KEY[token]
		if r_key then
			r_value = SKELETON_VALUE[token]
		end

		if not r_value then
			r_value = skeleton_to_scientific_notation(token)
				or skeleton_to_scientific_notation_concise(token)
			if r_value then
				r_key = "notation"
			end
		end

		if not r_value then
			r_value = skeleton_to_precision(token)
			if r_value then
				r_key = "precision"
			end
		end

		if not r_value then
			r_value = skeleton_to_int_width(token)
				or skeleton_to_int_width_concise(token)
			if r_value then
				r_key = "integerWidth"
			end
		end

		if not r_key or keys[r_key] then
			return false, string.format("number skeleton syntax error near '%*' at position %d", (string.gsub(token, "'", "\\'")), pos)
		end
		keys[r_key] = true
		result = {
			key = r_key,
			value = r_value,
			parent = result,
		}
	end

	return true, result
end

return skeleton]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc8</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX6F2926016374446FB22E0080727F8AF2">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Version</string>
						<string name="ScriptGuid">{A7A44B13-A49C-4842-BED8-4031E9FB11E5}</string>
						<ProtectedString name="Source"><![CDATA[--[[
FormatNumber
Version 31.1
BSD 2-Clause Licence
Copyright 2022 - Blockzez (https://devforum.roblox.com/u/Blockzez and https://github.com/Blockzez)
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
]]
local FormatNumberVersion = { }
export type FormatNumberVersion = {
	Major: number,
	Minor: number,
}

local function version_tostring(self)
	return string.format("%d.%d", self.Major, self.Minor)
end

local function version_lt(lhs, rhs)
	return if lhs.Major == rhs.Major
	then lhs.Minor < rhs.Minor
	else lhs.Major < rhs.Major
end

local function version_eq(lhs, rhs)
	return lhs.Major == rhs.Major and lhs.Minor == rhs.Minor
end

local function double_to_int32(value: number): number
	-- relying on UDim.new integer conversion semantic
	-- if you get weird behaviour for values out of the int32 range
	-- or you put the wrong value in, it's on you.
	if math.clamp(tonumber(value) or 0, -0x80000000, 0x7FFFFFFF) ~= value then
		return UDim.new(nil, value).Offset
	elseif value <= -1 then
		return math.ceil(value)
	elseif value >= 1 then
		return math.floor(value)
	end
	return 0
end

function FormatNumberVersion.new(major: number, minor: number): FormatNumberVersion
	local object = newproxy(true)
	local object_meta = getmetatable(object)

	object_meta.__index = {
		Major = double_to_int32(major),
		Minor = double_to_int32(minor),
	}
	object_meta.__metatable = "The metatable is locked"
	object_meta.__tostring = version_tostring
	object_meta.__lt = version_lt
	object_meta.__eq = version_eq
	table.freeze(object_meta)

	return object
end

FormatNumberVersion.current = FormatNumberVersion.new(31, 1)

return table.freeze(FormatNumberVersion)]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">047d4c366c39edd00855b0620000bfc9</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="ServerScriptService" referent="RBXC9FCADA4CC974599909DB6F91220A6EB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000700</UniqueId>
		</Properties>
		<Item class="Folder" referent="RBX90E37941AE66479B888D5A68C47BED07">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Libs</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500005da6</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBX8B8D079BF2CB4318942DE9CEC670569A">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProfileService</string>
					<string name="ScriptGuid">{3E747FC0-B61A-47E7-B369-0AA3EAD505FD}</string>
					<ProtectedString name="Source"><![CDATA[-- local Madwork = _G.Madwork
--[[
{Madwork}

-[ProfileService]---------------------------------------
	(STANDALONE VERSION)
	DataStore profiles - universal session-locked savable table API
	
	Official documentation:
		https://madstudioroblox.github.io/ProfileService/

	DevForum discussion:
		https://devforum.roblox.com/t/ProfileService/667805
	
	WARNINGS FOR "Profile.Data" VALUES:
	 	! Do not create numeric tables with gaps - attempting to replicate such tables will result in an error;
		! Do not create mixed tables (some values indexed by number and others by string key), as only
		     the data indexed by number will be replicated.
		! Do not index tables by anything other than numbers and strings.
		! Do not reference Roblox Instances
		! Do not reference userdata (Vector3, Color3, CFrame...) - Serialize userdata before referencing
		! Do not reference functions
		
	WARNING: Calling ProfileStore:LoadProfileAsync() with a "profile_key" which wasn't released in the SAME SESSION will result
		in an error! If you want to "ProfileStore:LoadProfileAsync()" instead of using the already loaded profile, :Release()
		the old Profile object.
		
	Members:
	
		ProfileService.ServiceLocked         [bool]
		
		ProfileService.IssueSignal           [ScriptSignal] (error_message, profile_store_name, profile_key)
		ProfileService.CorruptionSignal      [ScriptSignal] (profile_store_name, profile_key)
		ProfileService.CriticalStateSignal   [ScriptSignal] (is_critical_state)
	
	Functions:
	
		ProfileService.GetProfileStore(profile_store_index, profile_template) --> [ProfileStore]
			profile_store_index   [string] -- DataStore name
			OR
			profile_store_index   [table]: -- Allows the developer to define more GlobalDataStore variables
				{
					Name = "StoreName", -- [string] -- DataStore name
					-- Optional arguments:
					Scope = "StoreScope", -- [string] -- DataStore scope
				}
			profile_template      [table] -- Profiles will default to given table (hard-copy) when no data was saved previously

		ProfileService.IsLive() --> [bool] -- (CAN YIELD!!!)
			-- Returns true if ProfileService is connected to live Roblox DataStores
				
	Members [ProfileStore]:
	
		ProfileStore.Mock   [ProfileStore] -- Reflection of ProfileStore methods, but the methods will use a mock DataStore
		
	Methods [ProfileStore]:
	
		ProfileStore:LoadProfileAsync(profile_key, not_released_handler) --> [Profile] or nil -- not_released_handler(place_id, game_job_id)
			profile_key            [string] -- DataStore key
			not_released_handler   nil or []: -- Defaults to "ForceLoad"
				[string] "ForceLoad" -- Force loads profile on first call
				OR
				[string] "Steal" -- Steals the profile ignoring it's session lock
				OR
				[function] (place_id, game_job_id) --> [string] "Repeat", "Cancel", "ForceLoad" or "Steal"
					place_id      [number] or nil
					game_job_id   [string] or nil

				-- not_released_handler [function] will be triggered in cases where the profile is not released by a session. This
				--	function may yield for as long as desirable and must return one of three string values:

						["Repeat"] - ProfileService will repeat the profile loading proccess and may trigger the release handler again
						["Cancel"] - ProfileStore:LoadProfileAsync() will immediately return nil
						["ForceLoad"] - ProfileService will repeat the profile loading call, but will return Profile object afterwards
							and release the profile for another session that has loaded the profile
						["Steal"] - The profile will usually be loaded immediately, ignoring an existing remote session lock and applying
							a session lock for this session.

		ProfileStore:GlobalUpdateProfileAsync(profile_key, update_handler) --> [GlobalUpdates] or nil
			-- Returns GlobalUpdates object if update was successful, otherwise returns nil
			profile_key      [string] -- DataStore key
			update_handler   [function] (global_updates [GlobalUpdates])
			
		ProfileStore:ViewProfileAsync(profile_key, version) --> [Profile] or nil
			-- Reads profile without requesting a session lock; Data will not be saved and profile doesn't need to be released
			profile_key   [string] -- DataStore key
			version       nil or [string] -- DataStore key version

		ProfileStore:ProfileVersionQuery(profile_key, sort_direction, min_date, max_date) --> [ProfileVersionQuery]
			profile_key      [string]
			sort_direction   nil or [Enum.SortDirection]
			min_date         nil or [DateTime]
			max_date         nil or [DateTime]
			
		ProfileStore:WipeProfileAsync(profile_key) --> is_wipe_successful [bool]
			-- Completely wipes out profile data from the DataStore / mock DataStore with no way to recover it.
						
		* Parameter description for "ProfileStore:GlobalUpdateProfileAsync()":
		
			profile_key      [string] -- DataStore key
			update_handler   [function] (GlobalUpdates) -- This function gains access to GlobalUpdates object methods
				(update_handler can't yield)

	Methods [ProfileVersionQuery]:

		ProfileVersionQuery:NextAsync() --> [Profile] or nil -- (Yields)
			-- Returned profile has the same rules as profile returned by :ViewProfileAsync()
		
	Members [Profile]:
	
		Profile.Data              [table] -- Writable table that gets saved automatically and once the profile is released
		Profile.MetaData          [table] (Read-only) -- Information about this profile
		
			Profile.MetaData.ProfileCreateTime   [number] (Read-only) -- os.time() timestamp of profile creation
			Profile.MetaData.SessionLoadCount    [number] (Read-only) -- Amount of times the profile was loaded
			Profile.MetaData.ActiveSession       [table] (Read-only) {place_id, game_job_id} / nil -- Set to a session link if a
				game session is currently having this profile loaded; nil if released
			Profile.MetaData.MetaTags            [table] {["tag_name"] = tag_value, ...} -- Saved and auto-saved just like Profile.Data
			Profile.MetaData.MetaTagsLatest      [table] (Read-only) -- Latest version of MetaData.MetaTags that was definetly saved to DataStore
				(You can use Profile.MetaData.MetaTagsLatest for product purchase save confirmation, but create a system to clear old tags after
				they pile up)

		Profile.MetaTagsUpdated   [ScriptSignal] (meta_tags_latest) -- Fires after every auto-save, after
			--	Profile.MetaData.MetaTagsLatest has been updated with the version that's guaranteed to be saved;
			--  .MetaTagsUpdated will fire regardless of whether .MetaTagsLatest changed after update;
			--	.MetaTagsUpdated may fire after the Profile is released - changes to Profile.Data are not saved
			--	after release.

		Profile.RobloxMetaData    [table] -- Writable table that gets saved automatically and once the profile is released
		Profile.UserIds           [table] -- (Read-only) -- {user_id [number], ...} -- User ids associated with this profile

		Profile.KeyInfo           [DataStoreKeyInfo]
		Profile.KeyInfoUpdated    [ScriptSignal] (key_info [DataStoreKeyInfo])
		
		Profile.GlobalUpdates     [GlobalUpdates]
		
	Methods [Profile]:
	
		-- SAFE METHODS - Will not error after profile expires:
		Profile:IsActive() --> [bool] -- Returns true while the profile is active and can be written to
			
		Profile:GetMetaTag(tag_name) --> value [any]
			tag_name   [string]
		
		Profile:Reconcile() -- Fills in missing (nil) [string_key] = [value] pairs to the Profile.Data structure
		
		Profile:ListenToRelease(listener) --> [ScriptConnection] (place_id / nil, game_job_id / nil)
			-- WARNING: Profiles can be released externally if another session force-loads
			--	this profile - use :ListenToRelease() to handle player leaving cleanup.
			
		Profile:Release() -- Call after the session has finished working with this profile
			e.g., after the player leaves (Profile object will become expired) (Does not yield)

		Profile:ListenToHopReady(listener) --> [ScriptConnection] () -- Passed listener will be executed after the releasing UpdateAsync call finishes;
			--	Wrap universe teleport requests with this method AFTER releasing the profile to improve session lock sharing between universe places;
			--  :ListenToHopReady() will usually call the listener in around a second, but may ocassionally take up to 7 seconds when a release happens
			--	next to an auto-update in regular usage scenarios.

		Profile:AddUserId(user_id) -- Associates user_id with profile (GDPR compliance)
			user_id   [number]

		Profile:RemoveUserId(user_id) -- Unassociates user_id with profile (safe function)
			user_id   [number]

		Profile:Identify() --> [string] -- Returns a string containing DataStore name, scope and key; Used for debug;
			-- Example return: "[Store:"GameData";Scope:"Live";Key:"Player_2312310"]"
		
		Profile:SetMetaTag(tag_name, value) -- Equivalent of Profile.MetaData.MetaTags[tag_name] = value
			tag_name   [string]
			value      [any]
		
		Profile:Save() -- Call to quickly progress global update state or to speed up save validation processes (Does not yield)

		-- VIEW-MODE ONLY:

		Profile:ClearGlobalUpdates() -- Clears all global updates data from a profile payload

		Profile:OverwriteAsync() -- (Yields) Saves the profile payload to the DataStore and removes the session lock
		
	Methods [GlobalUpdates]:
	
	-- ALWAYS PUBLIC:
		GlobalUpdates:GetActiveUpdates() --> [table] {{update_id, update_data [table]}, ...}
		GlobalUpdates:GetLockedUpdates() --> [table] {{update_id, update_data [table]}, ...}
		
	-- ONLY WHEN FROM "Profile.GlobalUpdates":
		GlobalUpdates:ListenToNewActiveUpdate(listener) --> [ScriptConnection] (update_id, update_data)
			update_data   [table]
		GlobalUpdates:ListenToNewLockedUpdate(listener) --> [ScriptConnection] (update_id, update_data)
			update_data   [table]
		GlobalUpdates:LockActiveUpdate(update_id)  -- WARNING: will error after profile expires
		GlobalUpdates:ClearLockedUpdate(update_id) -- WARNING: will error after profile expires
		
	-- EXPOSED TO "update_handler" DURING ProfileStore:GlobalUpdateProfileAsync() CALL
		GlobalUpdates:AddActiveUpdate(update_data)
			update_data   [table]
		GlobalUpdates:ChangeActiveUpdate(update_id, update_data)
			update_data   [table]
		GlobalUpdates:ClearActiveUpdate(update_id)
		
--]]

local SETTINGS = {

	AutoSaveProfiles = 30, -- Seconds (This value may vary - ProfileService will split the auto save load evenly in the given time)
	RobloxWriteCooldown = 7, -- Seconds between successive DataStore calls for the same key
	ForceLoadMaxSteps = 8, -- Steps taken before ForceLoad request steals the active session for a profile
	AssumeDeadSessionLock = 30 * 60, -- (seconds) If a profile hasn't been updated for 30 minutes, assume the session lock is dead
		-- As of writing, os.time() is not completely reliable, so we can only assume session locks are dead after a significant amount of time.
	
	IssueCountForCriticalState = 5, -- Issues to collect to announce critical state
	IssueLast = 120, -- Seconds
	CriticalStateLast = 120, -- Seconds
	
	MetaTagsUpdatedValues = { -- Technical stuff - do not alter
		ProfileCreateTime = true,
		SessionLoadCount = true,
		ActiveSession = true,
		ForceLoadSession = true,
		LastUpdate = true,
	},
	
}

local Madwork -- Standalone Madwork reference for portable version of ProfileService
do

	local MadworkScriptSignal = {}

	local FreeRunnerThread = nil
	
	local function AcquireRunnerThreadAndCallEventHandler(fn, ...)
		local acquired_runner_thread = FreeRunnerThread
		FreeRunnerThread = nil
		fn(...)
		FreeRunnerThread = acquired_runner_thread
	end
	
	local function RunEventHandlerInFreeThread(...)
		AcquireRunnerThreadAndCallEventHandler(...)
		while true do
			AcquireRunnerThreadAndCallEventHandler(coroutine.yield())
		end
	end
	
	-- ScriptConnection object:

	local ScriptConnection = {
		--[[
			_listener = listener,
			_script_signal = script_signal,
			_disconnect_listener = disconnect_listener,
			_disconnect_param = disconnect_param,
			
			_next = next_script_connection,
			_is_connected = is_connected,
		--]]
	}
	ScriptConnection.__index = ScriptConnection

	function ScriptConnection:Disconnect()

		if self._is_connected == false then
			return
		end

		self._is_connected = false
		self._script_signal._listener_count -= 1

		if self._script_signal._head == self then
			self._script_signal._head = self._next
		else
			local prev = self._script_signal._head
			while prev ~= nil and prev._next ~= self do
				prev = prev._next
			end
			if prev ~= nil then
				prev._next = self._next
			end
		end

		if self._disconnect_listener ~= nil then
			if not FreeRunnerThread then
				FreeRunnerThread = coroutine.create(RunEventHandlerInFreeThread)
			end
			task.spawn(FreeRunnerThread, self._disconnect_listener, self._disconnect_param)
			self._disconnect_listener = nil
		end

	end
	
	-- ScriptSignal object:

	local ScriptSignal = {
		--[[
			_head = nil,
			_listener_count = 0,
		--]]
	}
	ScriptSignal.__index = ScriptSignal

	function ScriptSignal:Connect(listener, disconnect_listener, disconnect_param) --> [ScriptConnection]

		local script_connection = {
			_listener = listener,
			_script_signal = self,
			_disconnect_listener = disconnect_listener,
			_disconnect_param = disconnect_param,

			_next = self._head,
			_is_connected = true,
		}
		setmetatable(script_connection, ScriptConnection)

		self._head = script_connection
		self._listener_count += 1

		return script_connection

	end

	function ScriptSignal:GetListenerCount() --> [number]
		return self._listener_count
	end

	function ScriptSignal:Fire(...)
		local item = self._head
		while item ~= nil do
			if item._is_connected == true then
				if not FreeRunnerThread then
					FreeRunnerThread = coroutine.create(RunEventHandlerInFreeThread)
				end
				task.spawn(FreeRunnerThread, item._listener, ...)
			end
			item = item._next
		end
	end

	function ScriptSignal:FireUntil(continue_callback, ...)
		local item = self._head
		while item ~= nil do
			if item._is_connected == true then
				item._listener(...)
				if continue_callback() ~= true then
					return
				end
			end
			item = item._next
		end
	end

	function MadworkScriptSignal.NewScriptSignal() --> [ScriptSignal]
		return {
			_head = nil,
			_listener_count = 0,
			Connect = ScriptSignal.Connect,
			GetListenerCount = ScriptSignal.GetListenerCount,
			Fire = ScriptSignal.Fire,
			FireUntil = ScriptSignal.FireUntil,
		}
	end

	-- Madwork framework namespace:
	
	Madwork = {
		NewScriptSignal = MadworkScriptSignal.NewScriptSignal,
		ConnectToOnClose = function(task, run_in_studio_mode)
			if game:GetService("RunService"):IsStudio() == false or run_in_studio_mode == true then
				game:BindToClose(task)
			end
		end,
	}

end

----- Service Table -----

local ProfileService = {

	ServiceLocked = false, -- Set to true once the server is shutting down

	IssueSignal = Madwork.NewScriptSignal(), -- (error_message, profile_store_name, profile_key) -- Fired when a DataStore API call throws an error
	CorruptionSignal = Madwork.NewScriptSignal(), -- (profile_store_name, profile_key) -- Fired when DataStore key returns a value that has
	-- all or some of it's profile components set to invalid data types. E.g., accidentally setting Profile.Data to a noon table value

	CriticalState = false, -- Set to true while DataStore service is throwing too many errors
	CriticalStateSignal = Madwork.NewScriptSignal(), -- (is_critical_state) -- Fired when CriticalState is set to true
	-- (You may alert players with this, or set up analytics)

	ServiceIssueCount = 0,

	_active_profile_stores = {}, -- {profile_store, ...}

	_auto_save_list = {}, -- {profile, ...} -- loaded profile table which will be circularly auto-saved

	_issue_queue = {}, -- [table] {issue_time, ...}
	_critical_state_start = 0, -- [number] 0 = no critical state / os.clock() = critical state start

	-- Debug:
	_mock_data_store = {},
	_user_mock_data_store = {},

	_use_mock_data_store = false,

}

--[[
	Saved profile structure:
	
	DataStoreProfile = {
		Data = {},
		MetaData = {
			ProfileCreateTime = 0,
			SessionLoadCount = 0,
			ActiveSession = {place_id, game_job_id} / nil,
			ForceLoadSession = {place_id, game_job_id} / nil,
			MetaTags = {},
			LastUpdate = 0, -- os.time()
		},
		RobloxMetaData = {},
		UserIds = {},
		GlobalUpdates = {
			update_index,
			{
				{update_id, version_id, update_locked, update_data},
				...
			}
		},
	}
	
	OR
	
	DataStoreProfile = {
		GlobalUpdates = {
			update_index,
			{
				{update_id, version_id, update_locked, update_data},
				...
			}
		},
	}
--]]

----- Private Variables -----

local ActiveProfileStores = ProfileService._active_profile_stores
local AutoSaveList = ProfileService._auto_save_list
local IssueQueue = ProfileService._issue_queue

local DataStoreService = game:GetService("DataStoreService")
local RunService = game:GetService("RunService")

local PlaceId = game.PlaceId
local JobId = game.JobId

local AutoSaveIndex = 1 -- Next profile to auto save
local LastAutoSave = os.clock()

local LoadIndex = 0

local ActiveProfileLoadJobs = 0 -- Number of active threads that are loading in profiles
local ActiveProfileSaveJobs = 0 -- Number of active threads that are saving profiles

local CriticalStateStart = 0 -- os.clock()

local IsStudio = RunService:IsStudio()
local IsLiveCheckActive = false

local UseMockDataStore = false
local MockDataStore = ProfileService._mock_data_store -- Mock data store used when API access is disabled

local UserMockDataStore = ProfileService._user_mock_data_store -- Separate mock data store accessed via ProfileStore.Mock
local UseMockTag = {}

local CustomWriteQueue = {
	--[[
		[store] = {
			[key] = {
				LastWrite = os.clock(),
				Queue = {callback, ...},
				CleanupJob = nil,
			},
			...
		},
		...
	--]]
}

----- Utils -----

local function DeepCopyTable(t)
	local copy = {}
	for key, value in pairs(t) do
		if type(value) == "table" then
			copy[key] = DeepCopyTable(value)
		else
			copy[key] = value
		end
	end
	return copy
end

local function ReconcileTable(target, template)
	for k, v in pairs(template) do
		if type(k) == "string" then -- Only string keys will be reconciled
			if target[k] == nil then
				if type(v) == "table" then
					target[k] = DeepCopyTable(v)
				else
					target[k] = v
				end
			elseif type(target[k]) == "table" and type(v) == "table" then
				ReconcileTable(target[k], v)
			end
		end
	end
end

----- Private functions -----

local function IdentifyProfile(store_name, store_scope, key)
	return string.format(
		"[Store:\"%s\";%sKey:\"%s\"]",
		store_name,
		store_scope ~= nil and string.format("Scope:\"%s\";", store_scope) or "",
		key
	)
end

local function CustomWriteQueueCleanup(store, key)
	if CustomWriteQueue[store] ~= nil then
		CustomWriteQueue[store][key] = nil
		if next(CustomWriteQueue[store]) == nil then
			CustomWriteQueue[store] = nil
		end
	end
end

local function CustomWriteQueueMarkForCleanup(store, key)
	if CustomWriteQueue[store] ~= nil then
		if CustomWriteQueue[store][key] ~= nil then

			local queue_data = CustomWriteQueue[store][key]
			local queue = queue_data.Queue

			if queue_data.CleanupJob == nil then

				queue_data.CleanupJob = RunService.Heartbeat:Connect(function()
					if os.clock() - queue_data.LastWrite > SETTINGS.RobloxWriteCooldown and #queue == 0 then
						queue_data.CleanupJob:Disconnect()
						CustomWriteQueueCleanup(store, key)
					end
				end)

			end

		elseif next(CustomWriteQueue[store]) == nil then
			CustomWriteQueue[store] = nil
		end
	end
end

local function CustomWriteQueueAsync(callback, store, key) --> ... -- Passed return from callback

	if CustomWriteQueue[store] == nil then
		CustomWriteQueue[store] = {}
	end
	if CustomWriteQueue[store][key] == nil then
		CustomWriteQueue[store][key] = {LastWrite = 0, Queue = {}, CleanupJob = nil}
	end

	local queue_data = CustomWriteQueue[store][key]
	local queue = queue_data.Queue

	-- Cleanup job:

	if queue_data.CleanupJob ~= nil then
		queue_data.CleanupJob:Disconnect()
		queue_data.CleanupJob = nil
	end

	-- Queue logic:

	if os.clock() - queue_data.LastWrite > SETTINGS.RobloxWriteCooldown and #queue == 0 then
		queue_data.LastWrite = os.clock()
		return callback()
	else
		table.insert(queue, callback)
		while true do
			if os.clock() - queue_data.LastWrite > SETTINGS.RobloxWriteCooldown and queue[1] == callback then
				table.remove(queue, 1)
				queue_data.LastWrite = os.clock()
				return callback()
			end
			task.wait()
		end
	end

end

local function IsCustomWriteQueueEmptyFor(store, key) --> is_empty [bool]
	local lookup = CustomWriteQueue[store]
	if lookup ~= nil then
		lookup = lookup[key]
		return lookup == nil or #lookup.Queue == 0
	end
	return true
end

local function WaitForLiveAccessCheck() -- This function was created to prevent the ProfileService module yielding execution when required
	while IsLiveCheckActive == true do
		task.wait()
	end
end

local function WaitForPendingProfileStore(profile_store)
	while profile_store._is_pending == true do
		task.wait()
	end
end

local function RegisterIssue(error_message, store_name, store_scope, profile_key) -- Called when a DataStore API call errors
	warn("[ProfileService]: DataStore API error " .. IdentifyProfile(store_name, store_scope, profile_key) .. " - \"" .. tostring(error_message) .. "\"")
	table.insert(IssueQueue, os.clock()) -- Adding issue time to queue
	ProfileService.IssueSignal:Fire(tostring(error_message), store_name, profile_key)
end

local function RegisterCorruption(store_name, store_scope, profile_key) -- Called when a corrupted profile is loaded
	warn("[ProfileService]: Resolved profile corruption " .. IdentifyProfile(store_name, store_scope, profile_key))
	ProfileService.CorruptionSignal:Fire(store_name, profile_key)
end

local function NewMockDataStoreKeyInfo(params)

	local version_id_string = tostring(params.VersionId or 0)
	local meta_data = params.MetaData or {}
	local user_ids = params.UserIds or {}

	return {
		CreatedTime = params.CreatedTime,
		UpdatedTime = params.UpdatedTime,
		Version = string.rep("0", 16) .. "."
			.. string.rep("0", 10 - string.len(version_id_string)) .. version_id_string
			.. "." .. string.rep("0", 16) .. "." .. "01",

		GetMetadata = function()
			return DeepCopyTable(meta_data)
		end,

		GetUserIds = function()
			return DeepCopyTable(user_ids)
		end,
	}

end

local function MockUpdateAsync(mock_data_store, profile_store_name, key, transform_function, is_get_call) --> loaded_data, key_info

	local profile_store = mock_data_store[profile_store_name]

	if profile_store == nil then
		profile_store = {}
		mock_data_store[profile_store_name] = profile_store
	end

	local epoch_time = math.floor(os.time() * 1000)
	local mock_entry = profile_store[key]
	local mock_entry_was_nil = false

	if mock_entry == nil then
		mock_entry_was_nil = true
		if is_get_call ~= true then
			mock_entry = {
				Data = nil,
				CreatedTime = epoch_time,
				UpdatedTime = epoch_time,
				VersionId = 0,
				UserIds = {},
				MetaData = {},
			}
			profile_store[key] = mock_entry
		end
	end

	local mock_key_info = mock_entry_was_nil == false and NewMockDataStoreKeyInfo(mock_entry) or nil

	local transform, user_ids, roblox_meta_data = transform_function(mock_entry and mock_entry.Data, mock_key_info)

	if transform == nil then
		return nil
	else
		if mock_entry ~= nil and is_get_call ~= true then
			mock_entry.Data = transform
			mock_entry.UserIds = DeepCopyTable(user_ids or {})
			mock_entry.MetaData = DeepCopyTable(roblox_meta_data or {})
			mock_entry.VersionId += 1
			mock_entry.UpdatedTime = epoch_time
		end

		return DeepCopyTable(transform), mock_entry ~= nil and NewMockDataStoreKeyInfo(mock_entry) or nil
	end

end

local function IsThisSession(session_tag)
	return session_tag[1] == PlaceId and session_tag[2] == JobId
end

--[[
update_settings = {
	ExistingProfileHandle = function(latest_data),
	MissingProfileHandle = function(latest_data),
	EditProfile = function(lastest_data),
}
--]]
local function StandardProfileUpdateAsyncDataStore(profile_store, profile_key, update_settings, is_user_mock, is_get_call, version) --> loaded_data, key_info
	local loaded_data, key_info
	local success, error_message = pcall(function()
		local transform_function = function(latest_data)

			local missing_profile = false
			local data_corrupted = false
			local global_updates_data = {0, {}}

			if latest_data == nil then
				missing_profile = true
			elseif type(latest_data) ~= "table" then
				missing_profile = true
				data_corrupted = true
			end

			if type(latest_data) == "table" then
				-- Case #1: Profile was loaded
				if type(latest_data.Data) == "table"
					and type(latest_data.MetaData) == "table"
					and type(latest_data.GlobalUpdates) == "table" then

					latest_data.WasCorrupted = false -- Must be set to false if set previously
					global_updates_data = latest_data.GlobalUpdates
					if update_settings.ExistingProfileHandle ~= nil then
						update_settings.ExistingProfileHandle(latest_data)
					end
					-- Case #2: Profile was not loaded but GlobalUpdate data exists
				elseif latest_data.Data == nil
					and latest_data.MetaData == nil
					and type(latest_data.GlobalUpdates) == "table" then

					latest_data.WasCorrupted = false -- Must be set to false if set previously
					global_updates_data = latest_data.GlobalUpdates or global_updates_data
					missing_profile = true
				else
					missing_profile = true
					data_corrupted = true
				end
			end

			-- Case #3: Profile was not created or corrupted and no GlobalUpdate data exists
			if missing_profile == true then
				latest_data = {
					-- Data = nil,
					-- MetaData = nil,
					GlobalUpdates = global_updates_data,
				}
				if update_settings.MissingProfileHandle ~= nil then
					update_settings.MissingProfileHandle(latest_data)
				end
			end

			-- Editing profile:
			if update_settings.EditProfile ~= nil then
				update_settings.EditProfile(latest_data)
			end

			-- Data corruption handling (Silently override with empty profile) (Also run Case #1)
			if data_corrupted == true then
				latest_data.WasCorrupted = true -- Temporary tag that will be removed on first save
			end

			return latest_data, latest_data.UserIds, latest_data.RobloxMetaData
		end
		if is_user_mock == true then -- Used when the profile is accessed through ProfileStore.Mock
			loaded_data, key_info = MockUpdateAsync(UserMockDataStore, profile_store._profile_store_lookup, profile_key, transform_function, is_get_call)
			task.wait() -- Simulate API call yield
		elseif UseMockDataStore == true then -- Used when API access is disabled
			loaded_data, key_info = MockUpdateAsync(MockDataStore, profile_store._profile_store_lookup, profile_key, transform_function, is_get_call)
			task.wait() -- Simulate API call yield
		else
			loaded_data, key_info = CustomWriteQueueAsync(
				function() -- Callback
					if is_get_call == true then
						local get_data, get_key_info
						if version ~= nil then
							local success, error_message = pcall(function()
								get_data, get_key_info = profile_store._global_data_store:GetVersionAsync(profile_key, version)
							end)
							if success == false and type(error_message) == "string" and string.find(error_message, "not valid") ~= nil then
								warn("[ProfileService]: Passed version argument is not valid; Traceback:\n" .. debug.traceback())
							end
						else
							get_data, get_key_info = profile_store._global_data_store:GetAsync(profile_key)
						end
						get_data = transform_function(get_data)
						return get_data, get_key_info
					else
						return profile_store._global_data_store:UpdateAsync(profile_key, transform_function)
					end
				end,
				profile_store._profile_store_lookup, -- Store
				profile_key -- Key
			)
		end
	end)
	if success == true and type(loaded_data) == "table" then
		-- Corruption handling:
		if loaded_data.WasCorrupted == true and is_get_call ~= true then
			RegisterCorruption(
				profile_store._profile_store_name,
				profile_store._profile_store_scope,
				profile_key
			)
		end
		-- Return loaded_data:
		return loaded_data, key_info
	else
		RegisterIssue(
			(error_message ~= nil) and error_message or "Undefined error",
			profile_store._profile_store_name,
			profile_store._profile_store_scope,
			profile_key
		)
		-- Return nothing:
		return nil
	end
end

local function RemoveProfileFromAutoSave(profile)
	local auto_save_index = table.find(AutoSaveList, profile)
	if auto_save_index ~= nil then
		table.remove(AutoSaveList, auto_save_index)
		if auto_save_index < AutoSaveIndex then
			AutoSaveIndex = AutoSaveIndex - 1 -- Table contents were moved left before AutoSaveIndex so move AutoSaveIndex left as well
		end
		if AutoSaveList[AutoSaveIndex] == nil then -- AutoSaveIndex was at the end of the AutoSaveList - reset to 1
			AutoSaveIndex = 1
		end
	end
end

local function AddProfileToAutoSave(profile) -- Notice: Makes sure this profile isn't auto-saved too soon
	-- Add at AutoSaveIndex and move AutoSaveIndex right:
	table.insert(AutoSaveList, AutoSaveIndex, profile)
	if #AutoSaveList > 1 then
		AutoSaveIndex = AutoSaveIndex + 1
	elseif #AutoSaveList == 1 then
		-- First profile created - make sure it doesn't get immediately auto saved:
		LastAutoSave = os.clock()
	end
end

local function ReleaseProfileInternally(profile)
	-- 1) Remove profile object from ProfileService references: --
	-- Clear reference in ProfileStore:
	local profile_store = profile._profile_store
	local loaded_profiles = profile._is_user_mock == true and profile_store._mock_loaded_profiles or profile_store._loaded_profiles
	loaded_profiles[profile._profile_key] = nil
	if next(profile_store._loaded_profiles) == nil and next(profile_store._mock_loaded_profiles) == nil then -- ProfileStore has turned inactive
		local index = table.find(ActiveProfileStores, profile_store)
		if index ~= nil then
			table.remove(ActiveProfileStores, index)
		end
	end
	-- Clear auto update reference:
	RemoveProfileFromAutoSave(profile)
	-- 2) Trigger release listeners: --
	local place_id
	local game_job_id
	local active_session = profile.MetaData.ActiveSession
	if active_session ~= nil then
		place_id = active_session[1]
		game_job_id = active_session[2]
	end
	profile._release_listeners:Fire(place_id, game_job_id)
end

local function CheckForNewGlobalUpdates(profile, old_global_updates_data, new_global_updates_data)
	local global_updates_object = profile.GlobalUpdates -- [GlobalUpdates]
	local pending_update_lock = global_updates_object._pending_update_lock -- {update_id, ...}
	local pending_update_clear = global_updates_object._pending_update_clear -- {update_id, ...}
	-- "old_" or "new_" global_updates_data = {update_index, {{update_id, version_id, update_locked, update_data}, ...}}
	for _, new_global_update in ipairs(new_global_updates_data[2]) do
		-- Find old global update with the same update_id:
		local old_global_update
		for _, global_update in ipairs(old_global_updates_data[2]) do
			if global_update[1] == new_global_update[1] then
				old_global_update = global_update
				break
			end
		end
		-- A global update is new when it didn't exist before or its version_id or update_locked state changed:
		local is_new = false
		if old_global_update == nil or new_global_update[2] > old_global_update[2] or new_global_update[3] ~= old_global_update[3] then
			is_new = true
		end
		if is_new == true then
			-- Active global updates:
			if new_global_update[3] == false then
				-- Check if update is not pending to be locked: (Preventing firing new active update listeners more than necessary)
				local is_pending_lock = false
				for _, update_id in ipairs(pending_update_lock) do
					if new_global_update[1] == update_id then
						is_pending_lock = true
						break
					end
				end
				if is_pending_lock == false then
					-- Trigger new active update listeners:
					global_updates_object._new_active_update_listeners:Fire(new_global_update[1], new_global_update[4])
				end
			end
			-- Locked global updates:
			if new_global_update[3] == true then
				-- Check if update is not pending to be cleared: (Preventing firing new locked update listeners after marking a locked update for clearing)
				local is_pending_clear = false
				for _, update_id in ipairs(pending_update_clear) do
					if new_global_update[1] == update_id then
						is_pending_clear = true
						break
					end
				end
				if is_pending_clear == false then
					-- Trigger new locked update listeners:

					global_updates_object._new_locked_update_listeners:FireUntil(
						function()
							-- Check if listener marked the update to be cleared:
							-- Normally there should be only one listener per profile for new locked global updates, but
							-- in case several listeners are connected we will not trigger more listeners after one listener
							-- marks the locked global update to be cleared.
							return table.find(pending_update_clear, new_global_update[1]) == nil
						end,
						new_global_update[1], new_global_update[4]
					)

				end
			end
		end
	end
end

local function SaveProfileAsync(profile, release_from_session, is_overwriting)
	if type(profile.Data) ~= "table" then
		RegisterCorruption(
			profile._profile_store._profile_store_name,
			profile._profile_store._profile_store_scope,
			profile._profile_key
		)
		error("[ProfileService]: PROFILE DATA CORRUPTED DURING RUNTIME! Profile: " .. profile:Identify())
	end
	if release_from_session == true and is_overwriting ~= true then
		ReleaseProfileInternally(profile)
	end
	ActiveProfileSaveJobs = ActiveProfileSaveJobs + 1
	local last_session_load_count = profile.MetaData.SessionLoadCount
	-- Compare "SessionLoadCount" when writing to profile to prevent a rare case of repeat last save when the profile is loaded on the same server again
	local repeat_save_flag = true -- Released Profile save calls have to repeat until they succeed
	while repeat_save_flag == true do
		if release_from_session ~= true then
			repeat_save_flag = false
		end
		local loaded_data, key_info = StandardProfileUpdateAsyncDataStore(
			profile._profile_store,
			profile._profile_key,
			{
				ExistingProfileHandle = nil,
				MissingProfileHandle = nil,
				EditProfile = function(latest_data)

					local session_owns_profile = false
					local force_load_pending = false

					if is_overwriting ~= true then
						-- 1) Check if this session still owns the profile: --
						local active_session = latest_data.MetaData.ActiveSession
						local force_load_session = latest_data.MetaData.ForceLoadSession
						local session_load_count = latest_data.MetaData.SessionLoadCount

						if type(active_session) == "table" then
							session_owns_profile = IsThisSession(active_session) and session_load_count == last_session_load_count
						end
						if type(force_load_session) == "table" then
							force_load_pending = not IsThisSession(force_load_session)
						end
					else
						session_owns_profile = true
					end

					if session_owns_profile == true then -- We may only edit the profile if this session has ownership of the profile

						if is_overwriting ~= true then
							-- 2) Manage global updates: --
							local latest_global_updates_data = latest_data.GlobalUpdates -- {update_index, {{update_id, version_id, update_locked, update_data}, ...}}
							local latest_global_updates_list = latest_global_updates_data[2]

							local global_updates_object = profile.GlobalUpdates -- [GlobalUpdates]
							local pending_update_lock = global_updates_object._pending_update_lock -- {update_id, ...}
							local pending_update_clear = global_updates_object._pending_update_clear -- {update_id, ...}
							-- Active update locking:
							for i = 1, #latest_global_updates_list do
								for _, lock_id in ipairs(pending_update_lock) do
									if latest_global_updates_list[i][1] == lock_id then
										latest_global_updates_list[i][3] = true
										break
									end
								end
							end
							-- Locked update clearing:
							for _, clear_id in ipairs(pending_update_clear) do
								for i = 1, #latest_global_updates_list do
									if latest_global_updates_list[i][1] == clear_id and latest_global_updates_list[i][3] == true then
										table.remove(latest_global_updates_list, i)
										break
									end
								end
							end
						end

						-- 3) Save profile data: --
						latest_data.Data = profile.Data
						latest_data.RobloxMetaData = profile.RobloxMetaData
						latest_data.UserIds = profile.UserIds

						if is_overwriting ~= true then
							latest_data.MetaData.MetaTags = profile.MetaData.MetaTags -- MetaData.MetaTags is the only actively savable component of MetaData
							latest_data.MetaData.LastUpdate = os.time()
							if release_from_session == true or force_load_pending == true then
								latest_data.MetaData.ActiveSession = nil
							end
						else
							latest_data.MetaData = profile.MetaData
							latest_data.MetaData.ActiveSession = nil
							latest_data.MetaData.ForceLoadSession = nil
							latest_data.GlobalUpdates = profile.GlobalUpdates._updates_latest
						end

					end
				end,
			},
			profile._is_user_mock
		)
		if loaded_data ~= nil and key_info ~= nil then
			if is_overwriting == true then
				break
			end
			repeat_save_flag = false
			-- 4) Set latest data in profile: --
			-- Updating DataStoreKeyInfo:
			profile.KeyInfo = key_info
			-- Setting global updates:
			local global_updates_object = profile.GlobalUpdates -- [GlobalUpdates]
			local old_global_updates_data = global_updates_object._updates_latest
			local new_global_updates_data = loaded_data.GlobalUpdates
			global_updates_object._updates_latest = new_global_updates_data
			-- Setting MetaData:
			local session_meta_data = profile.MetaData
			local latest_meta_data = loaded_data.MetaData
			for key in pairs(SETTINGS.MetaTagsUpdatedValues) do
				session_meta_data[key] = latest_meta_data[key]
			end
			session_meta_data.MetaTagsLatest = latest_meta_data.MetaTags
			-- 5) Check if session still owns the profile: --
			local active_session = loaded_data.MetaData.ActiveSession
			local session_load_count = loaded_data.MetaData.SessionLoadCount
			local session_owns_profile = false
			if type(active_session) == "table" then
				session_owns_profile = IsThisSession(active_session) and session_load_count == last_session_load_count
			end
			local is_active = profile:IsActive()
			if session_owns_profile == true then
				-- 6) Check for new global updates: --
				if is_active == true then -- Profile could've been released before the saving thread finished
					CheckForNewGlobalUpdates(profile, old_global_updates_data, new_global_updates_data)
				end
			else
				-- Session no longer owns the profile:
				-- 7) Release profile if it hasn't been released yet: --
				if is_active == true then
					ReleaseProfileInternally(profile)
				end
				-- Cleanup reference in custom write queue:
				CustomWriteQueueMarkForCleanup(profile._profile_store._profile_store_lookup, profile._profile_key)
				-- Hop ready listeners:
				if profile._hop_ready == false then
					profile._hop_ready = true
					profile._hop_ready_listeners:Fire()
				end
			end
			-- Signaling MetaTagsUpdated listeners after a possible external profile release was handled:
			profile.MetaTagsUpdated:Fire(profile.MetaData.MetaTagsLatest)
			-- Signaling KeyInfoUpdated listeners:
			profile.KeyInfoUpdated:Fire(key_info)
		elseif repeat_save_flag == true then
			task.wait() -- Prevent infinite loop in case DataStore API does not yield
		end
	end
	ActiveProfileSaveJobs = ActiveProfileSaveJobs - 1
end

----- Public functions -----

-- GlobalUpdates object:

local GlobalUpdates = {
	--[[
		_updates_latest = {}, -- [table] {update_index, {{update_id, version_id, update_locked, update_data}, ...}}
		_pending_update_lock = {update_id, ...} / nil, -- [table / nil]
		_pending_update_clear = {update_id, ...} / nil, -- [table / nil]
		
		_new_active_update_listeners = [ScriptSignal] / nil, -- [table / nil]
		_new_locked_update_listeners = [ScriptSignal] / nil, -- [table / nil]
		
		_profile = Profile / nil, -- [Profile / nil]
		
		_update_handler_mode = true / nil, -- [bool / nil]
	--]]
}
GlobalUpdates.__index = GlobalUpdates

-- ALWAYS PUBLIC:
function GlobalUpdates:GetActiveUpdates() --> [table] {{update_id, update_data}, ...}
	local query_list = {}
	for _, global_update in ipairs(self._updates_latest[2]) do
		if global_update[3] == false then
			local is_pending_lock = false
			if self._pending_update_lock ~= nil then
				for _, update_id in ipairs(self._pending_update_lock) do
					if global_update[1] == update_id then
						is_pending_lock = true -- Exclude global updates pending to be locked
						break
					end
				end
			end
			if is_pending_lock == false then
				table.insert(query_list, {global_update[1], global_update[4]})
			end
		end
	end
	return query_list
end

function GlobalUpdates:GetLockedUpdates() --> [table] {{update_id, update_data}, ...}
	local query_list = {}
	for _, global_update in ipairs(self._updates_latest[2]) do
		if global_update[3] == true then
			local is_pending_clear = false
			if self._pending_update_clear ~= nil then
				for _, update_id in ipairs(self._pending_update_clear) do
					if global_update[1] == update_id then
						is_pending_clear = true -- Exclude global updates pending to be cleared
						break
					end
				end
			end
			if is_pending_clear == false then
				table.insert(query_list, {global_update[1], global_update[4]})
			end
		end
	end
	return query_list
end

-- ONLY WHEN FROM "Profile.GlobalUpdates":
function GlobalUpdates:ListenToNewActiveUpdate(listener) --> [ScriptConnection] listener(update_id, update_data)
	if type(listener) ~= "function" then
		error("[ProfileService]: Only a function can be set as listener in GlobalUpdates:ListenToNewActiveUpdate()")
	end
	local profile = self._profile
	if self._update_handler_mode == true then
		error("[ProfileService]: Can't listen to new global updates in ProfileStore:GlobalUpdateProfileAsync()")
	elseif self._new_active_update_listeners == nil then
		error("[ProfileService]: Can't listen to new global updates in view mode")
	elseif profile:IsActive() == false then -- Check if profile is expired
		return { -- Do not connect listener if the profile is expired
			Disconnect = function() end,
		}
	end
	-- Connect listener:
	return self._new_active_update_listeners:Connect(listener)
end

function GlobalUpdates:ListenToNewLockedUpdate(listener) --> [ScriptConnection] listener(update_id, update_data)
	if type(listener) ~= "function" then
		error("[ProfileService]: Only a function can be set as listener in GlobalUpdates:ListenToNewLockedUpdate()")
	end
	local profile = self._profile
	if self._update_handler_mode == true then
		error("[ProfileService]: Can't listen to new global updates in ProfileStore:GlobalUpdateProfileAsync()")
	elseif self._new_locked_update_listeners == nil then
		error("[ProfileService]: Can't listen to new global updates in view mode")
	elseif profile:IsActive() == false then -- Check if profile is expired
		return { -- Do not connect listener if the profile is expired
			Disconnect = function() end,
		}
	end
	-- Connect listener:
	return self._new_locked_update_listeners:Connect(listener)
end

function GlobalUpdates:LockActiveUpdate(update_id)
	if type(update_id) ~= "number" then
		error("[ProfileService]: Invalid update_id")
	end
	local profile = self._profile
	if self._update_handler_mode == true then
		error("[ProfileService]: Can't lock active global updates in ProfileStore:GlobalUpdateProfileAsync()")
	elseif self._pending_update_lock == nil then
		error("[ProfileService]: Can't lock active global updates in view mode")
	elseif profile:IsActive() == false then -- Check if profile is expired
		error("[ProfileService]: PROFILE EXPIRED - Can't lock active global updates")
	end
	-- Check if global update exists with given update_id
	local global_update_exists = nil
	for _, global_update in ipairs(self._updates_latest[2]) do
		if global_update[1] == update_id then
			global_update_exists = global_update
			break
		end
	end
	if global_update_exists ~= nil then
		local is_pending_lock = false
		for _, lock_update_id in ipairs(self._pending_update_lock) do
			if update_id == lock_update_id then
				is_pending_lock = true -- Exclude global updates pending to be locked
				break
			end
		end
		if is_pending_lock == false and global_update_exists[3] == false then -- Avoid id duplicates in _pending_update_lock
			table.insert(self._pending_update_lock, update_id)
		end
	else
		error("[ProfileService]: Passed non-existant update_id")
	end
end

function GlobalUpdates:ClearLockedUpdate(update_id)
	if type(update_id) ~= "number" then
		error("[ProfileService]: Invalid update_id")
	end
	local profile = self._profile
	if self._update_handler_mode == true then
		error("[ProfileService]: Can't clear locked global updates in ProfileStore:GlobalUpdateProfileAsync()")
	elseif self._pending_update_clear == nil then
		error("[ProfileService]: Can't clear locked global updates in view mode")
	elseif profile:IsActive() == false then -- Check if profile is expired
		error("[ProfileService]: PROFILE EXPIRED - Can't clear locked global updates")
	end
	-- Check if global update exists with given update_id
	local global_update_exists = nil
	for _, global_update in ipairs(self._updates_latest[2]) do
		if global_update[1] == update_id then
			global_update_exists = global_update
			break
		end
	end
	if global_update_exists ~= nil then
		local is_pending_clear = false
		for _, clear_update_id in ipairs(self._pending_update_clear) do
			if update_id == clear_update_id then
				is_pending_clear = true -- Exclude global updates pending to be cleared
				break
			end
		end
		if is_pending_clear == false and global_update_exists[3] == true then -- Avoid id duplicates in _pending_update_clear
			table.insert(self._pending_update_clear, update_id)
		end
	else
		error("[ProfileService]: Passed non-existant update_id")
	end
end

-- EXPOSED TO "update_handler" DURING ProfileStore:GlobalUpdateProfileAsync() CALL
function GlobalUpdates:AddActiveUpdate(update_data)
	if type(update_data) ~= "table" then
		error("[ProfileService]: Invalid update_data")
	end
	if self._new_active_update_listeners ~= nil then
		error("[ProfileService]: Can't add active global updates in loaded Profile; Use ProfileStore:GlobalUpdateProfileAsync()")
	elseif self._update_handler_mode ~= true then
		error("[ProfileService]: Can't add active global updates in view mode; Use ProfileStore:GlobalUpdateProfileAsync()")
	end
	-- self._updates_latest = {}, -- [table] {update_index, {{update_id, version_id, update_locked, update_data}, ...}}
	local updates_latest = self._updates_latest
	local update_index = updates_latest[1] + 1 -- Incrementing global update index
	updates_latest[1] = update_index
	-- Add new active global update:
	table.insert(updates_latest[2], {update_index, 1, false, update_data})
end

function GlobalUpdates:ChangeActiveUpdate(update_id, update_data)
	if type(update_id) ~= "number" then
		error("[ProfileService]: Invalid update_id")
	end
	if type(update_data) ~= "table" then
		error("[ProfileService]: Invalid update_data")
	end
	if self._new_active_update_listeners ~= nil then
		error("[ProfileService]: Can't change active global updates in loaded Profile; Use ProfileStore:GlobalUpdateProfileAsync()")
	elseif self._update_handler_mode ~= true then
		error("[ProfileService]: Can't change active global updates in view mode; Use ProfileStore:GlobalUpdateProfileAsync()")
	end
	-- self._updates_latest = {}, -- [table] {update_index, {{update_id, version_id, update_locked, update_data}, ...}}
	local updates_latest = self._updates_latest
	local get_global_update = nil
	for _, global_update in ipairs(updates_latest[2]) do
		if update_id == global_update[1] then
			get_global_update = global_update
			break
		end
	end
	if get_global_update ~= nil then
		if get_global_update[3] == true then
			error("[ProfileService]: Can't change locked global update")
		end
		get_global_update[2] = get_global_update[2] + 1 -- Increment version id
		get_global_update[4] = update_data -- Set new global update data
	else
		error("[ProfileService]: Passed non-existant update_id")
	end
end

function GlobalUpdates:ClearActiveUpdate(update_id)
	if type(update_id) ~= "number" then
		error("[ProfileService]: Invalid update_id argument")
	end
	if self._new_active_update_listeners ~= nil then
		error("[ProfileService]: Can't clear active global updates in loaded Profile; Use ProfileStore:GlobalUpdateProfileAsync()")
	elseif self._update_handler_mode ~= true then
		error("[ProfileService]: Can't clear active global updates in view mode; Use ProfileStore:GlobalUpdateProfileAsync()")
	end
	-- self._updates_latest = {}, -- [table] {update_index, {{update_id, version_id, update_locked, update_data}, ...}}
	local updates_latest = self._updates_latest
	local get_global_update_index = nil
	local get_global_update = nil
	for index, global_update in ipairs(updates_latest[2]) do
		if update_id == global_update[1] then
			get_global_update_index = index
			get_global_update = global_update
			break
		end
	end
	if get_global_update ~= nil then
		if get_global_update[3] == true then
			error("[ProfileService]: Can't clear locked global update")
		end
		table.remove(updates_latest[2], get_global_update_index) -- Remove active global update
	else
		error("[ProfileService]: Passed non-existant update_id")
	end
end

-- Profile object:

local Profile = {
	--[[
		Data = {}, -- [table] -- Loaded once after ProfileStore:LoadProfileAsync() finishes
		MetaData = {}, -- [table] -- Updated with every auto-save
		GlobalUpdates = GlobalUpdates, -- [GlobalUpdates]
		
		_profile_store = ProfileStore, -- [ProfileStore]
		_profile_key = "", -- [string]
		
		_release_listeners = [ScriptSignal] / nil, -- [table / nil]
		_hop_ready_listeners = [ScriptSignal] / nil, -- [table / nil]
		_hop_ready = false,
		
		_view_mode = true / nil, -- [bool] or nil
		
		_load_timestamp = os.clock(),
		
		_is_user_mock = false, -- ProfileStore.Mock
		_mock_key_info = {},
	--]]
}
Profile.__index = Profile

function Profile:IsActive() --> [bool]
	local loaded_profiles = self._is_user_mock == true and self._profile_store._mock_loaded_profiles or self._profile_store._loaded_profiles
	return loaded_profiles[self._profile_key] == self
end

function Profile:GetMetaTag(tag_name) --> value
	local meta_data = self.MetaData
	if meta_data == nil then
		return nil
		-- error("[ProfileService]: This Profile hasn't been loaded before - MetaData not available")
	end
	return self.MetaData.MetaTags[tag_name]
end

function Profile:SetMetaTag(tag_name, value)
	if type(tag_name) ~= "string" then
		error("[ProfileService]: tag_name must be a string")
	elseif string.len(tag_name) == 0 then
		error("[ProfileService]: Invalid tag_name")
	end
	self.MetaData.MetaTags[tag_name] = value
end

function Profile:Reconcile()
	ReconcileTable(self.Data, self._profile_store._profile_template)
end

function Profile:ListenToRelease(listener) --> [ScriptConnection] (place_id / nil, game_job_id / nil)
	if type(listener) ~= "function" then
		error("[ProfileService]: Only a function can be set as listener in Profile:ListenToRelease()")
	end
	if self._view_mode == true then
		return {Disconnect = function() end}
	end
	if self:IsActive() == false then
		-- Call release listener immediately if profile is expired
		local place_id
		local game_job_id
		local active_session = self.MetaData.ActiveSession
		if active_session ~= nil then
			place_id = active_session[1]
			game_job_id = active_session[2]
		end
		listener(place_id, game_job_id)
		return {Disconnect = function() end}
	else
		return self._release_listeners:Connect(listener)
	end
end

function Profile:Save()
	if self._view_mode == true then
		error("[ProfileService]: Can't save Profile in view mode - Should you be calling :OverwriteAsync() instead?")
	end
	if self:IsActive() == false then
		warn("[ProfileService]: Attempted saving an inactive profile "
			.. self:Identify() .. "; Traceback:\n" .. debug.traceback())
		return
	end
	-- Reject save request if a save is already pending in the queue - this will prevent the user from
	--	unecessary API request spam which we could not meaningfully execute anyways!
	if IsCustomWriteQueueEmptyFor(self._profile_store._profile_store_lookup, self._profile_key) == true then
		-- We don't want auto save to trigger too soon after manual saving - this will reset the auto save timer:
		RemoveProfileFromAutoSave(self)
		AddProfileToAutoSave(self)
		-- Call save function in a new thread:
		task.spawn(SaveProfileAsync, self)
	end
end

function Profile:Release()
	if self._view_mode == true then
		return
	end
	if self:IsActive() == true then
		task.spawn(SaveProfileAsync, self, true) -- Call save function in a new thread with release_from_session = true
	end
end

function Profile:ListenToHopReady(listener) --> [ScriptConnection] ()
	if type(listener) ~= "function" then
		error("[ProfileService]: Only a function can be set as listener in Profile:ListenToHopReady()")
	end
	if self._view_mode == true then
		return {Disconnect = function() end}
	end
	if self._hop_ready == true then
		task.spawn(listener)
		return {Disconnect = function() end}
	else
		return self._hop_ready_listeners:Connect(listener)
	end
end

function Profile:AddUserId(user_id) -- Associates user_id with profile (GDPR compliance)

	if type(user_id) ~= "number" or user_id % 1 ~= 0 then
		warn("[ProfileService]: Invalid UserId argument for :AddUserId() ("
			.. tostring(user_id) .. "); Traceback:\n" .. debug.traceback())
		return
	end

	if user_id < 0 and self._is_user_mock ~= true and UseMockDataStore ~= true then
		return -- Avoid giving real Roblox APIs negative UserId's
	end

	if table.find(self.UserIds, user_id) == nil then
		table.insert(self.UserIds, user_id)
	end
	
end

function Profile:RemoveUserId(user_id) -- Unassociates user_id with profile (safe function)

	if type(user_id) ~= "number" or user_id % 1 ~= 0 then
		warn("[ProfileService]: Invalid UserId argument for :RemoveUserId() ("
			.. tostring(user_id) .. "); Traceback:\n" .. debug.traceback())
		return
	end
	
	local index = table.find(self.UserIds, user_id)

	if index ~= nil then
		table.remove(self.UserIds, index)
	end

end

function Profile:Identify() --> [string]
	return IdentifyProfile(
		self._profile_store._profile_store_name,
		self._profile_store._profile_store_scope,
		self._profile_key
	)
end

function Profile:ClearGlobalUpdates() -- Clears all global updates data from a profile payload

	if self._view_mode ~= true then
		error("[ProfileService]: :ClearGlobalUpdates() can only be used in view mode")
	end

	local global_updates_object = {
		_updates_latest = {0, {}},
		_profile = self,
	}
	setmetatable(global_updates_object, GlobalUpdates)

	self.GlobalUpdates = global_updates_object

end

function Profile:OverwriteAsync() -- Saves the profile to the DataStore and removes the session lock

	if self._view_mode ~= true then
		error("[ProfileService]: :OverwriteAsync() can only be used in view mode")
	end

	SaveProfileAsync(self, nil, true)

end

-- ProfileVersionQuery object:

local ProfileVersionQuery = {
	--[[
		_profile_store = profile_store,
		_profile_key = profile_key,
		_sort_direction = sort_direction,
		_min_date = min_date,
		_max_date = max_date,

		_query_pages = pages, -- [DataStoreVersionPages]
		_query_index = index, -- [number]
		_query_failure = false,

		_is_query_yielded = false,
		_query_queue = {},
	--]]
}
ProfileVersionQuery.__index = ProfileVersionQuery

function ProfileVersionQuery:_MoveQueue()
	while #self._query_queue > 0 do
		local queue_entry = table.remove(self._query_queue, 1)
		task.spawn(queue_entry)
		if self._is_query_yielded == true then
			break
		end
	end
end

function ProfileVersionQuery:NextAsync(_is_stacking) --> [Profile] or nil

	if self._profile_store == nil then
		return nil
	end

	local profile
	local is_finished = false

	local function query_job()

		if self._query_failure == true then
			is_finished = true
			return
		end

		-- First "next" call loads version pages:

		if self._query_pages == nil then

			self._is_query_yielded = true
			task.spawn(function()
				profile = self:NextAsync(true)
				is_finished = true
			end)
			
			local list_success, error_message = pcall(function()
				self._query_pages = self._profile_store._global_data_store:ListVersionsAsync(
					self._profile_key,
					self._sort_direction,
					self._min_date,
					self._max_date
				)
				self._query_index = 0
			end)

			if list_success == false or self._query_pages == nil then
				warn("[ProfileService]: Version query fail - " .. tostring(error_message))
				self._query_failure = true
			end

			self._is_query_yielded = false
			self:_MoveQueue()

			return

		end

		local current_page = self._query_pages:GetCurrentPage()
		local next_item = current_page[self._query_index + 1]

		-- No more entries:
		
		if self._query_pages.IsFinished == true and next_item == nil then
			is_finished = true
			return
		end

		-- Load next page when this page is over:

		if next_item == nil then

			self._is_query_yielded = true
			task.spawn(function()
				profile = self:NextAsync(true)
				is_finished = true
			end)

			local success = pcall(function()
				self._query_pages:AdvanceToNextPageAsync()
				self._query_index = 0
			end)

			if success == false or #self._query_pages:GetCurrentPage() == 0 then
				self._query_failure = true
			end

			self._is_query_yielded = false
			self:_MoveQueue()

			return

		end

		-- Next page item:

		self._query_index += 1
		profile = self._profile_store:ViewProfileAsync(self._profile_key, next_item.Version)
		is_finished = true

	end

	if self._is_query_yielded == false then
		query_job()
	else
		if _is_stacking == true then
			table.insert(self._query_queue, 1, query_job)
		else
			table.insert(self._query_queue, query_job)
		end
	end

	while is_finished == false do
		task.wait()
	end

	return profile

end

-- ProfileStore object:

local ProfileStore = {
	--[[
		Mock = {},
	
		_profile_store_name = "", -- [string] -- DataStore name
		_profile_store_scope = nil, -- [string] or [nil] -- DataStore scope
		_profile_store_lookup = "", -- [string] -- _profile_store_name .. "\0" .. (_profile_store_scope or "")
		
		_profile_template = {}, -- [table]
		_global_data_store = global_data_store, -- [GlobalDataStore] -- Object returned by DataStoreService:GetDataStore(_profile_store_name)
		
		_loaded_profiles = {[profile_key] = Profile, ...},
		_profile_load_jobs = {[profile_key] = {load_id, loaded_data}, ...},
		
		_mock_loaded_profiles = {[profile_key] = Profile, ...},
		_mock_profile_load_jobs = {[profile_key] = {load_id, loaded_data}, ...},
	--]]
}
ProfileStore.__index = ProfileStore

function ProfileStore:LoadProfileAsync(profile_key, not_released_handler, _use_mock) --> [Profile / nil] not_released_handler(place_id, game_job_id)

	not_released_handler = not_released_handler or "ForceLoad"

	if self._profile_template == nil then
		error("[ProfileService]: Profile template not set - ProfileStore:LoadProfileAsync() locked for this ProfileStore")
	end
	if type(profile_key) ~= "string" then
		error("[ProfileService]: profile_key must be a string")
	elseif string.len(profile_key) == 0 then
		error("[ProfileService]: Invalid profile_key")
	end
	if type(not_released_handler) ~= "function" and not_released_handler ~= "ForceLoad" and not_released_handler ~= "Steal" then
		error("[ProfileService]: Invalid not_released_handler")
	end

	if ProfileService.ServiceLocked == true then
		return nil
	end

	WaitForPendingProfileStore(self)

	local is_user_mock = _use_mock == UseMockTag

	-- Check if profile with profile_key isn't already loaded in this session:
	for _, profile_store in ipairs(ActiveProfileStores) do
		if profile_store._profile_store_lookup == self._profile_store_lookup then
			local loaded_profiles = is_user_mock == true and profile_store._mock_loaded_profiles or profile_store._loaded_profiles
			if loaded_profiles[profile_key] ~= nil then
				error("[ProfileService]: Profile " .. IdentifyProfile(self._profile_store_name, self._profile_store_scope, profile_key) .. " is already loaded in this session")
				-- Are you using Profile:Release() properly?
			end
		end
	end

	ActiveProfileLoadJobs = ActiveProfileLoadJobs + 1
	local force_load = not_released_handler == "ForceLoad"
	local force_load_steps = 0
	local request_force_load = force_load -- First step of ForceLoad
	local steal_session = false -- Second step of ForceLoad
	local aggressive_steal = not_released_handler == "Steal" -- Developer invoked steal
	while ProfileService.ServiceLocked == false do
		-- Load profile:
		-- SPECIAL CASE - If LoadProfileAsync is called for the same key before another LoadProfileAsync finishes,
		-- yoink the DataStore return for the new call. The older call will return nil. This would prevent very rare
		-- game breaking errors where a player rejoins the server super fast.
		local profile_load_jobs = is_user_mock == true and self._mock_profile_load_jobs or self._profile_load_jobs
		local loaded_data, key_info
		local load_id = LoadIndex + 1
		LoadIndex = load_id
		local profile_load_job = profile_load_jobs[profile_key] -- {load_id, {loaded_data, key_info} or nil}
		if profile_load_job ~= nil then
			profile_load_job[1] = load_id -- Yoink load job
			while profile_load_job[2] == nil do -- Wait for job to finish
				task.wait()
			end
			if profile_load_job[1] == load_id then -- Load job hasn't been double-yoinked
				loaded_data, key_info = table.unpack(profile_load_job[2])
				profile_load_jobs[profile_key] = nil
			else
				ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
				return nil
			end
		else
			profile_load_job = {load_id, nil}
			profile_load_jobs[profile_key] = profile_load_job
			profile_load_job[2] = table.pack(StandardProfileUpdateAsyncDataStore(
				self,
				profile_key,
				{
					ExistingProfileHandle = function(latest_data)
						if ProfileService.ServiceLocked == false then
							local active_session = latest_data.MetaData.ActiveSession
							local force_load_session = latest_data.MetaData.ForceLoadSession
							-- IsThisSession(active_session)
							if active_session == nil then
								latest_data.MetaData.ActiveSession = {PlaceId, JobId}
								latest_data.MetaData.ForceLoadSession = nil
							elseif type(active_session) == "table" then
								if IsThisSession(active_session) == false then
									local last_update = latest_data.MetaData.LastUpdate
									if last_update ~= nil then
										if os.time() - last_update > SETTINGS.AssumeDeadSessionLock then
											latest_data.MetaData.ActiveSession = {PlaceId, JobId}
											latest_data.MetaData.ForceLoadSession = nil
											return
										end
									end
									if steal_session == true or aggressive_steal == true then
										local force_load_uninterrupted = false
										if force_load_session ~= nil then
											force_load_uninterrupted = IsThisSession(force_load_session)
										end
										if force_load_uninterrupted == true or aggressive_steal == true then
											latest_data.MetaData.ActiveSession = {PlaceId, JobId}
											latest_data.MetaData.ForceLoadSession = nil
										end
									elseif request_force_load == true then
										latest_data.MetaData.ForceLoadSession = {PlaceId, JobId}
									end
								else
									latest_data.MetaData.ForceLoadSession = nil
								end
							end
						end
					end,
					MissingProfileHandle = function(latest_data)
						latest_data.Data = DeepCopyTable(self._profile_template)
						latest_data.MetaData = {
							ProfileCreateTime = os.time(),
							SessionLoadCount = 0,
							ActiveSession = {PlaceId, JobId},
							ForceLoadSession = nil,
							MetaTags = {},
						}
					end,
					EditProfile = function(latest_data)
						if ProfileService.ServiceLocked == false then
							local active_session = latest_data.MetaData.ActiveSession
							if active_session ~= nil and IsThisSession(active_session) == true then
								latest_data.MetaData.SessionLoadCount = latest_data.MetaData.SessionLoadCount + 1
								latest_data.MetaData.LastUpdate = os.time()
							end
						end
					end,
				},
				is_user_mock
			))
			if profile_load_job[1] == load_id then -- Load job hasn't been yoinked
				loaded_data, key_info = table.unpack(profile_load_job[2])
				profile_load_jobs[profile_key] = nil
			else
				ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
				return nil -- Load job yoinked
			end
		end
		-- Handle load_data:
		if loaded_data ~= nil and key_info ~= nil then
			local active_session = loaded_data.MetaData.ActiveSession
			if type(active_session) == "table" then
				if IsThisSession(active_session) == true then
					-- Special component in MetaTags:
					loaded_data.MetaData.MetaTagsLatest = DeepCopyTable(loaded_data.MetaData.MetaTags)
					-- Case #1: Profile is now taken by this session:
					-- Create Profile object:
					local global_updates_object = {
						_updates_latest = loaded_data.GlobalUpdates,
						_pending_update_lock = {},
						_pending_update_clear = {},

						_new_active_update_listeners = Madwork.NewScriptSignal(),
						_new_locked_update_listeners = Madwork.NewScriptSignal(),

						_profile = nil,
					}
					setmetatable(global_updates_object, GlobalUpdates)
					local profile = {
						Data = loaded_data.Data,
						MetaData = loaded_data.MetaData,
						MetaTagsUpdated = Madwork.NewScriptSignal(),

						RobloxMetaData = loaded_data.RobloxMetaData or {},
						UserIds = loaded_data.UserIds or {},
						KeyInfo = key_info,
						KeyInfoUpdated = Madwork.NewScriptSignal(),

						GlobalUpdates = global_updates_object,

						_profile_store = self,
						_profile_key = profile_key,

						_release_listeners = Madwork.NewScriptSignal(),
						_hop_ready_listeners = Madwork.NewScriptSignal(),
						_hop_ready = false,

						_load_timestamp = os.clock(),

						_is_user_mock = is_user_mock,
					}
					setmetatable(profile, Profile)
					global_updates_object._profile = profile
					-- Referencing Profile object in ProfileStore:
					if next(self._loaded_profiles) == nil and next(self._mock_loaded_profiles) == nil then -- ProfileStore object was inactive
						table.insert(ActiveProfileStores, self)
					end
					if is_user_mock == true then
						self._mock_loaded_profiles[profile_key] = profile
					else
						self._loaded_profiles[profile_key] = profile
					end
					-- Adding profile to AutoSaveList;
					AddProfileToAutoSave(profile)
					-- Special case - finished loading profile, but session is shutting down:
					if ProfileService.ServiceLocked == true then
						SaveProfileAsync(profile, true) -- Release profile and yield until the DataStore call is finished
						profile = nil -- nil will be returned by this call
					end
					-- Return Profile object:
					ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
					return profile
				else
					-- Case #2: Profile is taken by some other session:
					if force_load == true then
						local force_load_session = loaded_data.MetaData.ForceLoadSession
						local force_load_uninterrupted = false
						if force_load_session ~= nil then
							force_load_uninterrupted = IsThisSession(force_load_session)
						end
						if force_load_uninterrupted == true then
							if request_force_load == false then
								force_load_steps = force_load_steps + 1
								if force_load_steps == SETTINGS.ForceLoadMaxSteps then
									steal_session = true
								end
							end
							task.wait() -- Overload prevention
						else
							-- Another session tried to force load this profile:
							ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
							return nil
						end
						request_force_load = false -- Only request a force load once
					elseif aggressive_steal == true then
						task.wait() -- Overload prevention
					else
						local handler_result = not_released_handler(active_session[1], active_session[2])
						if handler_result == "Repeat" then
							task.wait() -- Overload prevention
						elseif handler_result == "Cancel" then
							ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
							return nil
						elseif handler_result == "ForceLoad" then
							force_load = true
							request_force_load = true
							task.wait() -- Overload prevention
						elseif handler_result == "Steal" then
							aggressive_steal = true
							task.wait() -- Overload prevention
						else
							error(
								"[ProfileService]: Invalid return from not_released_handler (\"" .. tostring(handler_result) .. "\")(" .. type(handler_result) .. ");" ..
									"\n" .. IdentifyProfile(self._profile_store_name, self._profile_store_scope, profile_key) ..
									" Traceback:\n" .. debug.traceback()
							)
						end
					end
				end
			else
				ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
				return nil -- In this scenario it is likely the ProfileService.ServiceLocked flag was raised
			end
		else
			task.wait() -- Overload prevention
		end
	end
	ActiveProfileLoadJobs = ActiveProfileLoadJobs - 1
	return nil -- If loop breaks return nothing
end

function ProfileStore:GlobalUpdateProfileAsync(profile_key, update_handler, _use_mock) --> [GlobalUpdates / nil] (update_handler(GlobalUpdates))
	if type(profile_key) ~= "string" or string.len(profile_key) == 0 then
		error("[ProfileService]: Invalid profile_key")
	end
	if type(update_handler) ~= "function" then
		error("[ProfileService]: Invalid update_handler")
	end

	if ProfileService.ServiceLocked == true then
		return nil
	end

	WaitForPendingProfileStore(self)

	while ProfileService.ServiceLocked == false do
		-- Updating profile:
		local loaded_data = StandardProfileUpdateAsyncDataStore(
			self,
			profile_key,
			{
				ExistingProfileHandle = nil,
				MissingProfileHandle = nil,
				EditProfile = function(latest_data)
					-- Running update_handler:
					local global_updates_object = {
						_updates_latest = latest_data.GlobalUpdates,
						_update_handler_mode = true,
					}
					setmetatable(global_updates_object, GlobalUpdates)
					update_handler(global_updates_object)
				end,
			},
			_use_mock == UseMockTag
		)
		CustomWriteQueueMarkForCleanup(self._profile_store_lookup, profile_key)
		-- Handling loaded_data:
		if loaded_data ~= nil then
			-- Return GlobalUpdates object (Update successful):
			local global_updates_object = {
				_updates_latest = loaded_data.GlobalUpdates,
			}
			setmetatable(global_updates_object, GlobalUpdates)
			return global_updates_object
		else
			task.wait() -- Overload prevention
		end
	end
	return nil -- Return nothing (Update unsuccessful)
end

function ProfileStore:ViewProfileAsync(profile_key, version, _use_mock) --> [Profile / nil]
	if type(profile_key) ~= "string" or string.len(profile_key) == 0 then
		error("[ProfileService]: Invalid profile_key")
	end

	if ProfileService.ServiceLocked == true then
		return nil
	end

	WaitForPendingProfileStore(self)

	if version ~= nil and (_use_mock == UseMockTag or UseMockDataStore == true) then
		return nil -- No version support in mock mode
	end

	while ProfileService.ServiceLocked == false do
		-- Load profile:
		local loaded_data, key_info = StandardProfileUpdateAsyncDataStore(
			self,
			profile_key,
			{
				ExistingProfileHandle = nil,
				MissingProfileHandle = function(latest_data)
					latest_data.Data = DeepCopyTable(self._profile_template)
					latest_data.MetaData = {
						ProfileCreateTime = os.time(),
						SessionLoadCount = 0,
						ActiveSession = nil,
						ForceLoadSession = nil,
						MetaTags = {},
					}
				end,
				EditProfile = nil,
			},
			_use_mock == UseMockTag,
			true, -- Use :GetAsync()
			version -- DataStore key version
		)
		CustomWriteQueueMarkForCleanup(self._profile_store_lookup, profile_key)
		-- Handle load_data:
		if loaded_data ~= nil then
			if key_info == nil then
				return nil -- Load was successful, but the key was empty - return no profile object
			end
			-- Create Profile object:
			local global_updates_object = {
				_updates_latest = loaded_data.GlobalUpdates, -- {0, {}}
				_profile = nil,
			}
			setmetatable(global_updates_object, GlobalUpdates)
			local profile = {
				Data = loaded_data.Data,
				MetaData = loaded_data.MetaData,
				MetaTagsUpdated = Madwork.NewScriptSignal(),

				RobloxMetaData = loaded_data.RobloxMetaData or {},
				UserIds = loaded_data.UserIds or {},
				KeyInfo = key_info,
				KeyInfoUpdated = Madwork.NewScriptSignal(),

				GlobalUpdates = global_updates_object,

				_profile_store = self,
				_profile_key = profile_key,

				_view_mode = true,

				_load_timestamp = os.clock(),
			}
			setmetatable(profile, Profile)
			global_updates_object._profile = profile
			-- Returning Profile object:
			return profile
		else
			task.wait() -- Overload prevention
		end
	end
	return nil -- If loop breaks return nothing
end

function ProfileStore:ProfileVersionQuery(profile_key, sort_direction, min_date, max_date, _use_mock) --> [ProfileVersionQuery]
	if type(profile_key) ~= "string" or string.len(profile_key) == 0 then
		error("[ProfileService]: Invalid profile_key")
	end

	if ProfileService.ServiceLocked == true then
		return setmetatable({}, ProfileVersionQuery) -- Silently fail :Next() requests
	end

	WaitForPendingProfileStore(self)

	if _use_mock == UseMockTag or UseMockDataStore == true then
		error("[ProfileService]: :ProfileVersionQuery() is not supported in mock mode")
	end

	-- Type check:
	if sort_direction ~= nil and (typeof(sort_direction) ~= "EnumItem"
		or sort_direction.EnumType ~= Enum.SortDirection) then
		error("[ProfileService]: Invalid sort_direction (" .. tostring(sort_direction) .. ")")
	end

	if min_date ~= nil and typeof(min_date) ~= "DateTime" and typeof(min_date) ~= "number" then
		error("[ProfileService]: Invalid min_date (" .. tostring(min_date) .. ")")
	end

	if max_date ~= nil and typeof(max_date) ~= "DateTime" and typeof(max_date) ~= "number" then
		error("[ProfileService]: Invalid max_date (" .. tostring(max_date) .. ")")
	end

	min_date = typeof(min_date) == "DateTime" and min_date.UnixTimestampMillis or min_date
	max_date = typeof(max_date) == "DateTime" and max_date.UnixTimestampMillis or max_date

	local profile_version_query = {
		_profile_store = self,
		_profile_key = profile_key,
		_sort_direction = sort_direction,
		_min_date = min_date,
		_max_date = max_date,

		_query_pages = nil,
		_query_index = 0,
		_query_failure = false,

		_is_query_yielded = false,
		_query_queue = {},
	}
	setmetatable(profile_version_query, ProfileVersionQuery)

	return profile_version_query

end

function ProfileStore:WipeProfileAsync(profile_key, _use_mock) --> is_wipe_successful [bool]
	if type(profile_key) ~= "string" or string.len(profile_key) == 0 then
		error("[ProfileService]: Invalid profile_key")
	end

	if ProfileService.ServiceLocked == true then
		return false
	end

	WaitForPendingProfileStore(self)

	local wipe_status = false

	if _use_mock == UseMockTag then -- Used when the profile is accessed through ProfileStore.Mock
		local mock_data_store = UserMockDataStore[self._profile_store_lookup]
		if mock_data_store ~= nil then
			mock_data_store[profile_key] = nil
		end
		wipe_status = true
		task.wait() -- Simulate API call yield
	elseif UseMockDataStore == true then -- Used when API access is disabled
		local mock_data_store = MockDataStore[self._profile_store_lookup]
		if mock_data_store ~= nil then
			mock_data_store[profile_key] = nil
		end
		wipe_status = true
		task.wait() -- Simulate API call yield
	else
		wipe_status = pcall(function()
			self._global_data_store:RemoveAsync(profile_key)
		end)
	end

	CustomWriteQueueMarkForCleanup(self._profile_store_lookup, profile_key)

	return wipe_status
end

-- New ProfileStore:

function ProfileService.GetProfileStore(profile_store_index, profile_template) --> [ProfileStore]

	local profile_store_name
	local profile_store_scope = nil

	-- Parsing profile_store_index:
	if type(profile_store_index) == "string" then
		-- profile_store_index as string:
		profile_store_name = profile_store_index
	elseif type(profile_store_index) == "table" then
		-- profile_store_index as table:
		profile_store_name = profile_store_index.Name
		profile_store_scope = profile_store_index.Scope
	else
		error("[ProfileService]: Invalid or missing profile_store_index")
	end

	-- Type checking:
	if profile_store_name == nil or type(profile_store_name) ~= "string" then
		error("[ProfileService]: Missing or invalid \"Name\" parameter")
	elseif string.len(profile_store_name) == 0 then
		error("[ProfileService]: ProfileStore name cannot be an empty string")
	end

	if profile_store_scope ~= nil and (type(profile_store_scope) ~= "string" or string.len(profile_store_scope) == 0) then
		error("[ProfileService]: Invalid \"Scope\" parameter")
	end

	if type(profile_template) ~= "table" then
		error("[ProfileService]: Invalid profile_template")
	end

	local profile_store
	profile_store = {
		Mock = {
			LoadProfileAsync = function(_, profile_key, not_released_handler)
				return profile_store:LoadProfileAsync(profile_key, not_released_handler, UseMockTag)
			end,
			GlobalUpdateProfileAsync = function(_, profile_key, update_handler)
				return profile_store:GlobalUpdateProfileAsync(profile_key, update_handler, UseMockTag)
			end,
			ViewProfileAsync = function(_, profile_key, version)
				return profile_store:ViewProfileAsync(profile_key, version, UseMockTag)
			end,
			FindProfileVersionAsync = function(_, profile_key, sort_direction, min_date, max_date)
				return profile_store:FindProfileVersionAsync(profile_key, sort_direction, min_date, max_date, UseMockTag)
			end,
			WipeProfileAsync = function(_, profile_key)
				return profile_store:WipeProfileAsync(profile_key, UseMockTag)
			end
		},

		_profile_store_name = profile_store_name,
		_profile_store_scope = profile_store_scope,
		_profile_store_lookup = profile_store_name .. "\0" .. (profile_store_scope or ""),

		_profile_template = profile_template,
		_global_data_store = nil,
		_loaded_profiles = {},
		_profile_load_jobs = {},
		_mock_loaded_profiles = {},
		_mock_profile_load_jobs = {},
		_is_pending = false,
	}
	setmetatable(profile_store, ProfileStore)

	local options = Instance.new("DataStoreOptions")
	options:SetExperimentalFeatures({v2 = true})

	if IsLiveCheckActive == true then
		profile_store._is_pending = true
		task.spawn(function()
			WaitForLiveAccessCheck()
			if UseMockDataStore == false then
				profile_store._global_data_store = DataStoreService:GetDataStore(profile_store_name, profile_store_scope, options)
			end
			profile_store._is_pending = false
		end)
	else
		if UseMockDataStore == false then
			profile_store._global_data_store = DataStoreService:GetDataStore(profile_store_name, profile_store_scope, options)
		end
	end

	return profile_store
end

function ProfileService.IsLive() --> [bool] -- (CAN YIELD!!!)

	WaitForLiveAccessCheck()

	return UseMockDataStore == false

end

----- Initialize -----

if IsStudio == true then
	IsLiveCheckActive = true
	task.spawn(function()
		local status, message = pcall(function()
			-- This will error if current instance has no Studio API access:
			DataStoreService:GetDataStore("____PS"):SetAsync("____PS", os.time())
		end)
		local no_internet_access = status == false and string.find(message, "ConnectFail", 1, true) ~= nil
		if no_internet_access == true then
			warn("[ProfileService]: No internet access - check your network connection")
		end
		if status == false and
			(string.find(message, "403", 1, true) ~= nil or -- Cannot write to DataStore from studio if API access is not enabled
				string.find(message, "must publish", 1, true) ~= nil or -- Game must be published to access live keys
				no_internet_access == true) then -- No internet access

			UseMockDataStore = true
			ProfileService._use_mock_data_store = true
			print("[ProfileService]: Roblox API services unavailable - data will not be saved")
		else
			print("[ProfileService]: Roblox API services available - data will be saved")
		end
		IsLiveCheckActive = false
	end)
end

----- Connections -----

-- Auto saving and issue queue managing:
RunService.Heartbeat:Connect(function()
	-- 1) Auto saving: --
	local auto_save_list_length = #AutoSaveList
	if auto_save_list_length > 0 then
		local auto_save_index_speed = SETTINGS.AutoSaveProfiles / auto_save_list_length
		local os_clock = os.clock()
		while os_clock - LastAutoSave > auto_save_index_speed do
			LastAutoSave = LastAutoSave + auto_save_index_speed
			local profile = AutoSaveList[AutoSaveIndex]
			if os_clock - profile._load_timestamp < SETTINGS.AutoSaveProfiles then
				-- This profile is freshly loaded - auto-saving immediately after loading will cause a warning in the log:
				profile = nil
				for _ = 1, auto_save_list_length - 1 do
					-- Move auto save index to the right:
					AutoSaveIndex = AutoSaveIndex + 1
					if AutoSaveIndex > auto_save_list_length then
						AutoSaveIndex = 1
					end
					profile = AutoSaveList[AutoSaveIndex]
					if os_clock - profile._load_timestamp >= SETTINGS.AutoSaveProfiles then
						break
					else
						profile = nil
					end
				end
			end
			-- Move auto save index to the right:
			AutoSaveIndex = AutoSaveIndex + 1
			if AutoSaveIndex > auto_save_list_length then
				AutoSaveIndex = 1
			end
			-- Perform save call:
			if profile ~= nil then
				task.spawn(SaveProfileAsync, profile) -- Auto save profile in new thread
			end
		end
	end
	-- 2) Issue queue: --
	-- Critical state handling:
	if ProfileService.CriticalState == false then
		if #IssueQueue >= SETTINGS.IssueCountForCriticalState then
			ProfileService.CriticalState = true
			ProfileService.CriticalStateSignal:Fire(true)
			CriticalStateStart = os.clock()
			warn("[ProfileService]: Entered critical state")
		end
	else
		if #IssueQueue >= SETTINGS.IssueCountForCriticalState then
			CriticalStateStart = os.clock()
		elseif os.clock() - CriticalStateStart > SETTINGS.CriticalStateLast then
			ProfileService.CriticalState = false
			ProfileService.CriticalStateSignal:Fire(false)
			warn("[ProfileService]: Critical state ended")
		end
	end
	-- Issue queue:
	while true do
		local issue_time = IssueQueue[1]
		if issue_time == nil then
			break
		elseif os.clock() - issue_time > SETTINGS.IssueLast then
			table.remove(IssueQueue, 1)
		else
			break
		end
	end
end)

-- Release all loaded profiles when the server is shutting down:
task.spawn(function()
	WaitForLiveAccessCheck()
	Madwork.ConnectToOnClose(
		function()
			ProfileService.ServiceLocked = true
			-- 1) Release all active profiles: --
			-- Clone AutoSaveList to a new table because AutoSaveList changes when profiles are released:
			local on_close_save_job_count = 0
			local active_profiles = {}
			for index, profile in ipairs(AutoSaveList) do
				active_profiles[index] = profile
			end
			-- Release the profiles; Releasing profiles can trigger listeners that release other profiles, so check active state:
			for _, profile in ipairs(active_profiles) do
				if profile:IsActive() == true then
					on_close_save_job_count = on_close_save_job_count + 1
					task.spawn(function() -- Save profile on new thread
						SaveProfileAsync(profile, true)
						on_close_save_job_count = on_close_save_job_count - 1
					end)
				end
			end
			-- 2) Yield until all active profile jobs are finished: --
			while on_close_save_job_count > 0 or ActiveProfileLoadJobs > 0 or ActiveProfileSaveJobs > 0 do
				task.wait()
			end
			return -- We're done!
		end,
		UseMockDataStore == false -- Always run this OnClose task if using Roblox API services
	)
end)

return ProfileService]]></ProtectedString>
					<int64 name="SourceAssetId">5331689994</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500005d9b</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBXD438D0EEAAAE4FF6A5BF3351A5557232">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">PlayerData</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500005da7</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBXF0855627C2BF4F8385607026E5464AF9">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Template</string>
					<string name="ScriptGuid">{A266B918-876A-4094-8E12-C79D1B133BE2}</string>
					<ProtectedString name="Source"><![CDATA[local DEEFAULT_AUTO_INFO = {
	Active = false,
	Duration = 10
}

local Template = {
	Shuriken = 0,
	Gems = 0,
	Auto = {
		Fast =  DEEFAULT_AUTO_INFO,
		Regular =  DEEFAULT_AUTO_INFO
	}
}

return Template
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500005dae</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXA34A6243E7C74B298F5B6A2477DD8018">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Manager</string>
					<string name="ScriptGuid">{12E1C057-C3DC-4EA3-A66E-618179BCEEC9}</string>
					<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Remotes = ReplicatedStorage.Remotes

local Manager = {}

Manager.Profiles = {}

function Manager.AdjustShuriken(player: Player, amount: number)
	local profile = Manager.Profiles[player]
	if not profile then return end
	profile.Data.Shuriken += amount
	player.leaderstats.Shuriken.Value = profile.Data.Shuriken
	Remotes.UpdateShuriken:FireClient(player, profile.Data.Shuriken)
end

local function GetData(player: Player, directory: string)
	local profile = Manager.Profiles[player]
	if not profile then return end
	return profile.Data[directory]
end

local function GetAutoClickMode(player: Player, buttonType: "Fast" | "Regular")
	local profile = Manager.Profiles[player]
	if not profile then return end
	return profile.Data.Auto[buttonType].Active
end

Remotes.GetData.OnServerInvoke = GetData
Remotes.GetAutoClickMode.OnServerInvoke = GetAutoClickMode

return Manager]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500005db1</UniqueId>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX433F36A1F7C342598B6297F6B4251B5F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<bool name="Disabled">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Data</string>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{3B3DA102-0ADD-4AAB-B8D4-94016FB30678}</string>
					<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local ServerScriptService = game:GetService("ServerScriptService")

local Template = require(ServerScriptService.PlayerData.Template)
local Manager = require(ServerScriptService.PlayerData.Manager)
local ProfileService = require(ServerScriptService.Libs.ProfileService)

local ProfileStore = ProfileService.GetProfileStore("Production", Template)

local KICK_MESSAGE = "Data issue, try again shortly. If issue persists, contact us!"

local function CreateLeaderstats(player: Player)
	local profile = Manager.Profiles[player]
	if not profile then return end

	local leaderstats = Instance.new("Folder")
	leaderstats.Name = "leaderstats"
	leaderstats.Parent = player

	local Shuriken = Instance.new("NumberValue")
	Shuriken.Name = "Shuriken"
	Shuriken.Value = profile.Data.Shuriken
	Shuriken.Parent = leaderstats

	local Gems = Instance.new("NumberValue")
	Gems.Name = "Gems"
	Gems.Value = profile.Data.Gems
	Gems.Parent = leaderstats
end

local function LoadProfile(player: Player)
	local profile = ProfileStore:LoadProfileAsync("Player_" .. player.UserId)
	if not profile then
		player:Kick(KICK_MESSAGE)
		return
	end

	profile:AddUserId(player.UserId)
	profile:Reconcile()
	profile:ListenToRelease(function()
		Manager.Profiles[player] = nil
		if player then
			player:Kick(KICK_MESSAGE)
		end
	end)

	if Players:GetPlayerByUserId(player.UserId) then
		Manager.Profiles[player] = profile
		CreateLeaderstats(player)
	else
		profile:Release()
	end
end

for _, player in Players:GetPlayers() do
	task.spawn(LoadProfile, player)
end

Players.PlayerAdded:Connect(LoadProfile)
Players.PlayerRemoving:Connect(function(player)
	local profile = Manager.Profiles[player]
	if profile then
		profile:Release()
	end
end)
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500005db4</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXFDBB899D60E249EFA847A00F86A48A8B">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Shuriken</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{57CE0B77-88B7-4345-924F-A759167C1377}</string>
				<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerScriptService  = game:GetService("ServerScriptService")

local Remotes = ReplicatedStorage.Remotes
local PlayerData = require(ServerScriptService.PlayerData.Manager)

local Cooldown = {}

local CLICK_COOLDOWN = 0.5


local function Shuriken(player: Player)
	if table.find(Cooldown, player) then return end
	table.insert(Cooldown, player)
	task.delay(CLICK_COOLDOWN, function()
		local foundPlayer = table.find(Cooldown, player)
		if foundPlayer then
			table.remove(Cooldown, foundPlayer)
		end
	end)
	
	PlayerData.AdjustShuriken(player, 1)
end

Remotes.Shuriken.OnServerEvent:Connect(Shuriken)
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">047d4c366c39edd00855b0620000b8a7</UniqueId>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX08B9CB4CD6CE48EF90BA7A90ED146EE5">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">AutoClick</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{8823FD0C-09A1-420A-832E-F4A63F8CA5F4}</string>
				<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerScriptService  = game:GetService("ServerScriptService")
local Players  = game:GetService("Players")

local Remotes = ReplicatedStorage.Remotes
local PlayerData = require(ServerScriptService.PlayerData.Manager)

local function UpdateAutoClicker(player: Player, buttonType: "Fast" | "Regular")
	local profile = PlayerData.Profiles[player]
	if not profile then return end
	
	local isActive = profile.Data.Auto[buttonType].Active
	local duration = profile.Data.Auto[buttonType].Duration
	
	if isActive then
		profile.Data.Auto[buttonType].Active = false
		Remotes.UpdateAutoClicker:FireClient(player, buttonType, false)
	elseif not isActive and duration > 0 then
		profile.Data.Auto[buttonType].Active = true
		Remotes.UpdateAutoClicker:FireClient(player, buttonType, true)
	end
end

Remotes.UpdateAutoClicker.OnServerEvent:Connect(UpdateAutoClicker)

local isSecond = false

while true do
	isSecond = not isSecond
	for _, player in Players:GetPlayers() do
		local profile = PlayerData.Profiles[player]
		if not profile then continue end
		
		local isRegularActive = profile.Data.Auto.Regular.Active
		local regularDuration = profile.Data.Auto.Regular.Duration
		local isFastActive = profile.Data.Auto.Fast.Active
		local fastDuration = profile.Data.Auto.Fast.Duration
		
		if isFastActive then
			PlayerData.AdjustClicks(player, 1)
			
			if isSecond then
				profile.Data.Auto.Fast.Duration -= 1
			end
			
			if profile.Data.Auto.Fast.Duration <= 0 then
				profile.Data.Auto.Fast.Active = false
				Remotes.UpdateAutoClicker:FireClient(player, "Fast", false)
			end		
		end
		
		if isSecond and isRegularActive then
			PlayerData.AdjustClicks(player, 1)
			profile.Data.Auto.Regular.Duration -= 1
			
			if profile.Data.Auto.Regular.Duration <= 0 then
				profile.Data.Auto.Regular.Active = false
				Remotes.UpdateAutoClicker:FireClient(player, "Regular", false)
			end	
		end
		
	end
	
	task.wait(.5)
end]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00005f76</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="ServerStorage" referent="RBX0E16F1275DEF468CBE79902C6C4BBDA7">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00000370</UniqueId>
		</Properties>
	</Item>
	<Item class="ServiceVisibilityService" referent="RBX22761AE377D4455CAB2E1D65C098249F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<BinaryString name="HiddenServices">AAAAAA==</BinaryString>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServiceVisibilityService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000705</UniqueId>
			<BinaryString name="VisibleServices">AAAAAA==</BinaryString>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBX7480494D747544EC919BFF97BF0D60E7">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000719</UniqueId>
		</Properties>
	</Item>
	<Item class="GuidRegistryService" referent="RBX0CBEB627CE2545A5BAC3841568A41F30">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">GuidRegistryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e00000399</UniqueId>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX35005B15630547AF99494F070E8415B4">
		<Properties>
			<Color3 name="Ambient">
				<R>0.274509817</R>
				<G>0.274509817</G>
				<B>0.274509817</B>
			</Color3>
			<BinaryString name="AttributesSerialize">AQAAACAAAABSQlhfT3JpZ2luYWxUZWNobm9sb2d5T25GaWxlTG9hZAQDAAAA</BinaryString>
			<float name="Brightness">3</float>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<bool name="DefinesCapabilities">false</bool>
			<float name="EnvironmentDiffuseScale">1</float>
			<float name="EnvironmentSpecularScale">1</float>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.752941251</R>
				<G>0.752941251</G>
				<B>0.752941251</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">0</float>
			<bool name="GlobalShadows">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<token name="LightingStyle">0</token>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.274509817</R>
				<G>0.274509817</G>
				<B>0.274509817</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<bool name="PrioritizeLightingQuality">true</bool>
			<float name="ShadowSoftness">0.200000003</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">3</token>
			<string name="TimeOfDay">14:30:00</string>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f5750000071d</UniqueId>
		</Properties>
		<Item class="SunRaysEffect" referent="RBX20C5054522D3424A871CF4A88D9E5CA8">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="Intensity">0.00999999978</float>
				<string name="Name">SunRays</string>
				<int64 name="SourceAssetId">-1</int64>
				<float name="Spread">0.100000001</float>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f5750000072f</UniqueId>
			</Properties>
		</Item>
		<Item class="DepthOfFieldEffect" referent="RBX7E86E92B06794B9AAFB35C0F0CE95EC1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">false</bool>
				<float name="FarIntensity">0.100000001</float>
				<float name="FocusDistance">0.0500000007</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="InFocusRadius">30</float>
				<string name="Name">DepthOfField</string>
				<float name="NearIntensity">0.75</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000732</UniqueId>
			</Properties>
		</Item>
		<Item class="BloomEffect" referent="RBX4998B3709FF94FD8AC48E2375703D169">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Enabled">true</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="Intensity">1</float>
				<string name="Name">Bloom</string>
				<float name="Size">24</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="Threshold">2</float>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000731</UniqueId>
			</Properties>
		</Item>
		<Item class="Atmosphere" referent="RBXD9900735769D4D9EBDE9CD66968D4481">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<Color3 name="Color">
					<R>0.78039217</R>
					<G>0.78039217</G>
					<B>0.78039217</B>
				</Color3>
				<Color3 name="Decay">
					<R>0.41568628</R>
					<G>0.43921569</G>
					<B>0.490196079</B>
				</Color3>
				<bool name="DefinesCapabilities">false</bool>
				<float name="Density">0.300000012</float>
				<float name="Glare">0</float>
				<float name="Haze">0</float>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Atmosphere</string>
				<float name="Offset">0.25</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000730</UniqueId>
			</Properties>
		</Item>
		<Item class="Sky" referent="RBX269CE76073434BCA95E283A2F8CB9F6B">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="CelestialBodiesShown">true</bool>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<float name="MoonAngularSize">11</float>
				<Content name="MoonTextureId"><url>rbxasset://sky/moon.jpg</url></Content>
				<string name="Name">Sky</string>
				<Content name="SkyboxBk"><url>http://www.roblox.com/asset/?version=1&amp;id=1014344</url></Content>
				<Content name="SkyboxDn"><url>http://www.roblox.com/asset/?version=1&amp;id=1014344</url></Content>
				<Content name="SkyboxFt"><url>http://www.roblox.com/asset/?version=1&amp;id=1014344</url></Content>
				<Content name="SkyboxLf"><url>http://www.roblox.com/asset/?version=1&amp;id=1014344</url></Content>
				<Vector3 name="SkyboxOrientation">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="SkyboxRt"><url>http://www.roblox.com/asset/?version=1&amp;id=1014344</url></Content>
				<Content name="SkyboxUp"><url>http://www.roblox.com/asset/?version=1&amp;id=1014344</url></Content>
				<int64 name="SourceAssetId">55350742</int64>
				<int name="StarCount">5000</int>
				<float name="SunAngularSize">21</float>
				<Content name="SunTextureId"><url>rbxasset://sky/sun.jpg</url></Content>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">047d4c366c39edd00855b06200008700</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="Teams" referent="RBX53CBB7BF91AC449DA7D8975E971D0217">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teams</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000720</UniqueId>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBX449FD08F4E9D42F9A7858A12000A12BB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<bool name="ThrottlePhysicsToRealtime">true</bool>
			<double name="Timeout">10</double>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000721</UniqueId>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBX8F52C667FE714E6886A1ECEDBF62D424">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="Enabled">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f5750000071f</UniqueId>
		</Properties>
	</Item>
	<Item class="LodDataService" referent="RBXA5ADA77FBC1D4D2A9F7CD743ED1C210F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f5750000071e</UniqueId>
		</Properties>
	</Item>
	<Item class="VoiceChatService" referent="RBX6A0BD61ACD01486996788A8F60941ED5">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<token name="DefaultDistanceAttenuation">0</token>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="EnableDefaultVoice">true</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VoiceChatService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">6b668f7ace0e51d50854f6ac00000b13</UniqueId>
			<token name="UseAudioApi">1</token>
		</Properties>
	</Item>
	<Item class="UGCAvatarService" referent="RBX4BECB1BE4EBF4E83B1018A358DC8F262">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">UGCAvatarService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">1cbd1090e1f70ac30854f57500000722</UniqueId>
		</Properties>
	</Item>
	<Item class="VideoService" referent="RBX5975340315C54C9BA76759EAD087D12F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VideoService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e000004bc</UniqueId>
		</Properties>
	</Item>
	<Item class="VirtualInputManager" referent="RBXCBC77F303FD0470D897F5173CE1C94CF">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VirtualInputManager</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">30ab3738f1f2fe490856070e0000594f</UniqueId>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="AqwvCzkKeQPpmqN+d0Dj1w==">Q1NHUEhTBgAAAG4wxUBHdxw1SqZxPnHcijxSC1JDQcUcuMzqfDdrTdNCQBj7PKzi0EIQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/GAAAAAQAAACuR+E9uPsVQDre
nMBiPOG9uPsVQDrenMCuR+E9vvjHP/44p8CuR+E9uPsVQBZwp8BiPOG9uPsVQBZwp8CsR+G9
vvjHP/44p8CuR+E9vvjHPxZwp8CsR+G9vvjHPxZwp8AkAAAAAAAAAAEAAAAFAAAAAAAAAAUA
AAACAAAAAAAAAAIAAAAGAAAAAAAAAAYAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAABAAAA
AQAAAAQAAAAHAAAAAQAAAAcAAAAFAAAAAgAAAAUAAAAHAAAAAgAAAAcAAAAGAAAAAwAAAAYA
AAAHAAAAAwAAAAcAAAAEAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPyEAAAAEAAAAtUfhPbj7FUAkR6dAZTzhvbj7FUAkR6dAtUfhPXVxDUAkR6dAtUfhPbj7
FUC+DqVAr0fhvbj7FUBWjJxAr0fhvU4UyD8kR6dAazzhPb74xz8kR6dAazzhPb74xz/i5qZA
azzhPbj7FUBWjJxAr0fhvb74xz/i5qZAr0fhvb74xz8kR6dANgAAAAAAAAABAAAABQAAAAAA
AAAFAAAACgAAAAAAAAAKAAAABgAAAAAAAAAGAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAA
CAAAAAAAAAAIAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAIAAAAGAAAABwAAAAIA
AAAHAAAAAwAAAAMAAAAHAAAACAAAAAQAAAAIAAAABwAAAAQAAAAHAAAACQAAAAQAAAAJAAAA
CgAAAAQAAAAKAAAABQAAAAYAAAAKAAAACQAAAAYAAAAJAAAABwAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8YAAAABAAAAFw84b35/BVAFnCnwLBH4T35/BVA
FnCnwFw84b35/BVAEt2cwKZH4b2T/UdAFHWNwFw84b2T/UdAFnCnwLBH4T2T/UdAFnCnwLBH
4T35/BVAEt2cwLBH4T2T/UdAFHWNwCQAAAAAAAAAAQAAAAYAAAAAAAAABgAAAAIAAAAAAAAA
AgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAAcA
AAABAAAABwAAAAYAAAACAAAABgAAAAcAAAACAAAABwAAAAMAAAADAAAABwAAAAUAAAADAAAA
BQAAAAQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/HgAAAAQA
AACwR+G9+fwVQDmLnEByPOE9+fwVQDmLnEBmPOG9+fwVQCRHp0BmPOG9k/1HQCRHp0CwR+G9
D14rQE4fmECwR+G9k/1HQDIjjUByPOE9k/1HQDIjjUC8R+E9ZvA/QCRHp0ByPOE9+fwVQCRH
p0C8R+E9k/1HQCRHp0AwAAAAAAAAAAEAAAAIAAAAAAAAAAgAAAACAAAAAAAAAAIAAAADAAAA
AAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAABAAAAAQAAAAYA
AAAHAAAAAQAAAAcAAAAIAAAAAgAAAAgAAAAHAAAAAgAAAAcAAAAJAAAAAgAAAAkAAAADAAAA
AwAAAAkAAAAGAAAAAwAAAAYAAAAFAAAAAwAAAAUAAAAEAAAABgAAAAkAAAAHAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPx4AAAAEAAAAcjzhPdBbrMByL60/
cjzhPVE2r8B0MS0/sEfhvdBbrMByL60/vEfhPdxLwsByL60/sEfhvVE2r8B0MS0/cjzhPb4l
xcB0MS0/sEfhvR5brcByL60/ZjzhvdxLwsByL60/sEfhvZ2uusB0MS0/Zjzhvb4lxcB0MS0/
MAAAAAAAAAABAAAABAAAAAAAAAAEAAAAAgAAAAAAAAACAAAABgAAAAAAAAAGAAAABwAAAAAA
AAAHAAAAAwAAAAAAAAADAAAAAQAAAAEAAAADAAAABQAAAAEAAAAFAAAACQAAAAEAAAAJAAAA
CAAAAAEAAAAIAAAABAAAAAIAAAAEAAAACAAAAAIAAAAIAAAABgAAAAMAAAAHAAAACQAAAAMA
AAAJAAAABQAAAAYAAAAIAAAABwAAAAcAAAAIAAAACQAAABAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAgD8nAAAABAAAALBH4T1zNa/AdTEtP7BH4b1zNa/AdTEtP7BH
4T3mtK/AdTEtP7BH4T31D7LAAPCAOOhMortzNa/AHi0tP7BH4b31D7LAAPCAOLBH4b1EsLrA
dTEtP2Y84T33JcXAdTEtP2Y84T3TBMjAAPCAOGY84T3a/8fAAACgtrBH4b3a/8fAAACgtrBH
4b3TBMjAAPCAOGY84b33JcXAdTEtP0IAAAAAAAAAAQAAAAYAAAAAAAAABgAAAAwAAAAAAAAA
DAAAAAcAAAAAAAAABwAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEA
AAABAAAABAAAAAUAAAABAAAABQAAAAoAAAABAAAACgAAAAsAAAABAAAACwAAAAYAAAACAAAA
BwAAAAgAAAACAAAACAAAAAMAAAADAAAABQAAAAQAAAADAAAACAAAAAkAAAADAAAACQAAAAoA
AAADAAAACgAAAAUAAAAGAAAACwAAAAwAAAAHAAAADAAAAAsAAAAHAAAACwAAAAgAAAAIAAAA
CwAAAAoAAAAIAAAACgAAAAkAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
AAAAAIA/GAAAAAQAAABmPOG9UyaVwHHkgcCwR+E9UyaVwHHkgcCwR+G9UyaVwPdFYcCwR+G9
9A5ywHHkgcCwR+E9ThdvwHHkgcCwR+E9UyaVwIQpPsCwR+G9UyaVwIQpPsCwR+G9ThdvwHHk
gcAkAAAAAAAAAAEAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAACAAAAAAAAAAIAAAADAAAA
AAAAAAMAAAAHAAAAAAAAAAcAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAQAAAAFAAAAAgAAAAYA
AAAHAAAAAgAAAAcAAAADAAAABAAAAAcAAAAGAAAABAAAAAYAAAAFAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPxsAAAAEAAAAkziHPTfwlMDMED5AajzhPTfw
lMDMED5AsEfhvTfwlMCLEj5AsEfhveFBbsBr5IFAtEfhPeFBbsBr5IFAtEfhPTFtccBr5IFA
ajzhPTfwlMBr5IFAsEfhvTfwlMA3KGFAZjzhvTfwlMBr5IFAKgAAAAAAAAABAAAABgAAAAAA
AAAGAAAACAAAAAAAAAAIAAAABwAAAAAAAAAHAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAA
BAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAEAAAAFAAAABgAAAAIAAAAHAAAAAwAAAAMA
AAAIAAAABgAAAAMAAAAGAAAABQAAAAMAAAAFAAAABAAAAAMAAAAHAAAACAAAABAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8bAAAABAAAAGY84b20GWZAzuaBwJrI
qL20GWZAzuaBwDymrr3y5pJA8Fc4wGY84b3y5pJA1Fk4wLBH4b0GM3RAaPt4wGY84b3y5pJA
zuaBwGg84T3lHGZAzuaBwGg84T3y5pJA8Fc4wLJH4T3y5pJAzuaBwCoAAAAAAAAAAQAAAAcA
AAAAAAAABwAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAA
BQAAAAgAAAAAAAAACAAAAAYAAAAAAAAABgAAAAEAAAABAAAABgAAAAcAAAACAAAABwAAAAgA
AAACAAAACAAAAAUAAAACAAAABQAAAAMAAAADAAAABQAAAAQAAAAGAAAACAAAAAcAAAAQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/HgAAAAQAAACwR+G94kVlQMDn
gUByPOE94kVlQMDngUBmPOG9yLCSQMDngUCwR+G9DDR0QIlYeEBmPOG9yLCSQApDOEDpQKs9
yLCSQEA/OEByPOE9yLCSQEA/OEC8R+E9XkSPQMDngUC8R+E9yLCSQMDngUC8R+E9yLCSQBn2
fEAwAAAAAAAAAAEAAAAHAAAAAAAAAAcAAAAIAAAAAAAAAAgAAAACAAAAAAAAAAIAAAADAAAA
AAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAABAAAAAQAAAAYA
AAAHAAAAAgAAAAgAAAAJAAAAAgAAAAkAAAAGAAAAAgAAAAYAAAAFAAAAAgAAAAUAAAAEAAAA
AgAAAAQAAAADAAAABgAAAAkAAAAHAAAABwAAAAkAAAAIAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAPycAAAAEAAAAGzHhvaQGFsC1jLfAsEfhvV4Oz795LsHA
bTzhPaQGFsC1jLfAsEfhvaQGFsB8IJ/AsEfhvRQMyL+YacHAbTzhPV4Oz795LsHAuEfhPaQG
FsD6ravAsEfhvaQGFsAmuJ7AbTzhPRQMyL+YacHAsEfhvRQMyL8bE6nAuEfhPaQGFsCaJKvA
bTzhPaQGFsAmuJ7AbTzhPRQMyL8bE6nAQgAAAAAAAAABAAAABQAAAAAAAAAFAAAAAgAAAAAA
AAACAAAABgAAAAAAAAAGAAAACgAAAAAAAAAKAAAACwAAAAAAAAALAAAABwAAAAAAAAAHAAAA
AwAAAAAAAAADAAAAAQAAAAEAAAAEAAAACAAAAAEAAAAIAAAABQAAAAEAAAADAAAABwAAAAEA
AAAHAAAACQAAAAEAAAAJAAAABAAAAAIAAAAFAAAABgAAAAQAAAAJAAAADAAAAAQAAAAMAAAA
CAAAAAUAAAAIAAAABgAAAAYAAAAIAAAADAAAAAYAAAAMAAAACgAAAAcAAAALAAAADAAAAAcA
AAAMAAAACQAAAAoAAAAMAAAACwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8hAAAABAAAALBH4b2kBhbAZGWeQLBH4b0UDMi/WcGoQLpH4T2kBhbAZGWeQLBH
4b2kBhbAvI23QHA84T0UDMi/WcGoQLBH4b0UDMi/cmrBQLpH4T2kBhbAss6eQHA84T2kBhbA
vI23QLBH4b1eDs+/xi7BQHA84T0UDMi/cmrBQHA84T1eDs+/xi7BQDYAAAAAAAAAAQAAAAQA
AAAAAAAABAAAAAIAAAAAAAAAAgAAAAYAAAAAAAAABgAAAAcAAAAAAAAABwAAAAMAAAAAAAAA
AwAAAAgAAAAAAAAACAAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAAkAAAABAAAACQAAAAQA
AAACAAAABAAAAAkAAAACAAAACQAAAAYAAAADAAAABwAAAAoAAAADAAAACgAAAAgAAAAFAAAA
CAAAAAoAAAAFAAAACgAAAAkAAAAGAAAACQAAAAoAAAAGAAAACgAAAAcAAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/JAAAAAQAAACGGuG9PgdIwN0wrcBlPOG9
uv9HwMUzrcC/R+E9PgdIwN0wrcCvR+G9PgdIwFbjkMBlPOG9pAYWwBqOt8C/R+E9uv9HwMUz
rcCvR+G9blE0wIRymMCvR+G9pAYWwOcfn8B1POE9pAYWwDe4nsB1POE9PgdIwFbjkMCvR+G9
pAYWwDe4nsB1POE9pAYWwBqOt8A8AAAAAAAAAAEAAAAFAAAAAAAAAAUAAAACAAAAAAAAAAIA
AAAJAAAAAAAAAAkAAAADAAAAAAAAAAMAAAABAAAAAQAAAAQAAAALAAAAAQAAAAsAAAAFAAAA
AQAAAAMAAAAGAAAAAQAAAAYAAAAHAAAAAQAAAAcAAAAEAAAAAgAAAAUAAAAIAAAAAgAAAAgA
AAAJAAAAAwAAAAkAAAAIAAAAAwAAAAgAAAAKAAAAAwAAAAoAAAAHAAAAAwAAAAcAAAAGAAAA
BAAAAAcAAAAKAAAABAAAAAoAAAAIAAAABAAAAAgAAAALAAAABQAAAAsAAAAIAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyEAAAAEAAAAr0fhvT4HSMB8kJBA
r0fhvaQGFsBQZp5AdTzhPT4HSMB8kJBAr0fhvT4HSMBpMK1AdTzhPaQGFsBQZp5Ar0fhvaQG
FsAejbdAv0fhPW5RNMAIIJhAdTzhPT4HSMBpMK1Ar0fhvbr/R8BXM61AdTzhPaQGFsAejbdA
dTzhPbr/R8BXM61ANgAAAAAAAAABAAAABAAAAAAAAAAEAAAAAgAAAAAAAAACAAAABwAAAAAA
AAAHAAAAAwAAAAAAAAADAAAACAAAAAAAAAAIAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAA
CQAAAAEAAAAJAAAABAAAAAIAAAAEAAAABgAAAAIAAAAGAAAABwAAAAMAAAAHAAAACgAAAAMA
AAAKAAAACAAAAAQAAAAJAAAABgAAAAUAAAAIAAAACgAAAAUAAAAKAAAACQAAAAYAAAAJAAAA
CgAAAAYAAAAKAAAABwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
gD8qAAAABAAAAGY84b29wbLAwDEtwLBH4T29wbLAwDEtwLBH4b0uGpzAwDEtwLBH4b18M63A
ggFIwLBH4T0fI5vAwDEtwLBH4T18M63AggFIwLBH4b0fI5vAwDEtwLBH4b1TJpXAU0ZhwGY8
4b32Q5bAUOWBwLBH4T1TJpXASiw+wLBH4T32Q5bAUOWBwLBH4b1TJpXASiw+wGY84b1TJpXA
UOWBwLBH4T1TJpXAUOWBwEgAAAAAAAAAAQAAAAQAAAAAAAAABAAAAAYAAAAAAAAABgAAAAIA
AAAAAAAAAgAAAAMAAAAAAAAAAwAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAAoAAAABAAAA
CgAAAA0AAAABAAAADQAAAAkAAAABAAAACQAAAAQAAAACAAAABgAAAAsAAAACAAAACwAAAAcA
AAACAAAABwAAAAMAAAADAAAABwAAAAgAAAADAAAACAAAAAoAAAADAAAACgAAAAUAAAAEAAAA
CQAAAAsAAAAEAAAACwAAAAYAAAAHAAAADAAAAAgAAAAHAAAACwAAAAkAAAAHAAAACQAAAA0A
AAAHAAAADQAAAAwAAAAIAAAADAAAAA0AAAAIAAAADQAAAAoAAAAQAAAAAAAAAAAAAAAAAAAA
AAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/LQAAAAQAAABmPOG9+8CywNwzLUCwR+G9l8abwNwz
LUBmPOE9+8CywNwzLUCwR+G9UTOtwPMCSECwR+G9HAKbwNwzLUCwR+E9l8abwNwzLUBmPOE9
UTOtwPMCSEBmPOG94ESWwErlgUCwR+G9tvGUwJcmYUCwR+G9tvGUwPATPkCwR+E9HAKbwNwz
LUCwR+E9tvGUwPATPkBmPOE94ESWwErlgUBmPOG9tvGUwErlgUBmPOE9tvGUwErlgUBOAAAA
AAAAAAEAAAAEAAAAAAAAAAQAAAAKAAAAAAAAAAoAAAAFAAAAAAAAAAUAAAACAAAAAAAAAAIA
AAAGAAAAAAAAAAYAAAADAAAAAAAAAAMAAAABAAAAAQAAAAMAAAAIAAAAAQAAAAgAAAAJAAAA
AQAAAAkAAAAEAAAAAgAAAAUAAAAGAAAAAwAAAAYAAAAMAAAAAwAAAAwAAAAHAAAAAwAAAAcA
AAAIAAAABAAAAAkAAAALAAAABAAAAAsAAAAKAAAABQAAAAoAAAALAAAABQAAAAsAAAAMAAAA
BQAAAAwAAAAGAAAABwAAAAwAAAAOAAAABwAAAA4AAAANAAAABwAAAA0AAAAIAAAACAAAAA0A
AAAOAAAACAAAAA4AAAALAAAACAAAAAsAAAAJAAAACwAAAA4AAAAMAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyEAAAAEAAAArkfhPRL7R0C8cKfAYjzhvRL7
R0C8cKfArkfhPb/9xz+8cKfArkfhPRL7R0DLNa3AYjzhvRL7R0AxM63ArEfhvb/9xz+8cKfA
rkfhPb/9xz8Wa8HArkfhPegTzz+MLsHAGDHhvRL7R0DLNa3AYjzhvegTzz+MLsHAYjzhvb/9
xz8Wa8HANgAAAAAAAAABAAAABQAAAAAAAAAFAAAAAgAAAAAAAAACAAAABgAAAAAAAAAGAAAA
BwAAAAAAAAAHAAAAAwAAAAAAAAADAAAACAAAAAAAAAAIAAAABAAAAAAAAAAEAAAAAQAAAAEA
AAAEAAAABQAAAAIAAAAFAAAACgAAAAIAAAAKAAAABgAAAAMAAAAHAAAACQAAAAMAAAAJAAAA
CAAAAAQAAAAIAAAACQAAAAQAAAAJAAAABQAAAAUAAAAJAAAACgAAAAYAAAAKAAAACQAAAAYA
AAAJAAAABwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8kAAAA
BAAAAL9H4T2//cc/FmvBQGU84b2//cc/FmvBQHU84T2//cc/JEenQL9H4T0S+0dA6jKtQL9H
4T3oE88/Ky7BQK9H4b2//cc/JEenQGU84b3oE88/Ky7BQK9H4b3RG8g/JEenQHU84T0S+0dA
JEenQL9H4T0S+0dAiTWtQGU84b0S+0dAiTWtQGU84b0S+0dAJEenQDwAAAAAAAAAAQAAAAUA
AAAAAAAABQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAkAAAAAAAAACQAAAAQAAAAAAAAA
BAAAAAYAAAAAAAAABgAAAAEAAAABAAAABgAAAAcAAAABAAAABwAAAAUAAAACAAAACAAAAAMA
AAACAAAABQAAAAcAAAACAAAABwAAAAsAAAACAAAACwAAAAgAAAADAAAACAAAAAsAAAADAAAA
CwAAAAoAAAADAAAACgAAAAkAAAAEAAAACQAAAAoAAAAEAAAACgAAAAYAAAAGAAAACgAAAAcA
AAAHAAAACgAAAAsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
JAAAAAQAAABaPOG98uaSQMDngcBaPOG9X0OWQMDngcB2POE98uaSQMDngcBaPOG98uaSQIBa
OMCkR+G9CsGyQCw3LcBaPOG9gDOtQGwCSMB2POE9X0OWQMDngcDAR+E9gDOtQGwCSMB2POE9
8uaSQIBaOMBaPOG9vaiWQCw3LcB2POE9CsGyQCw3LcB2POE9vaiWQCw3LcA8AAAAAAAAAAEA
AAAGAAAAAAAAAAYAAAACAAAAAAAAAAIAAAAIAAAAAAAAAAgAAAADAAAAAAAAAAMAAAAEAAAA
AAAAAAQAAAABAAAAAQAAAAQAAAAFAAAAAQAAAAUAAAAHAAAAAQAAAAcAAAAGAAAAAgAAAAYA
AAAHAAAAAgAAAAcAAAAIAAAAAwAAAAgAAAALAAAAAwAAAAsAAAAJAAAAAwAAAAkAAAAEAAAA
BAAAAAkAAAALAAAABAAAAAsAAAAKAAAABAAAAAoAAAAHAAAABAAAAAcAAAAFAAAABwAAAAoA
AAALAAAABwAAAAsAAAAIAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPyoAAAAEAAAAWjzhvZaxkkChQjhApEfhvSDUq0AANS1AWjzhvW6GlkAANS1AcjzhPZax
kkChQjhAWjzhvZaxkkCq5oFAWjzhvfRClkCq5oFAWjzhvSwzrUBrAkhAWjzhvTzAskAANS1A
cjzhPW6GlkAANS1AvEfhPZaxkkAr9nxAvEfhPZaxkkCq5oFAvEfhPfRClkCq5oFAcjzhPSwz
rUBrAkhAcjzhPTzAskAANS1ASAAAAAAAAAABAAAAAgAAAAAAAAACAAAACAAAAAAAAAAIAAAA
AwAAAAAAAAADAAAACQAAAAAAAAAJAAAACgAAAAAAAAAKAAAABAAAAAAAAAAEAAAAAQAAAAEA
AAAEAAAABQAAAAEAAAAFAAAABgAAAAEAAAAGAAAABwAAAAEAAAAHAAAADQAAAAEAAAANAAAA
CAAAAAEAAAAIAAAAAgAAAAMAAAAIAAAACQAAAAQAAAAKAAAACwAAAAQAAAALAAAABQAAAAUA
AAALAAAADAAAAAUAAAAMAAAABgAAAAYAAAAMAAAADQAAAAYAAAANAAAABwAAAAgAAAANAAAA
CQAAAAkAAAALAAAACgAAAAkAAAANAAAACwAAAAsAAAANAAAADAAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8eAAAABAAAAGkx4b3TBMjAAAAAtRsx4T3TBMjA
AAAAtf5H4b37/8fAAAAAtWkx4b2yS8LAwjGtvxsx4T2yS8LAwjGtv7BH4T2PZqzAwjGtv7BH
4T2dFLLAgO+ku7BH4T12ELLAAAAAtWkx4b12ELLAAAAAtWkx4b2PZqzAwjGtvzAAAAAAAAAA
AQAAAAcAAAAAAAAABwAAAAgAAAAAAAAACAAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQA
AAAAAAAABAAAAAEAAAABAAAABAAAAAUAAAABAAAABQAAAAYAAAABAAAABgAAAAcAAAACAAAA
CAAAAAkAAAACAAAACQAAAAMAAAADAAAACQAAAAUAAAADAAAABQAAAAQAAAAFAAAACQAAAAgA
AAAFAAAACAAAAAcAAAAFAAAABwAAAAYAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/IQAAAAQAAABqPOG9wEvCwG46rb9mPOE9wEvCwG46rb+0R+G9A4utwG46
rb9qPOG9MS7BwKAUz7+wR+E9MS7BwKAUz7+wR+E9kWeswG46rb9qPOG9kWeswG46rb9qPOG9
1CKbwJUvLcBqPOG9mMCywJUvLcCwR+E9mMCywJUvLcCwR+E91CKbwJUvLcA2AAAAAAAAAAEA
AAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAA
AAAAAAQAAAABAAAAAQAAAAQAAAAFAAAAAgAAAAYAAAAHAAAAAgAAAAcAAAAIAAAAAgAAAAgA
AAADAAAAAwAAAAgAAAAJAAAAAwAAAAkAAAAEAAAABAAAAAkAAAAKAAAABAAAAAoAAAAFAAAA
BQAAAAoAAAAHAAAABQAAAAcAAAAGAAAABwAAAAoAAAAJAAAABwAAAAkAAAAIAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyQAAAAEAAAAZTzhvbxLwsCeMa0/
dTzhPbxLwsCeMa0/ZTzhvTIuwcAAEc8/r0fhvX9brcCeMa0/dTzhPXxcrMCeMa0/v0fhPTIu
wcAAEc8/ZTzhvenAssCxMS1Ar0fhvdTGm8CxMS1Ar0fhvXxcrMCeMa0/dTzhPeQCm8CxMS1A
dTzhPenAssCxMS1Ar0fhveQCm8CxMS1APAAAAAAAAAABAAAABQAAAAAAAAAFAAAAAgAAAAAA
AAACAAAAAwAAAAAAAAADAAAACAAAAAAAAAAIAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAA
BQAAAAIAAAAFAAAACgAAAAIAAAAKAAAABgAAAAIAAAAGAAAABwAAAAIAAAAHAAAAAwAAAAMA
AAAHAAAACwAAAAMAAAALAAAACAAAAAQAAAAIAAAACwAAAAQAAAALAAAACQAAAAQAAAAJAAAA
BQAAAAUAAAAJAAAACgAAAAYAAAAKAAAACQAAAAYAAAAJAAAACwAAAAYAAAALAAAABwAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAAHU84T0PGG/A
ZuaBwL9H4T0+B0jAlC+twHU84T0+B0jAnOKQwK9H4b0PGG/AZuaBwHU84T3uQ5bAZuaBwIYa
4b0+B0jAlC+twHU84T3Va43AVG2NwK9H4b0+B0jAnOKQwK9H4b2iEHLAZuaBwGU84b3uQ5bA
ZuaBwGU84b3Va43AVG2NwDYAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAcAAAAAAAAABwAAAAMA
AAAAAAAAAwAAAAgAAAAAAAAACAAAAAkAAAAAAAAACQAAAAQAAAAAAAAABAAAAAEAAAABAAAA
BQAAAAcAAAABAAAABwAAAAIAAAABAAAABAAAAAYAAAABAAAABgAAAAoAAAABAAAACgAAAAUA
AAADAAAABwAAAAgAAAAEAAAACQAAAAoAAAAEAAAACgAAAAYAAAAFAAAACgAAAAcAAAAHAAAA
CgAAAAgAAAAIAAAACgAAAAkAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
AAAAAIA/IQAAAAQAAAByPOE9PgdIwLsxrUCwR+G9PgdIwLsxrUByPOE91WuNwE5tjUC8R+E9
PgdIwGwRlkCwR+G9PgdIwDiRkECwR+G9/UFuwF/mgUBmPOG97kOWwF/mgUBmPOG91WuNwE5t
jUByPOE97kOWwF/mgUC8R+E9PgdIwDiRkEByPOE9/UFuwF/mgUA2AAAAAAAAAAEAAAAHAAAA
AAAAAAcAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAJAAAAAAAAAAkAAAAEAAAAAAAAAAQA
AAABAAAAAQAAAAQAAAAFAAAAAQAAAAUAAAAGAAAAAQAAAAYAAAAHAAAAAgAAAAcAAAAGAAAA
AgAAAAYAAAAIAAAAAgAAAAgAAAADAAAAAwAAAAgAAAAJAAAABAAAAAkAAAAKAAAABAAAAAoA
AAAFAAAABQAAAAoAAAAIAAAABQAAAAgAAAAGAAAACAAAAAoAAAAJAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyQAAAAEAAAAtEfhPQdClkDA54HAZDzhvQdC
lkDA54HAajzhPZgbZkDA54HAajzhPRgASEDIdo3AajzhPRgASEAANa3AajzhPaJpjUAEbY3A
ZDzhvaJpjUAEbY3ArkfhvSRMb0DA54HArkfhvZgbZkDA54HAZDzhvRgASEDIdo3AGTHhvRgA
SEAANa3AZDzhvRgASEDUMq3APAAAAAAAAAABAAAABwAAAAAAAAAHAAAACAAAAAAAAAAIAAAA
AgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAAAAAA
AAAGAAAAAQAAAAEAAAAGAAAABwAAAAIAAAAIAAAACQAAAAIAAAAJAAAAAwAAAAMAAAAJAAAA
CwAAAAMAAAALAAAACgAAAAMAAAAKAAAABAAAAAQAAAAKAAAABgAAAAQAAAAGAAAABQAAAAYA
AAAKAAAACwAAAAYAAAALAAAABwAAAAcAAAALAAAACAAAAAgAAAALAAAACQAAABAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAAL9H4T2bAkhAADWtQGU8
4b2bAkhAADWtQL9H4T2bAkhAvzGtQL9H4T2gaY1ABG2NQGU84b2gaY1ABG2NQK9H4b0BSGVA
wOeBQK9H4b2bAkhAOyONQHU84T2bAkhAOyONQHU84T0BSGVAwOeBQHU84T0FQpZAwOeBQGU8
4b0FQpZAwOeBQDYAAAAAAAAAAQAAAAYAAAAAAAAABgAAAAcAAAAAAAAABwAAAAIAAAAAAAAA
AgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAUAAAABAAAABQAAAAYA
AAACAAAABwAAAAgAAAACAAAACAAAAAMAAAADAAAACAAAAAkAAAADAAAACQAAAAoAAAADAAAA
CgAAAAQAAAAEAAAACgAAAAUAAAAFAAAACgAAAAkAAAAFAAAACQAAAAgAAAAFAAAACAAAAAcA
AAAFAAAABwAAAAYAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
IQAAAAQAAABmPOG9luunQKwwrb+wR+E9luunQKwwrb+wR+G9pJWtQABgC7mwR+G9d5qtQIBB
qbuwR+G9qvi9QKwwrb+wR+E9f0vCQKwwrb+wR+E9pJWtQABgC7mwR+G9vKmtQABgC7lmPOG9
ZP7HQABgC7lmPOG9f0vCQKwwrb+wR+E9ZP7HQABgC7k2AAAAAAAAAAEAAAAGAAAAAAAAAAYA
AAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAJAAAAAAAAAAkAAAAFAAAA
AAAAAAUAAAABAAAAAQAAAAUAAAAKAAAAAQAAAAoAAAAGAAAAAgAAAAYAAAAKAAAAAgAAAAoA
AAAIAAAAAgAAAAgAAAAHAAAAAgAAAAcAAAAEAAAAAgAAAAQAAAADAAAABAAAAAcAAAAIAAAA
BAAAAAgAAAAJAAAABQAAAAkAAAAIAAAABQAAAAgAAAAKAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAPyEAAAAEAAAAsEfhvZ7hp0D9NK0/sEfhPZ7hp0D9NK0/
ZjzhvTBLwkD9NK0/sEfhvb2prUAAAAC1sEfhvZ6VrUAAAAC1sEfhPTBLwkD9NK0/sEfhPZ6V
rUAAAAC1ZjzhvTD/x0AAcAo5ZjzhPTD/x0AAAAC1sEfhPTD/x0AAcAo5sEfhPb2prUAAAAC1
NgAAAAAAAAABAAAABQAAAAAAAAAFAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAA
AAAEAAAABgAAAAAAAAAGAAAAAQAAAAEAAAAGAAAACgAAAAEAAAAKAAAACQAAAAEAAAAJAAAA
BQAAAAIAAAAHAAAAAwAAAAIAAAAFAAAACQAAAAIAAAAJAAAABwAAAAMAAAAHAAAACAAAAAMA
AAAIAAAACgAAAAMAAAAKAAAABgAAAAMAAAAGAAAABAAAAAcAAAAJAAAACAAAAAgAAAAJAAAA
CgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAAHU8
4T0UDMi/JBOpwK9H4b0UDMi/JBOpwHU84T0UDMi/eWnBwL9H4T0oco+97QCwwL9H4T0AwJq5
wrWvwK9H4b0UDMi/smjBwK9H4b0AwJq5wrWvwGU84b0UDMi/eWnBwHU84T0AwJq56v7HwGU8
4b0AwJq5WOXHwBsx4b0AwJq56v7HwDYAAAAAAAAAAQAAAAUAAAAAAAAABQAAAAcAAAAAAAAA
BwAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAYAAAAAAAAABgAAAAEA
AAABAAAABgAAAAUAAAACAAAABwAAAAoAAAACAAAACgAAAAgAAAACAAAACAAAAAMAAAADAAAA
CAAAAAQAAAAEAAAACAAAAAoAAAAEAAAACgAAAAkAAAAEAAAACQAAAAYAAAAFAAAABgAAAAkA
AAAFAAAACQAAAAoAAAAFAAAACgAAAAcAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/JwAAAAQAAAByPOE9mEzCQFo5rb9yPOE9Iy/BQC4Uz79RlZe9mEzCQFo5
rb9yPOE9JO2nQFo5rb+8R+E9mMCyQAE1LcCwR+G9Iy/BQC4Uz79mPOG9gEvCQFo5rb9mPOG9
JO2nQFo5rb9yPOE9SKeWQAE1LcC8R+E9ytSrQAE1LcBmPOG9mMCyQAE1LcCwR+G9k/e9QFo5
rb9mPOG9SKeWQAE1LcBCAAAAAAAAAAEAAAAFAAAAAAAAAAUAAAACAAAAAAAAAAIAAAAGAAAA
AAAAAAYAAAALAAAAAAAAAAsAAAAHAAAAAAAAAAcAAAADAAAAAAAAAAMAAAAJAAAAAAAAAAkA
AAAEAAAAAAAAAAQAAAABAAAAAQAAAAQAAAAKAAAAAQAAAAoAAAAFAAAAAgAAAAUAAAAGAAAA
AwAAAAcAAAAMAAAAAwAAAAwAAAAIAAAAAwAAAAgAAAAJAAAABAAAAAkAAAAIAAAABAAAAAgA
AAAMAAAABAAAAAwAAAAKAAAABQAAAAsAAAAGAAAABQAAAAoAAAAMAAAABQAAAAwAAAALAAAA
BwAAAAsAAAAMAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyEA
AAAEAAAAsEfhPZTAskD/NC1AsEfhPV0vwUCrEM8/ZjzhvZTAskD/NC1AsEfhPV2FlkD/NC1A
ZjzhvV0vwUCrEM8/sEfhPZdMwkD+NK0/sEfhvU6cp0C5abU/ZjzhvV2FlkD/NC1AsEfhPWvh
p0D+NK0/ZjzhvZdMwkD+NK0/sEfhvWvhp0D+NK0/NgAAAAAAAAABAAAABAAAAAAAAAAEAAAA
AgAAAAAAAAACAAAABwAAAAAAAAAHAAAAAwAAAAAAAAADAAAACAAAAAAAAAAIAAAABQAAAAAA
AAAFAAAAAQAAAAEAAAAFAAAACQAAAAEAAAAJAAAABAAAAAIAAAAGAAAABwAAAAIAAAAEAAAA
BgAAAAMAAAAHAAAACgAAAAMAAAAKAAAACAAAAAQAAAAJAAAABgAAAAUAAAAIAAAACgAAAAUA
AAAKAAAACQAAAAYAAAAJAAAACgAAAAYAAAAKAAAABwAAABAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAgD8eAAAABAAAAHU84T0AwJq5Hv7HQGU84b0AwJq5Hv7HQHU8
4T0UDMi/amnBQL9H4T0oco+9Na+vQL9H4T0AwJq5DWSvQGU84b0AwJq5DWSvQK9H4b2LAL+/
mLGpQK9H4b0UDMi/amnBQHU84T0UDMi/CsKoQK9H4b0UDMi/CsKoQDAAAAAAAAAAAQAAAAcA
AAAAAAAABwAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAA
BQAAAAEAAAABAAAABQAAAAYAAAABAAAABgAAAAcAAAACAAAABwAAAAkAAAACAAAACQAAAAgA
AAACAAAACAAAAAMAAAADAAAACAAAAAQAAAAEAAAACAAAAAkAAAAEAAAACQAAAAUAAAAFAAAA
CQAAAAYAAAAGAAAACQAAAAcAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
AAAAAIA/JAAAAAQAAAB0POE9vvjHP1I5p8B0POE9vvjHP9JpwcBmPOG9vvjHP1I5p8C+R+E9
AMCauem0r8B0POE9AAA1NwIAyMBmPOG9vvjHP9JpwcCwR+G9RA2tPw4DqsCwR+G9AMCauem0
r8B0POE9AMCauTD/x8BmPOG9AAA1NwIAyMBmPOG9AMCaubrlx8AcMeG9AMCauTD/x8A8AAAA
AAAAAAEAAAAFAAAAAAAAAAUAAAACAAAAAAAAAAIAAAAHAAAAAAAAAAcAAAADAAAAAAAAAAMA
AAABAAAAAQAAAAMAAAAEAAAAAQAAAAQAAAAJAAAAAQAAAAkAAAAFAAAAAgAAAAUAAAAGAAAA
AgAAAAYAAAAHAAAAAwAAAAcAAAAKAAAAAwAAAAoAAAALAAAAAwAAAAsAAAAIAAAAAwAAAAgA
AAAEAAAABAAAAAgAAAALAAAABAAAAAsAAAAJAAAABQAAAAkAAAAGAAAABgAAAAkAAAAHAAAA
BwAAAAkAAAAKAAAACQAAAAsAAAAKAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAPyEAAAAEAAAAdDzhPQAANTcAAMhAZjzhvQAANTcAAMhAdDzhPQDAmrks/8dA
vkfhPb74xz/GasFAZjzhvQDAmrks/8dAZjzhvb74xz/GasFAsEfhvUQNrT+osKlAvkfhPQDA
mrl5Y69AdDzhPb74xz9s56ZAZjzhvQDAmrl5Y69AsEfhvb74xz9s56ZANgAAAAAAAAABAAAA
BAAAAAAAAAAEAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABQAAAAAAAAAFAAAAAQAAAAEA
AAAFAAAABgAAAAEAAAAGAAAABAAAAAIAAAAEAAAACQAAAAIAAAAJAAAABwAAAAIAAAAHAAAA
AwAAAAMAAAAIAAAACgAAAAMAAAAKAAAABQAAAAMAAAAHAAAACAAAAAQAAAAGAAAACQAAAAUA
AAAKAAAABgAAAAYAAAAKAAAACQAAAAcAAAAJAAAACgAAAAcAAAAKAAAACAAAAA==</SharedString>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>
